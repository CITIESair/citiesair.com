{"version":3,"file":"static/js/904.a89f38c1.chunk.js","mappings":"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","sources":["Components/UppercaseTitle.jsx","Components/AirQuality/AirQualityIndexTable.jsx","Components/ExpandableSection/ExpandableSection.jsx","Pages/Home/About.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/Home.jsx","Components/AirQuality/AQIexplanation.jsx"],"sourcesContent":["import { Skeleton, Typography } from '@mui/material';\n\nexport default function UppercaseTitle({ text, sx, ...otherProps }) {\n  return (\n    <Typography\n      variant=\"h4\"\n      color=\"text.primary\"\n      sx={{\n        fontWeight: 'medium',\n        display: 'block',\n        textTransform: 'uppercase',\n        pb: 3,\n        lineHeight: 1,\n        ...sx\n      }}\n      {...otherProps}\n    >\n      {text || <Skeleton variant='text' />}\n    </Typography>\n  );\n}\n","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { getTranslation, replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\nimport { AQI_Database } from '../../Utils/AirQuality/AirQualityIndexHelper';\nimport { useContext } from 'react';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\nimport { CITIESair } from '../../Utils/GlobalVariables';\n\nexport const StyledTable = styled(Table, {\n  shouldForwardProp: (prop) => prop !== 'tiny',\n})(({ theme, tiny }) => ({\n  minWidth: tiny || 700,\n  '& th, td': {\n    fontSize: tiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: tiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { themePreference, language } = useContext(PreferenceContext);\n\n  const { tiny, hideAQIDescription } = props;\n\n  const returnFormattedBreakpoints = (low, high) => {\n    if (high === Infinity) return `${low}+`;\n    else return `${low} - ${high}`;\n  }\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" tiny={tiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n\n              {!hideAQIDescription &&\n                <TableCell align=\"left\">\n                  {CITIESair}&apos; Suggested Actions\n                </TableCell>\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {AQI_Database.map((element, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: element.color[themePreference] }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {getTranslation(element.category, language)}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.aqiUS.low, element.aqiUS.high)}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.rawPM2_5.low, element.rawPM2_5.high)}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription\n                  && (\n                    <TableCell align=\"left\">\n                      {\n                        parse(getTranslation(element.healthSuggestions.outdoors, language), {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })\n                      }\n                    </TableCell>\n                  )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n    </>\n  );\n}\n\nexport default AirQualityIndexTable;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport * as Tracking from '../../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(1) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n  '& .MuiAccordionSummary-content.Mui-expanded': {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst TooltipText = {\n  expand: \"Click to expand section\",\n  collapse: \"Click to collapse section\"\n}\n\nconst ExpandableSection = (props) => {\n  const { title, content, icon, disabled } = props;\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n    Tracking.sendEventAnalytics(\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\n      {\n        section: title\n      }\n    );\n  };\n\n  return (\n    <Box sx={{\n      '& .MuiAccordion-root.Mui-disabled': {\n        backgroundColor: \"transparent\"\n      }\n    }}>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        disabled={disabled}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ArrowDropDownIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? TooltipText.collapse : TooltipText.expand} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body1\">\n              {title}\n              <Box component=\"span\" sx={{ ml: 0.25 }}>\n                {icon}\n              </Box>\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails sx={{ pt: 0 }}>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;","import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../../Components/ExpandableSection/ExpandableSection';\nimport sectionData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/UtilFunctions';\n\nfunction About() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(sectionData.about.id)} />\n      <Stack spacing={3}>\n        {sectionData.about.content.map((element, index) => (\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {parse(element.mainText, {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n            {\n              element.reference && (\n                <ExpandableSection\n                  title={\"Reference\"}\n                  content={(\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                    </Typography>\n                  )}\n                />\n              )\n            }\n          </Paper>\n        ))}\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ px: 3 }}>\n          {parse(sectionData.disclaimer.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Stack>\n    </>\n  );\n}\n\nexport default About;\n","import { Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport sectionData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/UtilFunctions';\n\nfunction GetInTouch() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(sectionData.getInTouch.id)} />\n      <Paper elevation={2} sx={{ p: 3, pb: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {parse(sectionData.getInTouch.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Paper>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","import { useEffect, useContext } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { Button, Box, Grid, Typography, Container, Divider, useMediaQuery } from '@mui/material';\nimport { MetadataContext } from '../../ContextProviders/MetadataContext';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport About from './About';\n\nimport sectionData from '../../section_data.json';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\n\nimport CurrentAQIGrid from '../../Components/AirQuality/CurrentAQI/CurrentAQIGrid';\n\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport PersonIcon from '@mui/icons-material/Person';\n\nimport GetInTouch from './GetInTouch';\nimport { AppRoutes } from '../../Utils/AppRoutes';\nimport { SensorStatus } from \"../../Components/AirQuality/SensorStatus\";\nimport AQIexplanation from '../../Components/AirQuality/AQIexplanation';\nimport { NYUAD } from '../../Utils/GlobalVariables';\nimport AtAGlance from './AtAGlance';\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\nimport { UserContext } from '../../ContextProviders/UserContext';\nimport NYUADbanner from '../Embeds/NYUADbanner';\nimport OutdoorStationUAE from '../../Components/AirQuality/AirQualityMap/OutdoorStationUAE';\nimport useCurrentSensorsData from '../../hooks/useCurrentSensorsData';\n\nfunction Home({ temperatureUnitPreference, title }) {\n  // Update the page's title\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  const { setCurrentPage, setChartsTitlesList } = useContext(MetadataContext);\n\n  // set current page to home\n  useEffect(() => {\n    setCurrentPage(AppRoutes.home);\n    setChartsTitlesList([]);\n  }, [setCurrentPage, setChartsTitlesList]);\n\n  const { currentSchoolID } = useContext(DashboardContext);\n  const { data: currentSensorsData } = useCurrentSensorsData();\n  const { authenticationState } = useContext(UserContext);\n\n  const displaySensorCounts = () => {\n    if (!currentSensorsData) return null;\n\n    return (\n      <Grid item xs={12}>\n        <Typography variant='body2' color=\"text.secondary\">\n          <b>Sensors status: </b>{\n            currentSensorsData.reduce((count, obj) => obj?.sensor?.sensor_status === SensorStatus.active ? count + 1 : count, 0)\n          } active out of {currentSensorsData.length}\n        </Typography>\n      </Grid>\n    );\n  }\n\n  const isSmallScreen = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const displayDashboardButtons = () => {\n    const isOnlyNYUADButton = currentSchoolID === NYUAD && authenticationState.authenticated;\n\n    return (\n      <Grid item container spacing={1} justifyContent=\"center\" alignItems=\"center\">\n        {\n          isOnlyNYUADButton ? null :\n            (\n              <Grid item xs={12} sm=\"auto\">\n                <Button\n                  component={RouterLink}\n                  variant='contained'\n                  sx={{ width: \"fit-content\" }}\n                  to={authenticationState.authenticated ? AppRoutes.dashboard : AppRoutes.login}\n                  onClick={() => {\n                    Tracking.sendEventAnalytics(\n                      Tracking.Events.internalNavigation,\n                      {\n                        destination_id: authenticationState.authenticated ? AppRoutes.dashboard : AppRoutes.login,\n                        origin_id: AppRoutes.home\n                      }\n                    );\n                  }}\n                >\n                  {authenticationState.authenticated ?\n                    <BarChartIcon sx={{ fontSize: '0.8rem' }} />\n                    : <PersonIcon sx={{ fontSize: '0.8rem' }} />\n                  }\n                  &nbsp;\n                  {authenticationState.authenticated ? `School Private Dashboard` : \"Login Private Dashboard\"}\n                </Button>\n              </Grid>\n            )\n        }\n\n        {\n          isSmallScreen === false && (\n            <Grid item xs={12} sm=\"auto\">\n              <Typography color=\"text.secondary\">|</Typography>\n            </Grid>\n          )\n        }\n\n        <Grid item xs={12} sm=\"auto\">\n          <Button\n            component={RouterLink}\n            variant={isOnlyNYUADButton ? 'contained' : (isSmallScreen ? 'text' : 'outlined')}\n            sx={{ width: \"fit-content\" }}\n            to={AppRoutes.nyuad}\n            onClick={() => {\n              Tracking.sendEventAnalytics(\n                Tracking.Events.internalNavigation,\n                {\n                  destination_id: AppRoutes.nyuad,\n                  destination_school_id: NYUAD,\n                  origin_id: AppRoutes.home\n                }\n              );\n            }}\n          >\n            <BarChartIcon sx={{ fontSize: '0.8rem' }} />\n            NYUAD {isOnlyNYUADButton ? \"\" : \"Public\"} Dashboard\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  return (\n    <Box width=\"100%\">\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <Container sx={{ pt: 1, pb: 3 }}>\n          <UppercaseTitle text={`real-time air quality in the uae`} />\n\n          <AtAGlance />\n\n          <Typography sx={{ mt: 2 }} variant=\"body1\" color=\"text.secondary\">\n            {parse(sectionData.publicOutdoorStations.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n        </Container>\n      </FullWidthBox>\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <OutdoorStationUAE />\n      </FullWidthBox>\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <Container sx={{ pt: 4, pb: 3 }}>\n          <UppercaseTitle text={`real-time air quality at  ${currentSchoolID || \"\"}`} />\n          <Typography variant='body1' color='text.secondary' sx={{ mt: -2, mb: 2 }}>\n            PM2.5 (Particulate Matter Smaller Than 2.5 Micrometer)\n          </Typography>\n\n          <Grid container spacing={2} justifyContent=\"center\" textAlign=\"center\">\n\n            {\n              (currentSchoolID === NYUAD || currentSchoolID === null || currentSchoolID === undefined) ? (\n                <NYUADbanner\n                  initialNyuadCurrentData={currentSensorsData}\n                  isOnBannerPage={false}\n                  disableInteraction={true}\n                  minMapHeight={\"250px\"}\n                />\n              ) : (\n                <Grid item xs={12} lg={10}>\n                  <CurrentAQIGrid\n                    currentSensorsData={currentSensorsData?.slice(0, 3)}\n                    isScreen={false}\n                    temperatureUnitPreference={temperatureUnitPreference}\n                    firstSensorOwnLine={true}\n                  />\n                </Grid>\n              )\n            }\n\n            {displaySensorCounts()}\n\n            {displayDashboardButtons()}\n\n            <Grid item xs={12} textAlign=\"left\">\n              <AQIexplanation />\n            </Grid>\n          </Grid>\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={sectionData.about.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <About />\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={sectionData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <GetInTouch />\n        </Container>\n      </FullWidthBox>\n\n    </Box >\n  );\n}\n\nexport default Home;\n","import { useContext } from 'react';\nimport { Typography, Box } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\nimport AirQualityIndexTable from './AirQualityIndexTable';\nimport ExpandableSection from '../ExpandableSection/ExpandableSection';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nimport InfoIcon from '@mui/icons-material/Info';\n\nconst Explanation = {\n  title: \"Explanation of the US Air Quality Index (AQI) for PM2.5\",\n  subtitle: \"CITIESair uses the <a href='https://www.airnow.gov/aqi/aqi-basics/'>Air Quality Index (AQI)</a> developed by the United States Environmental Protection Agency (EPA) to effectively communicate different levels of PM2.5 air pollution. To calculate the AQI from the raw measurement of PM2.5 concentration (µg/m³), different breakpoints and piecewise linear function are utilized (read more <a href='https://en.wikipedia.org/wiki/Air_quality_index#United_States'>here</a>). Higher AQI values correspond to poorer air quality and greater heath risks to humans.<br><br>The US EPA sets thresholds for PM2.5 concentration, recently updated in February 2024: <sup>[1]</sup><ul><li><b>Annual average</b>: 9.0 µg/m³, corresponding to US AQI <b>50</b></li><li><b>24-hour average</b>: 35.0 µg/m³, corresponding to US AQI <b>100</b></li></ul>In 2021, the World's Heath Organization (WHO) proposed a new guideline for PM2.5<sup>[2]</sup> with stricter thresholds than those of the US EPA:<ul><li><b>Annual average</b>: 5.0 µg/m³, corresponding to US AQI <b>21</b></li><li><b>24-hour average</b>: 15.0 µg/m³, corresponding to US AQI <b>56</b></li></ul>\",\n  reference: \"[1] \\\"National Ambient Air Quality Standards (NAAQS) for PM.\\\" EPA, Environmental Protection Agency, https://www.epa.gov/pm-pollution/national-ambient-air-quality-standards-naaqs-pm.<br>[2] World Health Organization. \\\"WHO global air quality guidelines: particulate matter (PM2. 5 and PM10), ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide: executive summary.\\\" (2021).\",\n}\n\nconst AQIexplanation = () => {\n  const { themePreference } = useContext(PreferenceContext);\n\n  return (\n    <ExpandableSection\n      title={Explanation.title}\n      icon={<InfoIcon sx={{ fontSize: \"1rem\" }} />}\n      content={(\n        <Box>\n          <AirQualityIndexTable themePreference={themePreference} />\n          <Typography\n            component=\"div\"\n            variant=\"body1\"\n            color=\"text.secondary\"\n            sx={{ mt: 2 }}\n          >\n            {parse(Explanation.subtitle, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <ExpandableSection\n            title={\"Reference\"}\n            content={(\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {parse(Explanation.reference, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n            )}\n          />\n        </Box>\n      )}\n    />\n  )\n};\n\nexport default AQIexplanation;"],"names":["UppercaseTitle","_ref","text","sx","otherProps","_objectWithoutProperties","_excluded","_jsx","Typography","_objectSpread","variant","color","fontWeight","display","textTransform","pb","lineHeight","children","Skeleton","StyledTable","styled","Table","shouldForwardProp","prop","theme","tiny","minWidth","fontSize","palette","secondary","breakpoints","down","primary","props","themePreference","language","useContext","PreferenceContext","hideAQIDescription","returnFormattedBreakpoints","low","high","Infinity","concat","_Fragment","Box","overflow","_jsxs","size","TableHead","TableRow","TableCell","pr","width","height","pl","align","CITIESair","TableBody","AQI_Database","map","element","index","border","backgroundColor","getTranslation","category","whiteSpace","aqiUS","rawPM2_5","description","parse","healthSuggestions","outdoors","replace","replacePlainHTMLWithMuiComponents","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","_ref2","marginTop","spacing","flexDirection","paddingLeft","textDecoration","main","marginBottom","TooltipText","title","content","icon","disabled","setExpanded","useState","undefined","onChange","panel","event","isExpanded","Tracking","expandSection","collapseSection","section","expandIcon","ArrowDropDownIcon","id","Tooltip","enterDelay","leaveDelay","component","ml","MuiAccordionDetails","pt","capitalizePhrase","sectionData","Stack","Paper","elevation","p","mainText","reference","ExpandableSection","px","temperatureUnitPreference","useEffect","document","setCurrentPage","setChartsTitlesList","MetadataContext","AppRoutes","home","currentSchoolID","DashboardContext","data","currentSensorsData","useCurrentSensorsData","authenticationState","UserContext","isSmallScreen","useMediaQuery","FullWidthBox","Container","AtAGlance","mt","OutdoorStationUAE","mb","Grid","container","justifyContent","textAlign","NYUAD","NYUADbanner","initialNyuadCurrentData","isOnBannerPage","disableInteraction","minMapHeight","item","xs","lg","CurrentAQIGrid","slice","isScreen","firstSensorOwnLine","reduce","count","obj","_obj$sensor","sensor","sensor_status","SensorStatus","active","length","displayDashboardButtons","isOnlyNYUADButton","authenticated","alignItems","sm","Button","RouterLink","to","dashboard","login","onClick","internalNavigation","destination_id","origin_id","BarChartIcon","PersonIcon","nyuad","destination_school_id","AQIexplanation","Divider","About","GetInTouch","Explanation","InfoIcon","AirQualityIndexTable"],"sourceRoot":""}