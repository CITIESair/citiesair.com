{"version":3,"file":"static/js/325.1ec614e8.chunk.js","mappings":"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","sources":["Components/AirQuality/AQIexplanation.jsx","Components/AirQuality/AirQualityIndexTable.jsx","Components/ExpandableSection/ExpandableSection.jsx","Components/UppercaseTitle.jsx","Pages/Home/About.jsx","Pages/Home/GetInTouch.jsx","Pages/Home/AtAGlance.jsx","Pages/Home/Home.jsx","../node_modules/@mui/icons-material/Face.js","../node_modules/@mui/icons-material/Groups.js","../node_modules/@mui/icons-material/Sensors.js"],"sourcesContent":["import { useContext } from 'react';\nimport { Typography, Box } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\nimport AirQualityIndexTable from './AirQualityIndexTable';\nimport ExpandableSection from '../ExpandableSection/ExpandableSection';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nimport InfoIcon from '@mui/icons-material/Info';\n\nconst Explanation = {\n  title: \"Explanation of the US Air Quality Index (AQI) for PM2.5\",\n  subtitle: \"CITIESair uses the <a href='https://www.airnow.gov/aqi/aqi-basics/'>Air Quality Index (AQI)</a> developed by the United States Environmental Protection Agency (EPA) to effectively communicate different levels of PM2.5 air pollution. To calculate the AQI from the raw measurement of PM2.5 concentration (µg/m³), different breakpoints and piecewise linear function are utilized (read more <a href='https://en.wikipedia.org/wiki/Air_quality_index#United_States'>here</a>). Higher AQI values correspond to poorer air quality and greater heath risks to humans.<br><br>The US EPA sets thresholds for PM2.5 concentration, recently updated in February 2024: <sup>[1]</sup><ul><li><b>Annual average</b>: 9.0 µg/m³, corresponding to US AQI <b>50</b></li><li><b>24-hour average</b>: 35.0 µg/m³, corresponding to US AQI <b>100</b></li></ul>In 2021, the World's Heath Organization (WHO) proposed a new guideline for PM2.5<sup>[2]</sup> with stricter thresholds than those of the US EPA:<ul><li><b>Annual average</b>: 5.0 µg/m³, corresponding to US AQI <b>21</b></li><li><b>24-hour average</b>: 15.0 µg/m³, corresponding to US AQI <b>56</b></li></ul>\",\n  reference: \"[1] \\\"National Ambient Air Quality Standards (NAAQS) for PM.\\\" EPA, Environmental Protection Agency, https://www.epa.gov/pm-pollution/national-ambient-air-quality-standards-naaqs-pm.<br>[2] World Health Organization. \\\"WHO global air quality guidelines: particulate matter (PM2. 5 and PM10), ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide: executive summary.\\\" (2021).\",\n}\n\nconst AQIexplanation = () => {\n  const { themePreference } = useContext(PreferenceContext);\n\n  return (\n    <ExpandableSection\n      title={Explanation.title}\n      icon={<InfoIcon sx={{ fontSize: \"1rem\" }} />}\n      content={(\n        <Box>\n          <AirQualityIndexTable themePreference={themePreference} />\n          <Typography\n            component=\"div\"\n            variant=\"body1\"\n            color=\"text.secondary\"\n            sx={{ mt: 2 }}\n          >\n            {parse(Explanation.subtitle, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <ExpandableSection\n            title={\"Reference\"}\n            content={(\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {parse(Explanation.reference, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n            )}\n          />\n        </Box>\n      )}\n    />\n  )\n};\n\nexport default AQIexplanation;","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { getTranslation, replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\nimport { AQI_Database } from '../../Utils/AirQuality/AirQualityIndexHelper';\nimport { useContext } from 'react';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\nimport { CITIESair } from '../../Utils/GlobalVariables';\n\nexport const StyledTable = styled(Table, {\n  shouldForwardProp: (prop) => prop !== 'tiny',\n})(({ theme, tiny }) => ({\n  minWidth: tiny || 700,\n  '& th, td': {\n    fontSize: tiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: tiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { themePreference, language } = useContext(PreferenceContext);\n\n  const { tiny, hideAQIDescription } = props;\n\n  const returnFormattedBreakpoints = (low, high) => {\n    if (high === Infinity) return `${low}+`;\n    else return `${low} - ${high}`;\n  }\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" tiny={tiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n\n              {!hideAQIDescription &&\n                <TableCell align=\"left\">\n                  {CITIESair}&apos; Suggested Actions\n                </TableCell>\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {AQI_Database.map((element, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: element.color[themePreference] }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {getTranslation(element.category, language)}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.aqiUS.low, element.aqiUS.high)}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.rawPM2_5.low, element.rawPM2_5.high)}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription\n                  && (\n                    <TableCell align=\"left\">\n                      {\n                        parse(getTranslation(element.healthSuggestions.outdoors, language), {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })\n                      }\n                    </TableCell>\n                  )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n    </>\n  );\n}\n\nexport default AirQualityIndexTable;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport * as Tracking from '../../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(1) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n  '& .MuiAccordionSummary-content.Mui-expanded': {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst TooltipText = {\n  expand: \"Click to expand section\",\n  collapse: \"Click to collapse section\"\n}\n\nconst ExpandableSection = (props) => {\n  const { title, content, icon, disabled } = props;\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n    Tracking.sendEventAnalytics(\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\n      {\n        section: title\n      }\n    );\n  };\n\n  return (\n    <Box sx={{\n      '& .MuiAccordion-root.Mui-disabled': {\n        backgroundColor: \"transparent\"\n      }\n    }}>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        disabled={disabled}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ArrowDropDownIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? TooltipText.collapse : TooltipText.expand} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body1\">\n              {title}\n              <Box component=\"span\" sx={{ ml: 0.25 }}>\n                {icon}\n              </Box>\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails sx={{ pt: 0 }}>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;","import { Skeleton, Typography } from '@mui/material';\n\nexport default function UppercaseTitle({ text, sx, ...otherProps }) {\n  return (\n    <Typography\n      variant=\"h4\"\n      color=\"text.primary\"\n      sx={{\n        fontWeight: 'medium',\n        display: 'block',\n        textTransform: 'uppercase',\n        pb: 3,\n        lineHeight: 1,\n        ...sx\n      }}\n      {...otherProps}\n    >\n      {text || <Skeleton variant='text' />}\n    </Typography>\n  );\n}\n","import { Stack, Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport ExpandableSection from '../../Components/ExpandableSection/ExpandableSection';\nimport sectionData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/UtilFunctions';\n\nfunction About() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(sectionData.about.id)} />\n      <Stack spacing={3}>\n        {sectionData.about.content.map((element, index) => (\n          <Paper key={index} elevation={2} sx={{ p: 3 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {parse(element.mainText, {\n                replace: replacePlainHTMLWithMuiComponents,\n              })}\n            </Typography>\n            {\n              element.reference && (\n                <ExpandableSection\n                  title={\"Reference\"}\n                  content={(\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {parse(element.reference, {\n                        replace: replacePlainHTMLWithMuiComponents,\n                      })}\n                    </Typography>\n                  )}\n                />\n              )\n            }\n          </Paper>\n        ))}\n        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ px: 3 }}>\n          {parse(sectionData.disclaimer.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Stack>\n    </>\n  );\n}\n\nexport default About;\n","import { Typography, Paper } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\nimport sectionData from '../../section_data.json';\nimport { replacePlainHTMLWithMuiComponents, capitalizePhrase } from '../../Utils/UtilFunctions';\n\nfunction GetInTouch() {\n  return (\n    <>\n      <UppercaseTitle text={capitalizePhrase(sectionData.getInTouch.id)} />\n      <Paper elevation={2} sx={{ p: 3, pb: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {parse(sectionData.getInTouch.content, {\n            replace: replacePlainHTMLWithMuiComponents,\n          })}\n        </Typography>\n      </Paper>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","import { Grid, Typography, Stack, Skeleton, Box } from '@mui/material';\nimport { useContext, useEffect } from 'react';\nimport { MetadataContext } from '../../ContextProviders/MetadataContext';\nimport { fetchDataFromURL } from '../../API/ApiFetch';\nimport { GeneralAPIendpoints } from '../../API/Utils';\nimport { getApiUrl } from '../../API/ApiUrls';\n\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport FaceIcon from '@mui/icons-material/Face';\nimport SensorsIcon from '@mui/icons-material/Sensors';\nimport SchoolIcon from '@mui/icons-material/School';\n\nimport sectionData from \"../../section_data.json\";\n\nconst IconLoader = ({ iconString }) => {\n  switch (iconString) {\n    case 'GroupsIcon':\n      return <GroupsIcon color=\"primary\" fontSize='large' />;\n    case 'FaceIcon':\n      return <FaceIcon color=\"primary\" fontSize='large' />;\n    case 'SensorsIcon':\n      return <SensorsIcon color=\"primary\" fontSize='large' />;\n    case 'SchoolIcon':\n      return <SchoolIcon color=\"primary\" fontSize='large' />;\n    default:\n      return null;\n  }\n}\n\nconst ByTheNumber = (props) => {\n  const { iconString, value, text } = props;\n\n  return (\n    <Stack direction=\"column\" alignItems=\"center\">\n      <IconLoader iconString={iconString} />\n\n      {\n        value !== null && value !== undefined\n          ? (\n            <Typography\n              color=\"text.primary\"\n              sx={{ typography: { xs: \"h6\", sm: \"h4\" }, }}\n            >\n              <Box fontWeight=\"500\">\n                {value}\n              </Box>\n            </Typography>\n          )\n          : <Skeleton variant=\"text\" sx={{ width: \"50%\", fontSize: '3rem' }} />\n      }\n\n      <Typography\n        color=\"text.secondary\"\n        sx={{ typography: { xs: \"body2\", sm: \"h6\" } }}\n        textTransform=\"uppercase\"\n      >\n        <Box fontWeight=\"400\">\n          {text}\n        </Box>\n      </Typography>\n    </Stack>\n  );\n}\n\nconst AtAGlance = () => {\n  const { stats, setStats } = useContext(MetadataContext);\n\n  useEffect(() => {\n    if (!stats) {\n      fetchDataFromURL({\n        url: getApiUrl({ endpoint: GeneralAPIendpoints.stats })\n      })\n        .then((data) => {\n          setStats(data);\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n    }\n  }, [stats, setStats]);\n\n\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      gap={1}\n      m={0}\n    >\n      {sectionData.atAGlance.content.map((item, index) => (\n        <Grid\n          key={`by-the-number-${index}`}\n          item\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          sm={2.75}\n          xs={5.5}\n        >\n          <ByTheNumber\n            iconString={item.icon}\n            value={stats ? stats[item.id] : null}\n            text={item.text}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default AtAGlance;\n","import { useEffect, useContext } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { Button, Box, Grid, Typography, Container, Divider, useMediaQuery } from '@mui/material';\nimport { MetadataContext } from '../../ContextProviders/MetadataContext';\n\nimport UppercaseTitle from '../../Components/UppercaseTitle';\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport About from './About';\n\nimport sectionData from '../../section_data.json';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\n\nimport AQImap, { TileOptions } from '../../Components/AirQuality/AQImap';\n\nimport CurrentAQIGrid from '../../Components/AirQuality/CurrentAQIGrid';\n\nimport BarChartIcon from '@mui/icons-material/BarChart';\nimport PersonIcon from '@mui/icons-material/Person';\n\nimport GetInTouch from './GetInTouch';\nimport { AppRoutes } from '../../Utils/AppRoutes';\nimport { SensorStatus } from \"../../Components/AirQuality/SensorStatus\";\nimport AQIexplanation from '../../Components/AirQuality/AQIexplanation';\nimport { CITIESair, NYUAD } from '../../Utils/GlobalVariables';\nimport AtAGlance from './AtAGlance';\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\nimport { UserContext } from '../../ContextProviders/UserContext';\nimport NYUADbanner from '../Embeds/NYUADbanner';\n\nfunction Home({ themePreference, temperatureUnitPreference, title }) {\n  // Update the page's title\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  const { setCurrentPage, setChartsTitlesList } = useContext(MetadataContext);\n\n  // set current page to home\n  useEffect(() => {\n    setCurrentPage(AppRoutes.home);\n    setChartsTitlesList([]);\n  }, [setCurrentPage, setChartsTitlesList]);\n\n  const { currentSchoolID, currentSensorMeasurements, publicMapData } = useContext(DashboardContext);\n  const { authenticationState } = useContext(UserContext);\n\n  const displaySensorCounts = () => {\n    if (!currentSensorMeasurements) return null;\n\n    return (\n      <Grid item xs={12}>\n        <Typography variant='body2' color=\"text.secondary\">\n          <b>Sensors status: </b>{\n            currentSensorMeasurements.reduce((count, obj) => obj?.sensor?.sensor_status === SensorStatus.active ? count + 1 : count, 0)\n          } active out of {currentSensorMeasurements.length}\n        </Typography>\n      </Grid>\n    );\n  }\n\n  const isSmallScreen = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const displayDashboardButtons = () => {\n    const isOnlyNYUADButton = currentSchoolID === NYUAD && authenticationState.authenticated;\n\n    return (\n      <Grid item container spacing={1} justifyContent=\"center\" alignItems=\"center\">\n        {\n          isOnlyNYUADButton ? null :\n            (\n              <Grid item xs={12} sm=\"auto\">\n                <Button\n                  component={RouterLink}\n                  variant='contained'\n                  sx={{ width: \"fit-content\" }}\n                  to={authenticationState.authenticated ? AppRoutes.dashboard : AppRoutes.login}\n                  onClick={() => {\n                    Tracking.sendEventAnalytics(\n                      Tracking.Events.internalNavigation,\n                      {\n                        destination_id: authenticationState.authenticated ? AppRoutes.dashboard : AppRoutes.login,\n                        origin_id: AppRoutes.home\n                      }\n                    );\n                  }}\n                >\n                  {authenticationState.authenticated ?\n                    <BarChartIcon sx={{ fontSize: '0.8rem' }} />\n                    : <PersonIcon sx={{ fontSize: '0.8rem' }} />\n                  }\n                  &nbsp;\n                  {authenticationState.authenticated ? `School Private Dashboard` : \"Login Private Dashboard\"}\n                </Button>\n              </Grid>\n            )\n        }\n\n        {\n          isSmallScreen === false && (\n            <Grid item xs={12} sm=\"auto\">\n              <Typography color=\"text.secondary\">|</Typography>\n            </Grid>\n          )\n        }\n\n        <Grid item xs={12} sm=\"auto\">\n          <Button\n            component={RouterLink}\n            variant={isOnlyNYUADButton ? 'contained' : (isSmallScreen ? 'text' : 'outlined')}\n            sx={{ width: \"fit-content\" }}\n            to={AppRoutes.nyuad}\n            onClick={() => {\n              Tracking.sendEventAnalytics(\n                Tracking.Events.internalNavigation,\n                {\n                  destination_id: AppRoutes.nyuad,\n                  destination_school_id: NYUAD,\n                  origin_id: AppRoutes.home\n                }\n              );\n            }}\n          >\n            <BarChartIcon sx={{ fontSize: '0.8rem' }} />\n            NYUAD {isOnlyNYUADButton ? \"\" : \"Public\"} Dashboard\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  return (\n    <Box width=\"100%\">\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <Container sx={{ pt: 1, pb: 3 }}>\n          <UppercaseTitle text={`real-time air quality in the uae`} />\n\n          <AtAGlance />\n\n          <Typography sx={{ mt: 2 }} variant=\"body1\" color=\"text.secondary\">\n            {parse(sectionData.publicOutdoorStations.content, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n        </Container>\n      </FullWidthBox>\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <AQImap\n          tileOption={TileOptions.default}\n          themePreference={themePreference}\n          temperatureUnitPreference={temperatureUnitPreference}\n          centerCoordinates={[24.46, 54.52]}\n          maxBounds={[\n            [22.608292, 51.105185],\n            [26.407575, 56.456571],\n          ]}\n          mapData={publicMapData}\n          ariaLabel={`Map of ${CITIESair} public outdoor air quality stations in Abu Dhabi`}\n        />\n\n      </FullWidthBox>\n\n      <FullWidthBox sx={{ backgroundColor: 'customAlternateBackground' }}>\n        <Container sx={{ pt: 4, pb: 3 }}>\n          <UppercaseTitle text={`real-time air quality at  ${currentSchoolID || \"\"}`} />\n          <Typography variant='body1' color='text.secondary' sx={{ mt: -2, mb: 2 }}>\n            PM2.5 (Particulate Matter Smaller Than 2.5 Micrometer)\n          </Typography>\n\n          <Grid container spacing={2} justifyContent=\"center\" textAlign=\"center\">\n\n            {\n              (currentSchoolID === NYUAD || currentSchoolID === null || currentSchoolID === undefined) ? (\n                <NYUADbanner\n                  initialNyuadCurrentData={currentSensorMeasurements}\n                  isOnBannerPage={false}\n                  disableInteraction={true}\n                  themePreference={themePreference}\n                  minMapHeight={\"250px\"}\n                />\n              ) : (\n                <Grid item xs={12} lg={10}>\n                  <CurrentAQIGrid\n                    currentSensorsData={currentSensorMeasurements?.slice(0, 3)}\n                    isScreen={false}\n                    temperatureUnitPreference={temperatureUnitPreference}\n                    firstSensorOwnLine={true}\n                  />\n                </Grid>\n              )\n            }\n\n            {displaySensorCounts()}\n\n            {displayDashboardButtons()}\n\n            <Grid item xs={12} textAlign=\"left\">\n              <AQIexplanation />\n            </Grid>\n          </Grid>\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={sectionData.about.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <About />\n        </Container>\n      </FullWidthBox>\n\n      <Divider />\n\n      <FullWidthBox id={sectionData.getInTouch.id} sx={{ pt: 3, pb: 4 }}>\n        <Container>\n          <GetInTouch />\n        </Container>\n      </FullWidthBox>\n\n    </Box >\n  );\n}\n\nexport default Home;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25m6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8\"\n}), 'Face');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12.75c1.63 0 3.07.39 4.24.9 1.08.48 1.76 1.56 1.76 2.73V18H6v-1.61c0-1.18.68-2.26 1.76-2.73 1.17-.52 2.61-.91 4.24-.91M4 13c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m1.13 1.1c-.37-.06-.74-.1-1.13-.1-.99 0-1.93.21-2.78.58C.48 14.9 0 15.62 0 16.43V18h4.5v-1.61c0-.83.23-1.61.63-2.29M20 13c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m4 3.43c0-.81-.48-1.53-1.22-1.85-.85-.37-1.79-.58-2.78-.58-.39 0-.76.04-1.13.1.4.68.63 1.46.63 2.29V18H24zM12 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3\"\n}), 'Groups');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.76 16.24C6.67 15.16 6 13.66 6 12s.67-3.16 1.76-4.24l1.42 1.42C8.45 9.9 8 10.9 8 12c0 1.1.45 2.1 1.17 2.83zm8.48 0C17.33 15.16 18 13.66 18 12s-.67-3.16-1.76-4.24l-1.42 1.42C15.55 9.9 16 10.9 16 12c0 1.1-.45 2.1-1.17 2.83zM12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m8 2c0 2.21-.9 4.21-2.35 5.65l1.42 1.42C20.88 17.26 22 14.76 22 12s-1.12-5.26-2.93-7.07l-1.42 1.42C19.1 7.79 20 9.79 20 12M6.35 6.35 4.93 4.93C3.12 6.74 2 9.24 2 12s1.12 5.26 2.93 7.07l1.42-1.42C4.9 16.21 4 14.21 4 12s.9-4.21 2.35-5.65\"\n}), 'Sensors');"],"names":["Explanation","AQIexplanation","themePreference","useContext","PreferenceContext","_jsx","ExpandableSection","title","icon","InfoIcon","sx","fontSize","content","_jsxs","Box","children","AirQualityIndexTable","Typography","component","variant","color","mt","parse","replace","replacePlainHTMLWithMuiComponents","StyledTable","styled","Table","shouldForwardProp","prop","_ref","theme","tiny","minWidth","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","language","hideAQIDescription","returnFormattedBreakpoints","low","high","Infinity","concat","_Fragment","overflow","size","TableHead","TableRow","TableCell","pr","width","height","pl","align","CITIESair","TableBody","AQI_Database","map","element","index","border","backgroundColor","getTranslation","category","whiteSpace","aqiUS","rawPM2_5","description","healthSuggestions","outdoors","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","_ref2","marginTop","spacing","flexDirection","paddingLeft","textDecoration","main","marginBottom","TooltipText","disabled","setExpanded","useState","undefined","onChange","panel","event","isExpanded","Tracking","expandSection","collapseSection","section","expandIcon","ArrowDropDownIcon","id","Tooltip","enterDelay","leaveDelay","ml","MuiAccordionDetails","pt","UppercaseTitle","otherProps","display","textTransform","pb","Skeleton","capitalizePhrase","sectionData","Stack","Paper","elevation","p","mainText","reference","px","IconLoader","iconString","GroupsIcon","FaceIcon","SensorsIcon","SchoolIcon","ByTheNumber","value","direction","alignItems","typography","xs","sm","AtAGlance","stats","setStats","MetadataContext","useEffect","fetchDataFromURL","url","getApiUrl","endpoint","GeneralAPIendpoints","then","data","catch","error","console","log","Grid","container","justifyContent","textAlign","gap","m","item","temperatureUnitPreference","document","setCurrentPage","setChartsTitlesList","AppRoutes","home","currentSchoolID","currentSensorMeasurements","publicMapData","DashboardContext","authenticationState","UserContext","isSmallScreen","useMediaQuery","FullWidthBox","Container","AQImap","tileOption","TileOptions","centerCoordinates","maxBounds","mapData","ariaLabel","mb","NYUAD","NYUADbanner","initialNyuadCurrentData","isOnBannerPage","disableInteraction","minMapHeight","lg","CurrentAQIGrid","currentSensorsData","slice","isScreen","firstSensorOwnLine","reduce","count","obj","_obj$sensor","sensor","sensor_status","SensorStatus","active","length","displayDashboardButtons","isOnlyNYUADButton","authenticated","Button","RouterLink","to","dashboard","login","onClick","internalNavigation","destination_id","origin_id","BarChartIcon","PersonIcon","nyuad","destination_school_id","Divider","About","GetInTouch","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","jsx","d"],"sourceRoot":""}