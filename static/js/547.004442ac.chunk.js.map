{"version":3,"file":"static/js/547.004442ac.chunk.js","mappings":"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","sources":["Components/AirQuality/AQIexplanation.jsx","Components/AirQuality/AirQualityIndexTable.jsx","Components/ExpandableSection/ExpandableSection.jsx","Components/UppercaseTitle.jsx","Graphs/Subchart/SubchartUtils/SeriesSelector.jsx","Graphs/GoogleChartHelper.jsx","Graphs/Subchart/SubchartUtils/GoogleChartStyleWrapper.jsx","Utils/Gradient/GradientUtils.jsx","Graphs/Subchart/NivoCharts/NivoCalendarChart/ValueRangeBox.jsx","Graphs/Subchart/NivoCharts/NivoCalendarChart/TooltipCalendarChart.jsx","Graphs/Subchart/NivoCharts/NivoChartHelper.jsx","Graphs/Subchart/NivoCharts/NivoCalendarChart/NivoCalendarChart.jsx","Components/DateRangePicker/DateRangePickerUtils.jsx","Components/DateRangePicker/AggregationTypeToggle.jsx","ContextProviders/DateRangePickerContext.jsx","Components/DateRangePicker/CustomDateRangePicker.jsx","ContextProviders/AxesPickerContext.jsx","Components/AxesPicker/AxesPicker.jsx","Graphs/Subchart/NoChartToRender.jsx","Graphs/Subchart/SubChart.jsx","Components/CollapsibleSubtitle.jsx","Graphs/DataTypeDropDown.jsx","Components/StyledTabs.jsx","Graphs/ChartComponentWrapper.jsx","Components/AirQuality/AirQualityIndexLegendQuickGlance.jsx","Components/Account/useLoginHandler.jsx","Components/AirQuality/AirQualityScreen/ScreenDropDownMenu.jsx","Components/CustomDialog/CustomDialog.jsx","Components/DatasetDownload/DatasetDownloadDialog.jsx","Components/AirQuality/AirQualityAlerts/AlertTypes.jsx","Components/AirQuality/AirQualityAlerts/Utils.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/HOURS.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/PREDEFINED_TIMERANGES.jsx","ContextProviders/AirQualityAlertContext.jsx","Components/AirQuality/AirQualityAlerts/EmailsInput.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertDeletionDialog.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/DialogData.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/SimplePicker.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/TimeRangeSelector.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/OptionalMessage.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/DAYS_OF_WEEK.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/MultiDaysCalendarPicker.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/DaySelector.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/ThresholdAlertComponents/ThresholdSlider.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/ThresholdAlertComponents/ThresholdComponentWrapper.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/MaxOnceADayCheckbox.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/ThresholdAlertComponents/ThresholdTypeToggle.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/AlertPropertyComponents.jsx","Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertModificationDialog.jsx","Components/AirQuality/AirQualityAlerts/AlertsTable.jsx","Components/AirQuality/AirQualityAlerts/AlertsTabs.jsx","Components/AirQuality/AirQualityAlerts/AirQualityAlert.jsx","Components/Account/LoginPopupHandler.jsx","Pages/Project/ProjectReservedArea.jsx","Components/CustomChip.jsx","Components/SchoolSelector.jsx","Pages/Project/GridOfMetadataChips.jsx","Pages/Project/ProjectDescription.jsx","Pages/Project/LoadMoreButton.jsx","Pages/Project/Project.jsx","Pages/Dashboard.jsx"],"sourcesContent":["import { useContext } from 'react';\nimport { Typography, Box } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\nimport AirQualityIndexTable from './AirQualityIndexTable';\nimport ExpandableSection from '../ExpandableSection/ExpandableSection';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nimport InfoIcon from '@mui/icons-material/Info';\n\nconst Explanation = {\n  title: \"Explanation of the US Air Quality Index (AQI) for PM2.5\",\n  subtitle: \"CITIESair uses the <a href='https://www.airnow.gov/aqi/aqi-basics/'>Air Quality Index (AQI)</a> developed by the United States Environmental Protection Agency (EPA) to effectively communicate different levels of PM2.5 air pollution. To calculate the AQI from the raw measurement of PM2.5 concentration (µg/m³), different breakpoints and piecewise linear function are utilized (read more <a href='https://en.wikipedia.org/wiki/Air_quality_index#United_States'>here</a>). Higher AQI values correspond to poorer air quality and greater heath risks to humans.<br><br>The US EPA sets thresholds for PM2.5 concentration, recently updated in February 2024: <sup>[1]</sup><ul><li><b>Annual average</b>: 9.0 µg/m³, corresponding to US AQI <b>50</b></li><li><b>24-hour average</b>: 35.0 µg/m³, corresponding to US AQI <b>100</b></li></ul>In 2021, the World's Heath Organization (WHO) proposed a new guideline for PM2.5<sup>[2]</sup> with stricter thresholds than those of the US EPA:<ul><li><b>Annual average</b>: 5.0 µg/m³, corresponding to US AQI <b>21</b></li><li><b>24-hour average</b>: 15.0 µg/m³, corresponding to US AQI <b>56</b></li></ul>\",\n  reference: \"[1] \\\"National Ambient Air Quality Standards (NAAQS) for PM.\\\" EPA, Environmental Protection Agency, https://www.epa.gov/pm-pollution/national-ambient-air-quality-standards-naaqs-pm.<br>[2] World Health Organization. \\\"WHO global air quality guidelines: particulate matter (PM2. 5 and PM10), ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide: executive summary.\\\" (2021).\",\n}\n\nconst AQIexplanation = () => {\n  const { themePreference } = useContext(PreferenceContext);\n\n  return (\n    <ExpandableSection\n      title={Explanation.title}\n      icon={<InfoIcon sx={{ fontSize: \"1rem\" }} />}\n      content={(\n        <Box>\n          <AirQualityIndexTable themePreference={themePreference} />\n          <Typography\n            component=\"div\"\n            variant=\"body1\"\n            color=\"text.secondary\"\n            sx={{ mt: 2 }}\n          >\n            {parse(Explanation.subtitle, {\n              replace: replacePlainHTMLWithMuiComponents,\n            })}\n          </Typography>\n          <ExpandableSection\n            title={\"Reference\"}\n            content={(\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {parse(Explanation.reference, {\n                  replace: replacePlainHTMLWithMuiComponents,\n                })}\n              </Typography>\n            )}\n          />\n        </Box>\n      )}\n    />\n  )\n};\n\nexport default AQIexplanation;","import { Box, Table, TableBody, TableCell, TableHead, TableRow, styled } from '@mui/material';\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../Utils/UtilFunctions';\nimport { AQI_Database } from '../../Utils/AirQuality/AirQualityIndexHelper';\nimport { useContext } from 'react';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\nimport { CITIESair } from '../../Utils/GlobalVariables';\n\nexport const StyledTable = styled(Table, {\n  shouldForwardProp: (prop) => prop !== 'tiny',\n})(({ theme, tiny }) => ({\n  minWidth: tiny || 700,\n  '& th, td': {\n    fontSize: tiny ? '0.625rem' : '0.6875rem',\n    color: theme.palette.text.secondary,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: tiny ? '0.5rem' : '0.6875rem',\n    },\n  },\n  '& th': {\n    fontWeight: 500,\n    color: theme.palette.text.primary,\n    lineHeight: '1rem'\n  }\n}));\n\nfunction AirQualityIndexTable(props) {\n  const { themePreference } = useContext(PreferenceContext);\n\n  const { tiny, hideAQIDescription } = props;\n\n  const returnFormattedBreakpoints = (low, high) => {\n    if (high === Infinity) return `${low}+`;\n    else return `${low} - ${high}`;\n  }\n\n  return (\n    <>\n      <Box overflow=\"auto\">\n        <StyledTable size=\"small\" tiny={tiny}>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ pr: 0 }}>\n                <Box sx={{ width: '1em', height: '1em' }} />\n              </TableCell>\n              <TableCell sx={{ pl: 1 }}>\n                Category\n              </TableCell>\n              <TableCell align=\"right\">US AQI</TableCell>\n              <TableCell align=\"right\">\n                PM2.5\n                (µg/m\n                <sup>3</sup>\n                )\n              </TableCell>\n              {!hideAQIDescription && <TableCell align=\"left\">Description</TableCell>}\n\n              {!hideAQIDescription &&\n                <TableCell align=\"left\">\n                  {CITIESair}&apos; Suggested Actions\n                </TableCell>\n              }\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {AQI_Database.map((element, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell sx={{ pr: 0 }}>\n                  <Box sx={{ width: '1em', height: '1em', backgroundColor: element.color[themePreference] }} />\n                </TableCell>\n                <TableCell sx={{ pl: 1 }}>\n                  {element.category}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.aqiUS.low, element.aqiUS.high)}\n                </TableCell>\n                <TableCell align=\"right\" sx={{ whiteSpace: \"nowrap\" }}>\n                  {returnFormattedBreakpoints(element.rawPM2_5.low, element.rawPM2_5.high)}\n                </TableCell>\n                {!hideAQIDescription && <TableCell align=\"left\">{element.description}</TableCell>}\n                {!hideAQIDescription\n                  && (\n                    <TableCell align=\"left\">\n                      {\n                        parse(element.healthSuggestions.outdoors, {\n                          replace: replacePlainHTMLWithMuiComponents,\n                        })\n                      }\n                    </TableCell>\n                  )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </StyledTable>\n      </Box>\n    </>\n  );\n}\n\nexport default AirQualityIndexTable;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport { Box, Typography, Tooltip } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport * as Tracking from '../../Utils/Tracking';\n\nconst StyledAccordion = styled(MuiAccordion)(({ theme, expanded }) => ({\n  color: theme.palette.text.secondary,\n  backgroundImage: 'none',\n  backgroundColor: expanded ? theme.palette.background.default : 'transparent',\n  boxShadow: expanded ? theme.shadows : 'none',\n  transition: 'none',\n}));\n\nconst StyledAccordionSummary = styled(MuiAccordionSummary)(({ theme, expanded }) => ({\n  marginTop: expanded ? theme.spacing(1) : 0,\n  flexDirection: 'row-reverse',\n  paddingLeft: expanded ? theme.spacing(1) : 0,\n  '& .MuiTypography-root': {\n    color: theme.palette.text.primary,\n    textDecoration: 'underline',\n    transition: 'none',\n    '&:hover': {\n      color: theme.palette.primary.main,\n    },\n  },\n  '& .MuiAccordionSummary-content.Mui-expanded': {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst TooltipText = {\n  expand: \"Click to expand section\",\n  collapse: \"Click to collapse section\"\n}\n\nconst ExpandableSection = (props) => {\n  const { title, content, icon, disabled } = props;\n  const [expanded, setExpanded] = useState(undefined);\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : undefined);\n    Tracking.sendEventAnalytics(\n      isExpanded ? Tracking.Events.expandSection : Tracking.Events.collapseSection,\n      {\n        section: title\n      }\n    );\n  };\n\n  return (\n    <Box sx={{\n      '& .MuiAccordion-root.Mui-disabled': {\n        backgroundColor: \"transparent\"\n      }\n    }}>\n      <StyledAccordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleAccordionChange(\"panel1\")}\n        disabled={disabled}\n      >\n        <StyledAccordionSummary expanded={expanded} expandIcon={<ArrowDropDownIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Tooltip title={expanded ? TooltipText.collapse : TooltipText.expand} enterDelay={0} leaveDelay={200}>\n            <Typography component=\"a\" variant=\"body1\">\n              {title}\n              <Box component=\"span\" sx={{ ml: 0.25 }}>\n                {icon}\n              </Box>\n            </Typography>\n          </Tooltip>\n        </StyledAccordionSummary>\n        <MuiAccordionDetails sx={{ pt: 0 }}>\n          {content}\n        </MuiAccordionDetails>\n      </StyledAccordion>\n    </Box>\n  );\n}\n\nexport default ExpandableSection;","import { Skeleton, Typography } from '@mui/material';\n\nexport default function UppercaseTitle({ text, sx, ...otherProps }) {\n  return (\n    <Typography\n      variant=\"h4\"\n      color=\"text.primary\"\n      sx={{\n        fontWeight: 'medium',\n        display: 'block',\n        textTransform: 'uppercase',\n        pb: 3,\n        lineHeight: 1,\n        ...sx\n      }}\n      {...otherProps}\n    >\n      {text || <Skeleton variant='text' />}\n    </Typography>\n  );\n}\n","/* eslint-disable */\nimport { useState, useEffect } from 'react';\nimport { Stack, Grid, MenuItem, FormControl, Select, Chip, Radio, Checkbox, Typography, Switch } from \"@mui/material\";\nimport { useTheme } from '@mui/material/styles';\n\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst SELECT_ALL = 'Display All Series';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nexport default function SeriesSelector(props) {\n  const { items: itemsFromChart,\n    selectorID,\n    allowMultiple,\n    seriesLabel,\n    onSeriesSelection,\n    displayChip = true\n  } = props;\n\n  const theme = useTheme();\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 5.55 + ITEM_PADDING_TOP,\n        overflow: 'visible !important',\n        background: theme.palette.customAlternateBackground\n      }\n    },\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const [items, setItems] = useState(itemsFromChart);\n  const [selectAll, setSelectAll] = useState(allowMultiple); // default: all is selected if multiSelect is true\n\n  useEffect(() => {\n    setItems(itemsFromChart);\n  }, [itemsFromChart]);\n\n  useEffect(() => {\n    setSelectAll(items.every(item => item.selected)); // set selectAll if all items are selected\n  }, [items]);\n\n  const handleChange = (event) => {\n    // Get the array of the currently selected value(s)\n    const {\n      target: { value }\n    } = event;\n\n    // If the current selection has SELECT_ALL\n    // Behavior:\n    // - If SELECT_ALL is being selected now, then set all items to selected\n    // - IF SELECT_ALL is being de-selected now, then set all items but the first one to be unselected \n    // (to make sure there's always at least 1 item being selected)\n    if (value.includes(SELECT_ALL)) {\n      const updatedItems = items.map((item, index) => ({ ...item, selected: index == 0 ? true : !selectAll }));\n      onSeriesSelection({ newDataColumns: updatedItems });\n      setSelectAll(!selectAll);\n    }\n    // Else, if an ordinary item is selected/de-selected:\n    else {\n      const selectedItems = items.filter(item => value.includes(item.label));\n      const updatedItems = items.map(item => ({\n        ...item,\n        selected: selectedItems.some(selectedItem => selectedItem.label === item.label)\n      }));\n      onSeriesSelection({ newDataColumns: updatedItems });\n      setSelectAll(false);\n    }\n  };\n\n  const handleItemToggle = (item) => {\n    const updatedItems = items.map(existingItem =>\n      existingItem.label === item.label ? { ...existingItem, selected: !existingItem.selected } : existingItem\n    );\n    onSeriesSelection({ newDataColumns: updatedItems });\n  };\n\n  const renderedLabel = (selected) => {\n    const returnNumSeriesDisplayed = () => {\n      return `${selected.length}/${items.length} ${seriesLabel || \"\"} displayed`;\n    };\n\n    return (\n      <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\n        <VisibilityIcon fontSize=\"1.5rem\" sx={{ color: theme.palette.text.secondary }} />\n        <Typography variant=\"caption\" color=\"text.secondary\">\n          {/* show # of series selected if multiSelect. show cur selected serie if singleSelect */}\n          {allowMultiple ? returnNumSeriesDisplayed() : selected}\n        </Typography>\n      </Stack>\n    );\n  };\n\n  return (\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n      <FormControl\n        sx={{\n          [theme.breakpoints.down('sm')]: { width: '100%' },\n          minWidth: '200px',\n          '& .MuiInputBase-root': { borderRadius: `${theme.shape.borderRadius}px` }\n        }}\n        size=\"small\"\n      >\n        <Select\n          labelId={`${selectorID}-label`}\n          id={selectorID}\n          multiple={allowMultiple}\n          value={items.filter(item => item.selected).map(item => item.label)}\n          onChange={handleChange}\n          MenuProps={MenuProps}\n          renderValue={(selected) => renderedLabel(selected)}\n          sx={{ fontSize: '0.75em' }}\n        >\n          {/* Display all available items, together with checkbox for each item to select from */}\n          {items.map((item) => (\n            <MenuItem\n              disabled={\n                // If there is only 1 selected item and this is the selected item\n                // Then, prevent user from de-select this item too\n                // To ensure at least there is 1 selected item at all times\n                (items.filter(item => item.selected).length === 1 && item.selected) ? true : false\n              }\n              key={item.label}\n              value={item.label}\n              sx={{\n                backgroundColor: 'unset !important',\n                \"&:hover\": {\n                  backgroundColor: 'inherit !important',\n                }\n              }}\n            >\n              { /* checkboxes for MultiSelect, radioButtons for singleSelect*/}\n              {allowMultiple ? <Checkbox\n                checked={item.selected}\n                onClick={() => handleItemToggle(item)}\n\n                sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n                : <Radio\n                  checked={item.selected}\n                  onChange={() => handleChange(item)}\n\n                  sx={{ p: 0.25, transform: 'scale(0.8)' }} />\n              }\n              <Typography variant='caption'>{item.label}</Typography>\n            </MenuItem>\n          ))}\n\n          {/* Show the option to select all if multiSelect is true*/}\n          {allowMultiple ?\n            (\n              <MenuItem\n                key={SELECT_ALL}\n                value={SELECT_ALL}\n                sx={{\n                  borderTop: 'solid 0.5px', borderColor: theme.palette.text.secondary,\n                  position: 'sticky', bottom: 0, zIndex: 1, marginBottom: theme.spacing(-1),\n                  background: theme.palette.customAlternateBackground,\n                  \"&:hover\": {\n                    background: theme.palette.customAlternateBackground\n                  }\n                }}\n              >\n                <Stack direction='row' width='100%' alignItems='center' justifyContent='space-between'>\n                  <Typography fontWeight={500} variant='caption' sx={{ pl: 1 }}>{SELECT_ALL}</Typography>\n                  <Switch\n                    checked={selectAll}\n                    onClick={() => handleItemToggle(SELECT_ALL)}\n                    sx={{ transform: 'scale(0.8)' }}\n                  />\n                </Stack>\n              </MenuItem>\n            ) : null\n          }\n        </Select>\n      </FormControl>\n\n      {/* Display only selected items in the Grids, and only in landscape mode and if multiSelect is true*/}\n      {(displayChip && allowMultiple) && <Grid container spacing={1}\n        sx={{\n          [theme.breakpoints.down('sm')]: {\n            display: 'none'\n          },\n        }}\n      >\n        {items.filter(item => item.selected).map((item) => (\n          <Grid item key={item.label}>\n            <Chip\n              label={<Typography variant='caption'>{item.label}</Typography>}\n              size=\"small\"\n              {...(items.filter(item => item.selected).length !== 1 && { onDelete: () => handleItemToggle(item) })}\n            />\n          </Grid>\n        ))}\n      </Grid>}\n\n\n    </Stack>\n  );\n}\n","/* eslint-disable */\n\nexport const ChartControlType = {\n  CategoryFilter: { position: 'top', stackDirection: 'column' },\n  DateRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  ChartRangeFilter: { position: 'bottom', stackDirection: 'column-reverse' },\n  NumberRangeFilter: { position: 'top', stackDirection: 'column' }\n}\n\n// Function to generate a random ID for the google chart container\nexport const generateRandomID = () => {\n  return Math.random().toString(36).substr(2, 9); // Generates a random string of length 9\n}\n\n// -------- Chart options --------\n\nconst hideAnnotations = {\n  stem: {\n    length: 0,\n  },\n  textStyle: {\n    opacity: 0,\n  },\n  boxStyle: null,\n};\n\nconst returnResponsiveFontSizeInPixels = ({ isPortrait, isSmaller }) => {\n  return (\n    isSmaller ? (isPortrait ? 6 : 8) : (isPortrait ? 8 : 10)\n  );\n}\n\nexport const returnGenericOptions = (props) => {\n  const { chartData, subchartIndex, isPortrait, theme } = props;\n\n  // Define some shared styling rules for the chart\n  const axisTitleTextStyle = {\n    italic: false,\n    bold: true,\n    color: theme.palette.chart.axisTitle,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n  const axisTextStyle = {\n    color: theme.palette.chart.axisText,\n    fontSize: returnResponsiveFontSizeInPixels({ isPortrait })\n  };\n\n  // ---- Formulate the options for this specific chart:\n  // 1. Populate first with subchart's options (if any)\n  let options = chartData.subcharts?.[subchartIndex].options\n    ? { ...chartData.subcharts[subchartIndex].options }\n    : {};\n\n  // 2. Append own chart's options and then populate with universal options for all charts\n  options = {\n    ...options,\n    ...chartData.options,\n    theme: 'material',\n    curveType: options.curveType || chartData.options?.curveType || 'function',\n    crosshair: { orientation: 'both', trigger: 'focus', opacity: 0.5 },\n    backgroundColor: { fill: chartData.options?.backgroundColor?.fill || 'transparent' },\n    chartArea: {\n      ...chartData.options?.chartArea,\n      width: isPortrait ? (chartData.options?.chartArea?.width?.portrait || '80%') : (chartData.options?.chartArea?.width?.landscape || '75%'),\n      height: isPortrait ? (chartData.options?.chartArea?.height?.portrait || '60%') : (chartData.options?.chartArea?.height?.landscape || '70%'),\n    },\n    width: isPortrait ? (chartData.options?.width?.portrait || '100%') : (chartData.options?.width?.landscape || '100%'),\n    // if there is a filter, we make space for the chartFilter from the chart's height.\n    // value is divided in 2 because the calculation is applied twice due to\n    // how react-google-charts nest components\n    height: chartData.height || '100%',\n    tooltip: {\n      isHtml: true,\n      showColorCode: false\n    },\n    legend: {\n      alignment: isPortrait ? 'center' : 'start',\n      position:\n        chartData.options?.legend?.position\n        ?? (isPortrait ? 'top' : 'right'),\n      scrollArrows: {\n        activeColor: theme.palette.chart.axisTitle,\n        inactiveColor: theme.palette.text.secondary,\n      },\n      pagingTextStyle: {\n        fontSize: 10,\n        color: theme.palette.chart.axisTitle,\n        bold: true,\n      }\n    }\n  };\n\n  // 3. Append to vAxis and hAxis properties\n  options.vAxis = {\n    ...options.vAxis,\n    format: options.vAxis?.format ?? 'decimal',\n    title: options.vAxis?.title ?? '',\n    viewWindow: {\n      min: options.vAxis?.viewWindow?.min ?? 0,\n      max: options.vAxis?.viewWindow?.max ?? null,\n      max: options.vAxis?.viewWindow?.max ?? null,\n    },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    title: options.hAxis?.title ?? '',\n  };\n  // 3.1. If in portrait mode, slant the text of the hAxis\n  if (isPortrait) {\n    options.hAxis = {\n      ...options.hAxis,\n      slantedText: true,\n      slantedTextAngle: 30,\n    };\n  }\n\n  // 4. Override with custom colors:\n  // 4.1. Color scheme of all the series of this chart\n  if (typeof options.colors === 'string' || !options.colors) options.colors = theme.palette.chart.optionsColors[options.colors || 'multiColor'];\n  // 4.2. Individual color of a single serie (if given)\n  if (options.series) {\n    Object.values(options.series).forEach((_serie) => {\n      const serie = _serie;\n      if (serie.color === 'default') {\n        serie.color = theme.palette.primary.main;\n      }\n    });\n  }\n  // 4.3. Color of the trendline\n  if (options.trendlines) {\n    options.trendlines.forEach((_item) => {\n      const item = _item;\n      item.color = theme.palette.primary.main;\n    });\n  }\n  // 4.4. Color axis of the Calendar chart\n  if (options.colorAxis) {\n    switch (options.colorAxis.colors) {\n      case 'matchingColor':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.chart.optionsColors.multiColor[options.colorAxis.colorIndex],\n        ];\n        break;\n      case 'default':\n        options.colorAxis.colors = [\n          theme.palette.chart.colorAxisFirstColor,\n          theme.palette.NYUpurple,\n        ];\n        break\n      // If not any of the above, then the colorAxis should be from the chart (aqi/temperature/humidity...)\n      default:\n        try {\n          options.colorAxis = theme.palette.chart.colorAxes[options.colorAxis.colors]\n        } catch {\n          options.colorAxis = []\n        }\n        break;\n    }\n  }\n  // 4.5. Colors of other elements of the chart (typographies and gridlines)\n  options.vAxis = {\n    ...options.vAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.vAxis?.gridlines,\n      color: options.vAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: { count: 0 },\n  };\n  options.hAxis = {\n    ...options.hAxis,\n    titleTextStyle: axisTitleTextStyle,\n    textStyle: axisTextStyle,\n    gridlines: {\n      ...options.hAxis?.gridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines\n    },\n    minorGridlines: {\n      ...options.hAxis?.minorGridlines,\n      color: options.hAxis?.gridlines?.color || theme.palette.chart.gridlines,\n    },\n  };\n  options.legend = {\n    ...options.legend,\n    textStyle: axisTextStyle,\n  };\n  options.annotations = {\n    ...options.annotations,\n    highContrast: true,\n    textStyle: {\n      color: theme.palette.primary.contrastText,\n      fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }),\n      opacity: 0.8\n    },\n    stem: {\n      ...options.annotations?.stem,\n      color: theme.palette.chart.axisTitle,\n      thickness: 2\n    },\n    boxStyle: {\n      rx: theme.shape.borderRadius, // rounded corners\n      ry: theme.shape.borderRadius,\n      fill: theme.palette.chart.annotationBoxFill,\n      fillOpacity: 0.5\n    },\n  };\n\n  if (isPortrait) {\n    options.pointSize = 0;\n  }\n\n  return options;\n}\n\nexport const returnChartControlUI = (props) => {\n  const { chartControl, mainChartData, mainChartOptions, subchartIndex, theme, isPortrait } = props;\n  let chartControlUI = {\n    ...chartControl.options?.ui,\n    snapToData: true\n  };\n\n  // Assign the appropriate UI for chartControl based on controlType (if existed)\n  if (chartControl.controlType === 'ChartRangeFilter') {\n    chartControlUI = {\n      ...chartControlUI,\n      chartType: mainChartData.chartType,\n      chartView: {\n        columns:\n          mainChartData.columns\n          || (mainChartData.subcharts\n            && mainChartData.subcharts[subchartIndex].columns)\n          || null\n          || null,\n      },\n      chartOptions: {\n        ...mainChartOptions,\n        hAxis: {\n          ...mainChartOptions.hAxis,\n          textPosition: 'out',\n          textStyle: { color: theme.palette.chart.axisText, fontSize: returnResponsiveFontSizeInPixels({ isPortrait, isSmaller: true }) },\n          title: null\n        },\n        vAxis: {\n          ...mainChartOptions.vAxis,\n          title: null\n        },\n        annotations: hideAnnotations,\n        legend: null,\n        pointSize: 0\n      }\n    };\n  }\n  return chartControlUI;\n}\n\nexport const addTouchEventListenerForChartControl = ({ controlWrapper, chartID }) => {\n  const touchHandler = (event) => {\n    var touches = event.changedTouches,\n      first = touches[0],\n      type = '';\n\n    switch (event.type) {\n      case 'touchstart':\n        type = 'mousedown';\n        break;\n      case 'touchmove':\n        type = 'mousemove';\n        break;\n      case 'touchend':\n        type = 'mouseup';\n        break;\n      default:\n        return;\n    }\n\n    var simulatedEvent = new MouseEvent(type, {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n      detail: 1,\n      screenX: first.screenX,\n      screenY: first.screenY,\n      clientX: first.clientX,\n      clientY: first.clientY,\n      button: 0, // left button\n      relatedTarget: null,\n    });\n\n    first.target.dispatchEvent(simulatedEvent);\n    event.preventDefault();\n  }\n\n  let isMounted = true; // Flag to track component's mount status\n  if (!controlWrapper) return;\n\n  const controlDOM = document.querySelector(`#control-${chartID}`);\n  if (!controlDOM) return;\n\n  ['touchstart', 'touchmove', 'touchend', 'touchcancel']\n    .forEach((touchEvent) => {\n      controlDOM.addEventListener(touchEvent, touchHandler, { capture: true });\n    });\n\n  return () => {\n    isMounted = false; // Component is unmounting\n\n    ['touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach((touchEvent) => {\n      controlDOM.removeEventListener(touchEvent, touchHandler, { capture: true });\n    });\n  };\n}","import { Box } from '@mui/material/';\nimport { styled } from '@mui/material/styles';\n\nconst GoogleChartStyleWrapper = styled(Box, {\n  shouldForwardProp: (prop) => prop !== 'gradientBackgroundId' && prop !== 'isPortrait',\n})(({ theme, isPortrait, gradientBackgroundId }) => ({\n  // CSS for optional gradient background \n  '& svg>g:nth-of-type(2)>rect:first-of-type': {\n    fill: `url(#${gradientBackgroundId})`,\n    fillOpacity: 1,\n    filter: 'contrast(0.4) brightness(1.4)'\n  },\n\n  // CSS for HTML tooltip\n  '& .google-visualization-tooltip, .nivo-tooltip': {\n    width: 'unset !important',\n    maxWidth: '350px',\n    height: 'unset',\n    padding: '1em',\n    boxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    mozBoxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    webkitBoxShadow: '0px 2px 2px 0px rgba(204, 204, 204, 0.6)',\n    border: 'solid 1px',\n    borderColor: theme.palette.text.secondaryRGB,\n    fontSize: `${isPortrait ? 9 : 12}px`,\n    color: theme.palette.chart.tooltip.text,\n    background: theme.palette.chart.tooltip.background,\n    borderRadius: theme.shape.borderRadius,\n    '& ul': {\n      margin: '0 !important',\n      '& li': {\n        margin: '0 !important',\n        padding: '0 !important',\n        '& span': {\n          fontSize: `${isPortrait ? 9 : 12}px !important`,\n          color: `${theme.palette.chart.tooltip.text} !important`,\n        }\n      }\n    }\n  },\n\n  // -------- chartControl's additional stylings\n  '& .goog-menuitem-highlight, .goog-menuitem-hover': {\n    backgroundColor: `${theme.palette.primary} !important`\n  },\n\n  // CategoryFilter\n  '& .google-visualization-controls-categoryfilter': {\n    fontSize: '0.85rem',\n    marginTop: '0.75rem',\n    marginBottom: '-0.75rem',\n\n    '& .goog-inline-block > .goog-menu-button': {\n      marginTop: 0\n    },\n\n    '& .goog-menu-button-hover .goog-menu-button-outer-box, .goog-menu-button-hover .goog-menu-button-inner-box': {\n      borderColor: 'inherit !important'\n    },\n\n    '& .google-visualization-controls-label': {\n      color: theme.palette.text.secondary,\n      fontWeight: 500,\n      verticalAlign: 'middle',\n      marginBottom: '0.25rem'\n    },\n    '& .goog-menu-button-outer-box': {\n      backgroundColor: theme.palette.background.paper,\n      border: 'unset',\n\n      '& .goog-menu-button-inner-box': {\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        border: 'solid',\n        borderWidth: '0.5px',\n        borderRadius: theme.shape.borderRadius,\n        borderColor: theme.palette.text.secondary,\n\n        '& .goog-menu-button-caption': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  },\n\n  // DateRangeFilter\n  '& .google-visualization-controls-rangefilter': {\n    width: '100%',\n    fontSize: '0.75rem',\n    '& .goog-inline-block': {\n      width: '100%',\n    },\n    '& .google-visualization-controls-slider-horizontal': {\n      width: '90%',\n      margin: '0 5%',\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(1)': {\n      position: 'absolute',\n      top: '1.5em',\n      left: '5%'\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel:nth-of-type(2)': {\n      position: 'absolute',\n      top: '1.5em',\n      right: '5%'\n    },\n    '& .google-visualization-controls-slider-handle': {\n      background: theme.palette.primary.main\n    },\n    '& .google-visualization-controls-rangefilter-thumblabel': {\n      color: theme.palette.text.secondary,\n      padding: 0,\n      fontWeight: 500\n    },\n    '& .google-visualization-controls-slider-thumb': {\n      background: theme.palette.primary.main,\n      border: 'unset',\n      borderRadius: theme.shape.borderRadius\n    }\n  },\n\n  // These are the paths showing on top of the line chart\n  // and the stroke around the bar/column chart\n  // when the user hovers on the legend to make the serie stand out\n  // by Google Chart's default doesn't change color based on light/dark theme, but we modify here:\n  '& path[stroke-opacity=\"0.3\"], path[stroke-opacity=\"0.1\"], path[stroke-opacity=\"0.05\"], rect[stroke-opacity]': {\n    stroke: theme.palette.text.primary,\n    strokeWidth: 3\n  },\n\n  // Cursor of series in legends\n  '& [column-id]:not(:empty)': {\n    cursor: 'pointer',\n    ':hover': {\n      fontWeight: 600\n    }\n  }\n}));\n\nexport default GoogleChartStyleWrapper;\n","import { isValidArray } from \"../UtilFunctions\";\n\nconst normalizeColorStopOffsets = ({ offsets, minOffset, maxOffset }) => {\n  return offsets.map(offset => (offset - minOffset) / (maxOffset - minOffset));\n}\n\nconst normalizeColorStops = ({ colors, optionalMinValue, optionalMaxValue }) => {\n  if (!isValidArray(colors)) return [\n    { color: \"#fff\", offset: 0 },\n    { color: \"#fff\", offset: 1 }\n  ];\n\n  // No offsets provided, generate equally spaced offsets\n  if (typeof colors[0] === 'string') {\n    const totalColors = colors.length;\n    return colors.map((color, index) => ({\n      color: color,\n      offset: index / (totalColors - 1)\n    }));\n  }\n  // Offsets are provided, normalize them\n  else {\n    let clampedStops = colors;\n    if (optionalMinValue) {\n      clampedStops = colors.filter(colorStop => colorStop.offset >= optionalMinValue);\n    }\n    if (optionalMaxValue) {\n      clampedStops = colors.filter(colorStop => colorStop.offset <= optionalMaxValue);\n    }\n    const offsets = clampedStops.map(colorStop => colorStop.offset);\n\n    const minOffset = optionalMinValue || Math.min(...offsets);\n    const maxOffset = optionalMaxValue || Math.max(...offsets);\n\n    const normalizedOffsets = normalizeColorStopOffsets({ offsets, minOffset, maxOffset });\n\n    return clampedStops.map((colorStop, index) => ({\n      color: colorStop.color,\n      offset: normalizedOffsets[index]\n    }));\n  }\n}\n\n// Function to return an array of STEPS discrete colors in a gradient from an array of starting colors\n// Used for NivoCalendarChart\nfunction hexToRgb(hex) {\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)]\n    : [null, null, null];\n}\nfunction rgbToHex(r, g, b) {\n  return \"#\" + [r, g, b].map(x => {\n    const hex = x.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n  }).join('');\n}\nfunction interpolateColor(color1, color2, factor) {\n  // Return immediately if the 2 colors are the same\n  if (color1.every((element, index) => element === color2[index])) return color1;\n\n  // Else, calculate the middle of the 2 colors\n  let result = color1.slice();\n  for (let i = 0; i < 3; i++) {\n    result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n  }\n  return result;\n}\nexport const generateDiscreteColorGradientArray = ({ colors, numSteps = 100 }) => {\n  const normalizedColors = normalizeColorStops({ colors });\n  normalizedColors.forEach((colorStop) => {\n    colorStop.color = hexToRgb(colorStop.color)\n  });\n\n  let colorArray = [];\n  const stepPositions = Array.from({ length: numSteps }, (_, i) => i / (numSteps - 1));\n\n  for (let i = 0; i < stepPositions.length; i++) {\n    const pos = stepPositions[i];\n    let color1, color2, offset1, offset2;\n\n    for (let j = 0; j < normalizedColors.length - 1; j++) {\n      if (pos >= normalizedColors[j].offset && pos <= normalizedColors[j + 1].offset) {\n        color1 = normalizedColors[j].color;\n        color2 = normalizedColors[j + 1].color;\n        offset1 = normalizedColors[j].offset;\n        offset2 = normalizedColors[j + 1].offset;\n        break;\n      }\n    }\n\n    const localFactor = (pos - offset1) / (offset2 - offset1);\n    const interpolatedColor = interpolateColor(color1, color2, localFactor);\n    colorArray.push(rgbToHex(...interpolatedColor));\n  }\n\n  return colorArray;\n};\n\n// Function to return CSS background from an array of colors (with or without offsets)\nexport const generateCssBackgroundGradient = ({ gradientDirection, colors, optionalMinValue, optionalMaxValue }) => {\n  const normalizedColors = normalizeColorStops({ colors, optionalMinValue, optionalMaxValue });\n\n  return `linear-gradient(${gradientDirection}, ${normalizedColors.map(colorStop => `${colorStop.color} ${colorStop.offset * 100}%`).join(', ')})`;\n}\n\nexport const generateSvgFillGradient = ({ colors, optionalMinValue, optionalMaxValue }) => {\n  const normalizedColors = normalizeColorStops({ colors, optionalMinValue, optionalMaxValue });\n\n  return normalizedColors.map(colorStop => ({\n    color: colorStop.color,\n    offset: colorStop.offset * 100 + '%'\n  }));\n};\n\n// Gradient for background of the Google Charts\nexport const BackgroundGradient = ({ id, colors }) => (\n  <svg width={0} height={0} visibility=\"hidden\">\n    <defs>\n      <linearGradient id={id} x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n        {colors.map((colorStop, index) => (\n          <stop key={index} offset={colorStop.offset} stopColor={colorStop.color} />\n        ))}\n      </linearGradient>\n    </defs>\n  </svg>\n);","import { useTheme } from '@mui/material/styles';\nimport { Box, Typography } from '@mui/material';\nimport { generateCssBackgroundGradient } from '../../../../Utils/Gradient/GradientUtils';\n\nconst ValueRangeBox = ({ title, valueRange, colorAxis, isPortrait }) => {\n  const theme = useTheme();\n\n  if (valueRange?.min === null || valueRange?.max === null) return null;\n\n  const { colors, minValue, maxValue } = colorAxis;\n  let rangeBoxMinValue = minValue, rangeBoxMaxValue = maxValue;\n\n  if (minValue === undefined) rangeBoxMinValue = valueRange.min;\n  if (maxValue === undefined) rangeBoxMaxValue = valueRange.max;\n\n  if (valueRange.min < rangeBoxMinValue) rangeBoxMinValue = valueRange.min;\n  if (valueRange.max > rangeBoxMaxValue) rangeBoxMaxValue = valueRange.max;\n\n  const calculateMarkerPositionOnRangeBox = (value) => {\n    const position = ((value - rangeBoxMinValue) / (rangeBoxMaxValue - rangeBoxMinValue)) * 100;\n    return `${position}%`;\n  };\n\n  const labelStyle = {\n    position: 'absolute',\n    fontSize: '0.75rem',\n    color: theme.palette.text.secondary,\n    lineHeight: 1,\n    textAlign: 'center',\n    transform: 'translateX(-50%)',\n    minWidth: '75px',\n    whiteSpace: 'nowrap',\n  };\n  const topLabelStyle = {\n    top: '-1.5rem',\n    transform: 'translateX(-50%)'\n  };\n  const bottomLabelStyle = {\n    bottom: '-1.25rem',\n    transform: isPortrait ? 'translateX(-100%)' : 'translateX(-50%)'\n  };\n\n  const triangleStyle = {\n    position: 'absolute',\n    width: 0,\n    height: 0,\n    borderLeft: '0.25rem solid transparent',\n    borderRight: '0.25rem solid transparent',\n    transform: 'translateX(-50%)',\n  };\n  const topTriangleStyle = {\n    top: '-0.5rem',\n    borderTop: `0.25rem solid ${theme.palette.text.secondary}`\n  };\n  const bottomTriangleStyle = {\n    bottom: '-0.5rem',\n    borderBottom: `0.25rem solid ${theme.palette.text.secondary}`\n  };\n\n  return (\n    <Box sx={{\n      position: 'sticky',\n      width: 'fit-content',\n      my: 4,\n      float: 'right',\n      right: (isPortrait ? '0' : '50px')\n    }}>\n      <Typography sx={{\n        display: 'inline',\n        position: 'absolute',\n        textAlign: 'right',\n        transform: 'translateX(calc(-100% - 0.5rem))',\n        fontSize: '0.75rem',\n        lineHeight: 1.25,\n        fontWeight: 500,\n        color: 'text.secondary'\n      }}>\n        {title}\n      </Typography>\n      <Box sx={{\n        background: generateCssBackgroundGradient({ gradientDirection: 'to right', colors: colors, optionalMaxValue: rangeBoxMaxValue }),\n        color: theme.palette.text.secondary,\n        border: `1px solid ${theme.palette.text.secondary}`,\n        width: isPortrait ? '250px' : '300px',\n        height: '1rem',\n        position: 'relative',\n        justifyContent: 'space-between',\n      }}>\n        <span style={{ ...labelStyle, ...topLabelStyle, left: calculateMarkerPositionOnRangeBox(valueRange.min) }}>min: {Math.round(valueRange.min)}</span>\n        <span style={{ ...labelStyle, ...bottomLabelStyle, left: calculateMarkerPositionOnRangeBox(valueRange.max) }}>max: {Math.round(valueRange.max)}</span>\n        <div style={{ ...triangleStyle, ...topTriangleStyle, left: calculateMarkerPositionOnRangeBox(valueRange.min) }}></div>\n        <div style={{ ...triangleStyle, ...bottomTriangleStyle, left: calculateMarkerPositionOnRangeBox(valueRange.max) }}></div>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ValueRangeBox;","import { useEffect, useRef } from 'react';\nimport { Box, Chip } from '@mui/material';\n\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from '../../../../Utils/UtilFunctions';\n\nconst TooltipCalendarChart = ({ day, color, tooltipText, dateRange, inFirstTwoRowsOfChart }) => {\n  const tooltipBoxRef = useRef(null);\n\n  // If the cell hovered over is in the first two rows of the chart,\n  // move the tooltip to the bottom of the chart\n  // Read subsequent comments to understand why we need to do this\n  useEffect(() => {\n    if (tooltipBoxRef.current && inFirstTwoRowsOfChart(day, dateRange)) {\n      const parentDiv = tooltipBoxRef.current.parentElement;\n      if (parentDiv) {\n        parentDiv.style.top = '11vh';\n      }\n    }\n  }, [tooltipBoxRef, inFirstTwoRowsOfChart]);\n\n\n  // Note that our Box is just a container 'inside' the tooltip\n  // The tooltip itself is actually the Box's parent div\n  return (\n    <Box ref={tooltipBoxRef} className='nivo-tooltip'>\n      <Chip sx={{ backgroundColor: color, mr: 0.5, height: '10px', width: '10px', borderRadius: '50%' }} />\n      {parse(tooltipText, { replace: replacePlainHTMLWithMuiComponents })}\n    </Box>\n  );\n};\n\nexport default TooltipCalendarChart;","\nexport const getDateRangeForCalendarChart = (dateStrings) => {\n  return {\n    min: dateStrings.reduce((min, current) => (current < min ? current : min)),\n    max: dateStrings.reduce((max, current) => (current > max ? current : max))\n  }\n};\n\nexport const getValueRangeForCalendarChart = (values) => {\n  return { min: Math.min(...values), max: Math.max(...values) };\n};\n\nexport const getCalendarChartMargin = (isPortrait) => {\n  return isPortrait\n    ? { top: 30, right: 0, bottom: 20, left: 20 }\n    : { top: 30, right: 40, bottom: 20, left: 40 };\n};\n\nexport const calculateValueRange = (data) => {\n  const values = data.map((item) => item.value);\n  return { min: Math.min(...values), max: Math.max(...values) };\n};\n\n","/* eslint-disable */\nimport { ResponsiveCalendar } from '@nivo/calendar';\nimport { useTheme } from '@mui/material/styles';\nimport { generateDiscreteColorGradientArray } from '../../../../Utils/Gradient/GradientUtils';\n\nimport ValueRangeBox from './ValueRangeBox';\nimport TooltipCalendarChart from './TooltipCalendarChart';\nimport { getCalendarChartMargin, getDateRangeForCalendarChart, getValueRangeForCalendarChart } from '../NivoChartHelper';\nimport { useEffect, useState } from 'react';\nimport { isValidArray } from '../../../../Utils/UtilFunctions';\nimport GoogleChartStyleWrapper from '../../SubchartUtils/GoogleChartStyleWrapper';\nimport { Box } from '@mui/material';\n\nconst YEAR_SPACING = 40;\n\nconst NivoCalendarChart = (props) => {\n    const { dataArray, valueRangeBoxTitle, isPortrait, options, windowSize } = props;\n\n    const [dateRange, setDateRange] = useState({ min: null, max: null });\n    const [valueRange, setValueRange] = useState({ min: null, max: null });\n    const [calendarHeight, setCalendarHeight] = useState(400);\n\n    useEffect(() => {\n        if (!isValidArray(dataArray)) return;\n\n        const dateStrings = dataArray.map(item => item.day);\n        const thisDateRange = getDateRangeForCalendarChart(dateStrings)\n        setDateRange(thisDateRange);\n\n        const values = dataArray.map(item => item.value);\n        setValueRange(getValueRangeForCalendarChart(values));\n\n        // Get the number of years we have data for and the number of years to display\n        const lastYear = new Date(thisDateRange.max).getFullYear();\n        const firstYear = new Date(thisDateRange.min).getFullYear();\n        const numberOfYears = lastYear - firstYear + 1;\n        const calendarChartMargin = getCalendarChartMargin(isPortrait);\n\n        const cellSize = Math.min(windowSize[0] / 60, 20); // windowSize[0]: innerWidth\n        // max cell size of 20\n        const yearHeight = cellSize * 7; // Height for one year\n        const totalHeight = numberOfYears * (yearHeight + YEAR_SPACING) + calendarChartMargin.top + calendarChartMargin.bottom;\n        setCalendarHeight(totalHeight);\n    }, [dataArray, windowSize]);\n\n    const displayLegend = options?.legend?.position && options.legend.position !== \"none\";\n\n    const calendarChartMargin = getCalendarChartMargin(isPortrait, displayLegend);\n\n    const theme = useTheme();\n\n    // Function to extract tooltip text from HTML tooltip\n    const extractTooltipText = (tooltip) => {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(tooltip, 'text/html');\n        return doc.body.innerHTML;\n    };\n\n    // Function to check if a date is in the first two rows of the chart\n    // Used to anchor the tooltip to the bottom while hovering over\n    // the first two rows of the chart\n    const inFirstTwoRowsOfChart = (dateStr, dateRange) => {\n        const date = new Date(dateStr);\n        const dayOfWeek = date.getDay();\n\n        // Check if the date is Sunday (0) or Monday (1)\n        const isFirstTwoDaysOfWeek = dayOfWeek === 0 || dayOfWeek === 1;\n\n        // Extract the first year from the date range once\n        const firstYear = new Date(dateRange.min).getFullYear();\n\n        // Check if the date is in the first year of the date range\n        const isInFirstYear = date.getFullYear() === firstYear;\n\n        return isFirstTwoDaysOfWeek && isInFirstYear;\n    };\n\n    const calendarCellColors = generateDiscreteColorGradientArray({\n        colors: options?.colorAxis?.colors,\n        numSteps: options?.colorAxis?.gradientSteps\n    });\n\n    return (\n        <GoogleChartStyleWrapper\n            isPortrait={isPortrait}\n            className=\"Calendar\"\n            position=\"relative\"\n            minWidth=\"550px\"\n            height=\"100%\"\n        >\n            {displayLegend ? (\n                <ValueRangeBox\n                    title={valueRangeBoxTitle}\n                    valueRange={valueRange}\n                    colorAxis={options?.colorAxis}\n                    isPortrait={isPortrait}\n                />\n            ) : null}\n\n\n            <Box sx={{\n                height: `${calendarHeight}px`,\n                maxHeight: \"450px\",\n                overflowY: 'auto',\n                width: '100%',\n                position: 'relative'\n            }}>\n                <Box sx={{\n                    height: `${calendarHeight}px`,\n                    position: 'absolute',\n                    width: '100%'\n                }}>\n                    <ResponsiveCalendar\n                        data={dataArray}\n                        from={dateRange.min}\n                        to={dateRange.max}\n                        emptyColor=\"transparent\"\n                        align=\"top\"\n                        theme={{\n                            text: {\n                                fill: theme.palette.text.secondary,\n                            },\n                            fontSize: '0.75rem'\n                        }}\n                        colors={calendarCellColors}\n                        minValue={options?.colorAxis?.minValue}\n                        maxValue={options?.colorAxis?.maxValue}\n                        margin={calendarChartMargin}\n                        yearSpacing={YEAR_SPACING}\n                        monthBorderColor={theme.palette.text.primary}\n                        monthBorderWidth={1}\n                        daySpacing={0.25}\n                        dayBorderWidth={0}\n                        tooltip={({ day, value, color }) => {\n                            const tooltipData = dataArray.find(item => item.day === day);\n                            const tooltipText = tooltipData ? extractTooltipText(tooltipData.tooltip) : '';\n\n                            return (\n                                <TooltipCalendarChart\n                                    day={day}\n                                    color={color}\n                                    tooltipText={tooltipText}\n                                    dateRange={dateRange}\n                                    inFirstTwoRowsOfChart={inFirstTwoRowsOfChart}\n                                />\n                            );\n                        }}\n                    />\n                </Box>\n            </Box>\n\n        </GoogleChartStyleWrapper>\n    );\n};\n\nexport default NivoCalendarChart;\n\n","/* eslint-disable */\n\nimport { styled } from '@mui/material/styles';\nimport { Paper } from '@mui/material';\n\nimport { addDays, endOfDay, startOfDay, format } from \"date-fns\";\nimport AggregationType from './AggregationType';\n\nconst today = new Date();\n\nconst last14Days = {\n  label: \"Last 14d\",\n  range: () => ({\n    startDate: startOfDay(addDays(today, -14)),\n    endDate: endOfDay(today)\n  })\n};\n\nconst last30Days = {\n  label: \"Last 30d\",\n  range: () => ({\n    startDate: startOfDay(addDays(today, -30)),\n    endDate: endOfDay(today)\n  })\n};\n\nconst last365Days = {\n  label: \"Last 365d\",\n  range: () => ({\n    startDate: startOfDay(addDays(today, -365)),\n    endDate: endOfDay(today)\n  })\n};\n\nconst allTime = ({ minDateOfDataset }) => {\n  const formattedMinDate = format(minDateOfDataset, \"MMM yyyy\");\n  return {\n    label: `All Time (${formattedMinDate} - Now)`,\n    range: () => ({\n      startDate: minDateOfDataset,\n      endDate: endOfDay(today)\n    })\n  }\n};\n\nexport const returnCustomStaticRanges = ({ minDateOfDataset, aggregationType }) => {\n  switch (aggregationType) {\n    case AggregationType.day:\n      return [last30Days, last365Days];\n    case AggregationType.month:\n    case AggregationType.year:\n      return [allTime({ minDateOfDataset })];\n    default:\n      return [last14Days, last30Days];\n  }\n};\n\nexport const AggregationTypeMetadata = {\n  [AggregationType.hour]: {\n    maxDays: 30,\n    label: \"Hourly\"\n  },\n  [AggregationType.day]: {\n    maxDays: 365,\n    label: \"Daily\"\n  },\n  [AggregationType.month]: {\n    maxDays: Infinity,\n    label: \"Monthly\"\n  },\n  [AggregationType.year]: {\n    maxDays: Infinity,\n    label: \"Yearly\"\n  }\n}\n\nexport const StyledDateRangePicker = styled(Paper, {\n  shouldForwardProp: (prop) => prop !== 'showPickerPanel' && prop !== 'smallScreen',\n})(({ theme, showPickerPanel, smallScreen }) => ({\n  zIndex: showPickerPanel === true && 1,\n  position: \"relative\",\n  padding: showPickerPanel ? theme.spacing(1) : 0,\n  margin: (showPickerPanel && !smallScreen) ? theme.spacing(-1) : 0,\n  maxWidth: '100%',\n  background: showPickerPanel ? theme.palette.customAlternateBackground : 'transparent',\n  boxShadow: showPickerPanel === false && 'none',\n  '& .rdrDayToday .rdrDayNumber span:after': {\n    background: theme.palette.secondary\n  },\n  '& .rdrDateDisplayWrapper, .rdrCalendarWrapper, .rdrDefinedRangesWrapper, .rdrStaticRange, .rdrDateDisplayItem': {\n    background: 'transparent'\n  },\n  '& .rdrDateInput': {\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: 'none'\n  },\n  '& .rdrDateDisplayItemActive': {\n    border: showPickerPanel === false && 'none'\n  },\n  '& .rdrDateDisplay': {\n    margin: 0,\n    minWidth: \"20rem\"\n  },\n  '& .rdrDateDisplayItem': {\n    margin: 0,\n    borderRadius: showPickerPanel ? theme.shape.borderRadius : 0,\n    \"&:hover:not(.rdrDateDisplayItemActive)\": {\n      border: showPickerPanel ? `1px solid ${theme.palette.action.disabled}` : \"none\"\n    }\n  },\n  '& .rdrDateDisplayItem:hover:not(.rdrDateDisplayItemActive)': {\n    border: showPickerPanel === false && '1px solid transparent'\n  },\n  '& .rdrDateDisplayItem + .rdrDateDisplayItem': {\n    margin: 0\n  },\n  '& .rdrDateDisplayItem:first-of-type': {\n    borderRight: showPickerPanel === false && `1px solid ${theme.palette.action.disabled} !important`\n  },\n  '& .rdrMonthAndYearWrapper, .rdrInputRanges': {\n    display: showPickerPanel === false && 'none !important',\n    padding: 0\n  },\n  '& .rdrMonthName': {\n    display: 'none',\n  },\n  '& .rdrDefinedRangesWrapper, .rdrMonths': {\n    display: showPickerPanel === false && 'none'\n  },\n  '&  .rdrInfiniteMonths': {\n    visibility: showPickerPanel === false && 'hidden',\n    width: \"100% !important\",\n    maxWidth: \"675px\",\n    margin: \"auto\"\n  },\n  '& .rdrDateDisplayWrapper': {\n    minWidth: '18rem',\n    borderRadius: theme.shape.borderRadius,\n    border: showPickerPanel ? \"none\" : `1px solid ${theme.palette.action.disabled}`,\n    \"&:hover\": {\n      border: showPickerPanel ? \"none\" : `1px solid ${theme.palette.text.primary}`,\n    }\n  },\n  '& .rdrDateRangePickerWrapper': {\n    width: '100%',\n    flexDirection: 'column-reverse'\n  },\n  '& .rdrStaticRanges': {\n    flexDirection: 'row',\n    minWidth: '21rem'\n  },\n  '& .rdrStaticRangeLabel': {\n    color: theme.palette.text.secondary,\n    borderRadius: theme.shape.borderRadius,\n    padding: `${theme.spacing(0.5)} ${theme.spacing(1)}`\n  },\n  '& .rdrDefinedRangesWrapper': {\n    border: 'none',\n    width: '100%'\n  },\n  '& .rdrNextPrevButton': {\n    background: theme.palette.primary.main,\n    borderRadius: theme.shape.borderRadius,\n    opacity: 1,\n    '&:hover': {\n      opacity: 0.5,\n      background: theme.palette.primary.main\n    }\n  },\n  '& .rdrNextPrevButton > i': {\n    color: \"white\"\n  },\n  '& .rdrNextButton > i': {\n    borderColor: `transparent transparent transparent white`\n  },\n  '& .rdrPprevButton > i': {\n    borderColor: `transparent white transparent transparent`\n  },\n  '& .rdrStaticRange': {\n    border: 'none'\n  },\n  '& .rdrStaticRangeSelected > .rdrStaticRangeLabel, .rdrMonthAndYearPickers': {\n    color: theme.palette.primary.main\n  },\n  '& .rdrMonthAndYearPickers': {\n    fontSize: '1rem'\n  },\n  '& .rdrStaticRange:hover .rdrStaticRangeLabel, .rdrStaticRange:focus .rdrStaticRangeLabel': {\n    background: theme.palette.customBackground.toString()\n  },\n  '& .rdrDayNumber span': {\n    color: theme.palette.text.primary.toString()\n  },\n  '& .rdrDayPassive .rdrDayNumber span': {\n    opacity: 0.5\n  },\n  '& .rdrMonthAndYearWrapper select': {\n    color: theme.palette.text.secondary.toString(),\n    background: 'none',\n    padding: `${theme.spacing(1)} ${theme.spacing(2)}`,\n    '&:hover': {\n      border: `1px solid ${theme.palette.text.secondary}`\n    }\n  },\n  '& .rdrDateDisplayItem input': {\n    color: theme.palette.text.secondary\n  },\n  '& .rdrDayDisabled': {\n    backgroundColor: theme.palette.customBackground\n  },\n  '& .rdrDayEndOfMonth .rdrInRange, .rdrDayEndOfMonth .rdrStartEdge, .rdrDayEndOfWeek .rdrInRange, .rdrDayEndOfWeek .rdrStartEdge, .rdrEndEdge, .rdrDayEndOfMonth .rdrDayInPreview, .rdrDayEndOfMonth .rdrDayStartPreview, .rdrDayEndOfWeek .rdrDayInPreview, .rdrDayEndOfWeek .rdrDayStartPreview, .rdrDayEndPreview': {\n    borderTopRightRadius: '2rem',\n    borderBottomRightRadius: '2rem'\n  },\n  '& .rdrStartEdge, .rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfWeek .rdrEndEdge, .rdrDayStartOfMonth .rdrDayInPreview, .rdrDayStartOfMonth .rdrDayEndPreview, .rdrDayStartOfWeek .rdrDayInPreview, .rdrDayStartOfWeek .rdrDayEndPreview, .rdrDayStartPreview': {\n    borderTopLeftRadius: '2rem',\n    borderBottomLeftRadius: '2rem'\n  },\n  '& .rdrStartEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrEndEdge': {\n    left: 0\n  },\n  '& .rdrEndEdge, .rdrDayEndOfWeek .rdrInRange, .rdrDayEndOfMonth .rdrInRange, .rdrDayEndOfWeek .rdrStartEdge': {\n    right: 0\n  },\n  '& .rdrSelected, .rdrInRange, .rdrStartEdge, .rdrEndEdge': {\n    top: '0px',\n    bottom: '0px',\n  },\n  '& .rdrMonths': {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  '& .rdrDay': {\n    marginBottom: \"1px\",\n    '& span': {\n      top: '0px',\n      bottom: '0px'\n    }\n  },\n  '& .rdrMonthsHorizontal': {\n    overflowY: 'hidden'\n  },\n  '& .rdrDateInput:first-of-type:before': {\n    content: '\"\"',\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' class='MuiSvgIcon-root' focusable='false' aria-hidden='true' viewBox='0 0 24 24' data-testid='DateRangeIcon'%3E%3Cpath d='M9 11H7v2h2zm4 0h-2v2h2zm4 0h-2v2h2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 16H5V9h14z' fill='${theme.palette.text.secondary}'/%3E%3C/svg%3E\")`,\n    width: \"0.75rem\",\n    height: \"0.75rem\",\n    display: \"block\",\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    left: \"0.75rem\"\n  },\n  '& .rdrStaticRangeSelected span': {\n    color: theme.palette.primary.main\n  },\n  '& .rdrDayToday .rdrDayNumber span:after': {\n    background: theme.palette.secondary.main,\n    width: \"0.25rem\",\n    height: \"0.25rem\",\n    borderRadius: \"50%\"\n  }\n}));\n\nexport const returnFormattedDates = ({ startDateObject, endDateObject }) => {\n  return {\n    startDate: format(startDateObject, 'yyyy-MM-dd'),\n    endDate: format(endDateObject, 'yyyy-MM-dd')\n  }\n}","import { ToggleButton, ToggleButtonGroup } from '@mui/material';\n\nimport AggregationType from './AggregationType';\nimport { AggregationTypeMetadata } from './DateRangePickerUtils';\n\nexport default function AggregationTypeToggle({ aggregationType, setAggregationType }) {\n  const handleChange = (_, newType) => {\n    if (newType !== null) {\n      setAggregationType(newType);\n    }\n  };\n\n  return (\n    <ToggleButtonGroup\n      color=\"primary\"\n      value={aggregationType}\n      exclusive\n      onChange={handleChange}\n      aria-label=\"aggregation type toggle for graph average\"\n      size=\"small\"\n      fullWidth\n      sx={{ height: \"100%\" }}\n    >\n      {Object.values(AggregationType).map(type => (\n        <ToggleButton\n          key={type}\n          size=\"small\"\n          sx={{ textTransform: \"capitalize !important\", px: 1.25, py: 0.5 }}\n          value={type}\n          aria-label={type}\n        >\n          {AggregationTypeMetadata[type]?.label || \"\"}\n        </ToggleButton>\n      ))}\n    </ToggleButtonGroup>\n  );\n}","import { createContext, useMemo, useState, useContext } from 'react';\nimport AggregationType from '../Components/DateRangePicker/AggregationType';\n\nconst DateRangePickerContext = createContext();\n\nconst initDateRange = { startDate: null, endDate: null, key: 'selection' };\n\nexport function DateRangePickerProvider({ children }) {\n    const [dateRange, setDateRange] = useState(initDateRange);\n    const [aggregationType, setAggregationType] = useState(AggregationType.hour);\n\n    const contextValue = useMemo(() => ({\n        dateRange, setDateRange,\n        aggregationType, setAggregationType\n    }), [dateRange, aggregationType]);\n\n    return (\n        <DateRangePickerContext.Provider value={contextValue}>\n            {children}\n        </DateRangePickerContext.Provider>\n    );\n}\n\n// Custom hook \nexport const useDateRangePicker = () => useContext(DateRangePickerContext);","/* eslint-disable */\n\nimport { useState, useRef, useEffect, useContext } from 'react';\n\nimport { DateRangePicker, createStaticRanges } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport { Box, CircularProgress, Grid, useMediaQuery, useTheme } from '@mui/material';\n\nimport { AggregationTypeMetadata, StyledDateRangePicker, returnCustomStaticRanges, returnFormattedDates } from './DateRangePickerUtils';\nimport { getHistoricalChartApiUrl } from '../../API/ApiUrls';\nimport { ChartAPIendpoints, ChartAPIendpointsOrder } from \"../../API/Utils\";\nimport AggregationTypeToggle from './AggregationTypeToggle';\nimport AggregationType from './AggregationType';\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\n\nimport { differenceInDays, isSameDay } from 'date-fns';\nimport { fetchDataFromURL } from '../../API/ApiFetch';\nimport { useDateRangePicker } from '../../ContextProviders/DateRangePickerContext';\n\nimport { useSnackbar } from \"notistack\";\nimport { SnackbarMetadata } from '../../Utils/SnackbarMetadata';\n\nconst historicalChartIndex = ChartAPIendpointsOrder.findIndex(endpoint => endpoint === ChartAPIendpoints.historical);\n\nconst CustomDateRangePicker = (props) => {\n  const { enqueueSnackbar } = useSnackbar()\n\n  const { minDateOfDataset, dataType } = props;\n  const { currentSchoolID, setIndividualChartData } = useContext(DashboardContext);\n\n  const today = new Date();\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // Keep track of the date range and aggregationType  selected by the user\n  const { dateRange, setDateRange, aggregationType, setAggregationType } = useDateRangePicker();\n\n  useEffect(() => {\n    const { startDate, endDate } = dateRange || {};\n    if (!startDate || !endDate) return;\n\n    // Start date and end date can't be the same date\n    if (isSameDay(startDate, endDate)) {\n      // No need to display error message as this is usually caused when only the start date is selected\n      return;\n    }\n\n    // Restrict the selection to only max days per aggregationType\n    if (differenceInDays(endDate, startDate) > AggregationTypeMetadata[aggregationType]?.maxDays) {\n      enqueueSnackbar(`${AggregationTypeMetadata[aggregationType]} average is limited to max ${maxAllowedDays}d`, SnackbarMetadata.error);\n      return;\n    }\n\n    requestNewDataFromApi();\n  }, [dateRange])\n\n\n  const [chartUrl, setChartUrl] = useState();\n\n  // Control displaying / hiding of the date range picker\n  const [showPickerPanel, setShowPickerPanel] = useState(false);\n  const paperRef = useRef(null);\n\n  const [isFetchingData, setIsFetchingData] = useState(false);\n\n  // Hide or show the date-range-picker panel\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (paperRef.current && !paperRef.current.contains(event.target)) {\n        setShowPickerPanel(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [paperRef]);\n\n  // Set aggregationType and request data from API if it changes\n  useEffect(() => {\n    if (!aggregationType) {\n      setAggregationType(AggregationType.hour);\n    }\n    // Initialize with the range of the first static range (default)\n    const defaultRange = {\n      ...returnCustomStaticRanges({\n        aggregationType: aggregationType || AggregationType.hour,\n        minDateOfDataset\n      })[0].range(), key: 'selection'\n    };\n    setDateRange(defaultRange);\n\n    requestNewDataFromApi(defaultRange);\n  }, [aggregationType]);\n\n  // Send query request to backend when APPLY button is clicked\n  // Check if a new date range is selected as well\n  const requestNewDataFromApi = (_dateRange = null) => {\n    const range = _dateRange || dateRange;\n    if (!range || !range.startDate || !range.endDate) return;\n\n    const formattedDates = returnFormattedDates({\n      startDateObject: range.startDate,\n      endDateObject: range.endDate\n    });\n    const newUrl = getHistoricalChartApiUrl({\n      endpoint: ChartAPIendpoints.historical,\n      school_id: currentSchoolID,\n      aggregationType: aggregationType,\n      dataType: dataType,\n      startDate: formattedDates.startDate,\n      endDate: formattedDates.endDate\n    });\n\n    if (newUrl !== chartUrl) {\n      setIsFetchingData(true);\n\n      fetchDataFromURL({\n        url: newUrl\n      })\n        .then((data) => {\n          setIsFetchingData(false);\n          setShowPickerPanel(false);\n\n          setIndividualChartData(historicalChartIndex, data);\n          setChartUrl(newUrl);\n        })\n        .catch((error) => {\n          setIsFetchingData(false);\n          enqueueSnackbar(\"Error fetching historical data, please try again\", SnackbarMetadata.error);\n          console.log(error);\n        });\n    }\n  }\n\n  return (\n    <>\n      <Grid item alignItems={showPickerPanel ? \"start\" : \"stretch\"} xs={12} sm=\"auto\">\n        <AggregationTypeToggle\n          aggregationType={aggregationType}\n          setAggregationType={setAggregationType}\n          smallScreen={smallScreen}\n        />\n      </Grid>\n\n      <Grid\n        item\n        sx={{\n          height: \"2rem\",\n          width: { [theme.breakpoints.down(\"sm\")]: { width: \"100%\" } },\n        }}\n      >\n        <StyledDateRangePicker\n          showPickerPanel={showPickerPanel}\n          smallScreen={smallScreen}\n          ref={paperRef}\n          elevation={8}\n          onClick={() => setShowPickerPanel(true)}\n          sx={{ position: \"relative\" }}\n        >\n          {/* Calendar wrapper with blur on loading */}\n          <Box\n            sx={{\n              filter: (isFetchingData && showPickerPanel) ? \"blur(2px)\" : \"none\",\n              pointerEvents: isFetchingData ? \"none\" : \"auto\",\n              transition: \"filter 0.2s ease-in-out\",\n            }}\n          >\n            <DateRangePicker\n              ranges={[dateRange]}\n              onChange={(ranges) => {\n                if (!ranges) return;\n                setDateRange(ranges.selection);\n              }}\n              staticRanges={createStaticRanges(\n                returnCustomStaticRanges({ minDateOfDataset, aggregationType })\n              )}\n              inputRanges={[]}\n              rangeColors={[\n                theme.palette.primary.main,\n                theme.palette.secondary.main,\n                theme.palette.text.secondary,\n              ]}\n              minDate={minDateOfDataset}\n              maxDate={today}\n              months={1}\n              showMonthAndYearPickers={true}\n              direction=\"horizontal\"\n              fixedHeight={true}\n              preventSnapRefocus={true}\n              startDatePlaceholder=\"Start Date\"\n              endDatePlaceholder=\"End Date\"\n              editableDateInputs={true}\n              showMonthArrow={true}\n              weekStartsOn={1}\n            />\n          </Box>\n\n          {/* Overlay spinner */}\n          {isFetchingData && (\n            <Box\n              sx={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                zIndex: 10,\n              }}\n            >\n              <CircularProgress\n                disableShrink\n                size={showPickerPanel ? \"2.5rem\" : \"1.25rem\"}\n                color=\"primary\"\n              />\n            </Box>\n          )}\n        </StyledDateRangePicker>\n      </Grid>\n\n    </>\n  );\n};\n\nexport default CustomDateRangePicker;\n","import { createContext, useMemo, useState, useContext } from 'react';\n\nconst AxesPickerContext = createContext();\n\nexport function AxesPickerProvider({ children }) {\n    const [hAxis, setHAxis] = useState();\n    const [vAxis, setVAxis] = useState();\n\n    const contextValue = useMemo(() => ({\n        hAxis, setHAxis,\n        vAxis, setVAxis\n    }), [hAxis, vAxis]);\n\n    return (\n        <AxesPickerContext.Provider value={contextValue}>\n            {children}\n        </AxesPickerContext.Provider>\n    );\n}\n\n// Custom hook \nexport const useAxesPicker = () => useContext(AxesPickerContext);","import React, { useContext, useEffect, useState } from 'react';\nimport { Select, MenuItem, FormControl, InputLabel, Button, Stack, Grid, CircularProgress } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useAxesPicker } from '../../ContextProviders/AxesPickerContext';\nimport { getCorrelationChartApiUrl } from '../../API/ApiUrls';\nimport { ChartAPIendpoints, ChartAPIendpointsOrder } from \"../../API/Utils\";\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\nimport { fetchDataFromURL } from '../../API/ApiFetch';\n\nconst correlationChartIndex = ChartAPIendpointsOrder.findIndex(endpoint => endpoint === ChartAPIendpoints.correlationDailyAverage);\n\n// Define custom styled components for shared border radius\nconst LeftSelect = styled(FormControl)(({ theme }) => ({\n  borderTopRightRadius: 0,\n  borderBottomRightRadius: 0,\n  textTransform: 'capitalize',\n  minWidth: '150px',\n  maxWidth: '250px',\n  '& .MuiOutlinedInput-root': {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n  '& .MuiOutlinedInput-notchedOutline': {\n    borderRight: 'none'\n  },\n  '& .Mui-focused .MuiOutlinedInput-notchedOutline': {\n    borderRight: `2px solid ${theme.palette.primary.main}`\n  }\n}));\n\nconst RightSelect = styled(FormControl)(({ theme }) => ({\n  borderTopLeftRadius: 0,\n  borderBottomLeftRadius: 0,\n  textTransform: 'capitalize',\n  minWidth: '150px',\n  maxWidth: '250px',\n  '& .MuiOutlinedInput-root': {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n}));\n\n\nconst AxesPicker = (props) => {\n  const { currentSchoolID, setIndividualChartData } = useContext(DashboardContext);\n  const { allowedAxes, selectedAxes, dataType } = props;\n  const { hAxis, vAxis, setHAxis, setVAxis } = useAxesPicker();\n  const [chartUrl, setChartUrl] = useState();\n  const [isFetchingData, setIsFetchingData] = useState(false);\n  const [shouldDisableApplyButton, setShouldDisableApplyButton] = useState(true);\n\n  useEffect(() => {\n    const { hAxis: receivedHAxis, vAxis: receivedVAxis } = selectedAxes;\n    if (!(receivedHAxis && receivedVAxis)) {\n      setShouldDisableApplyButton(true);\n      return;\n    };\n\n    if (!(hAxis === receivedHAxis && vAxis === receivedVAxis)) {\n      setVAxis(receivedVAxis);\n      setHAxis(receivedHAxis);\n    }\n  }, [selectedAxes, hAxis, vAxis, setHAxis, setVAxis]);\n\n  const handleHAxisChange = (event) => {\n    const newHAxis = event.target.value;\n    setHAxis(newHAxis);\n    if (newHAxis === vAxis) {\n      setVAxis('');\n    }\n  };\n\n  const handleVAxisChange = (event) => {\n    setVAxis(event.target.value);\n    if (event.target.value === hAxis) {\n      setHAxis('');\n    }\n  };\n\n  useEffect(() => {\n    const { hAxis: receivedHAxis, vAxis: receivedVAxis } = selectedAxes;\n    if (!(receivedHAxis && receivedVAxis)) {\n      return;\n    };\n\n    setShouldDisableApplyButton(hAxis === receivedHAxis && vAxis === receivedVAxis);\n\n  }, [hAxis, vAxis, selectedAxes]);\n\n  const applyChanges = () => {\n    if (!(vAxis && hAxis)) return;\n\n    const newUrl = getCorrelationChartApiUrl({\n      endpoint: ChartAPIendpoints.correlationDailyAverage,\n      school_id: currentSchoolID,\n      dataType: dataType,\n      sensorX: hAxis,\n      sensorY: vAxis\n    });\n\n    if (newUrl !== chartUrl) {\n      setIsFetchingData(true);\n\n      fetchDataFromURL({\n        url: newUrl\n      })\n        .then((data) => {\n          setIndividualChartData(correlationChartIndex, data);\n          setChartUrl(newUrl);\n          setIsFetchingData(false);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  const renderApplyButtonLabel = () => {\n    return (\n      isFetchingData ? <CircularProgress disableShrink size=\"1.4375rem\" color=\"inherit\" /> : \"APPLY\"\n    )\n  };\n\n  // Disable option if the current dataType isn't in its allowedDataTypes array\n  const shouldDisableOption = (option) => {\n    return !option.allowedDataTypes.includes(dataType);\n  }\n\n  return (\n    <Grid container item spacing={1} alignItems=\"center\">\n      <Grid item xs={12} sm=\"auto\">\n        <Stack direction=\"row\" spacing={0}>\n          <LeftSelect fullWidth size=\"small\">\n            <InputLabel id=\"x-axis-select-label\">X Axis</InputLabel>\n            <Select\n              labelId=\"x-axis-select-label\"\n              value={hAxis || selectedAxes?.hAxis || null}\n              label=\"X Axis\"\n              onChange={handleHAxisChange}\n              autoWidth\n            >\n              {allowedAxes?.map(option => (\n                <MenuItem\n                  key={option.sensor}\n                  value={option.sensor}\n                  disabled={option.sensor === vAxis || shouldDisableOption(option)}\n                  sx={{ textTransform: 'capitalize' }}\n                >\n                  {option.sensor}{shouldDisableOption(option) && \" (No Data)\"}\n                </MenuItem>\n              ))}\n            </Select>\n          </LeftSelect>\n          <RightSelect fullWidth size=\"small\">\n            <InputLabel id=\"y-axis-select-label\">Y Axis</InputLabel>\n            <Select\n              labelId=\"y-axis-select-label\"\n              value={vAxis || selectedAxes?.vAxis || null}\n              label=\"Y Axis\"\n              onChange={handleVAxisChange}\n              autoWidth\n            >\n              {allowedAxes?.map(option => (\n                <MenuItem\n                  key={option.sensor}\n                  value={option.sensor}\n                  disabled={option.sensor === hAxis || shouldDisableOption(option)}\n                  sx={{ textTransform: 'capitalize' }}\n                >\n                  {option.sensor}{shouldDisableOption(option) && \" (No Data)\"}\n                </MenuItem>\n              ))}\n            </Select>\n          </RightSelect>\n        </Stack>\n      </Grid>\n      <Grid item xs={12} sm=\"auto\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          sx={{ height: \"100%\" }}\n          onClick={applyChanges}\n          disabled={shouldDisableApplyButton}\n        >\n          {renderApplyButtonLabel()}\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AxesPicker;\n","import { Alert, Box } from \"@mui/material\";\n\nconst NoChartToRender = ({ dataType, height, selectableAxes }) => {\n    let messagePrefix = \"This sensor \";\n    let messageSuffix = \" data. Choose a different sensor or data type.\";\n\n    if (selectableAxes) {\n        messagePrefix = \"This pair of sensors \";\n        messageSuffix = \" correlation data. Choose another pair or a different data type.\"\n    }\n\n    return (\n        <Box height={height}>\n            <Alert severity=\"error\" sx={{ my: 2 }}>\n                {messagePrefix}\n                does not have&nbsp;\n                <Box component=\"span\" textTransform=\"capitalize\">\n                    {dataType}\n                </Box>\n                {messageSuffix}\n            </Alert>\n        </Box>\n    )\n}\n\nexport default NoChartToRender;","/* eslint-disable */\n\nimport { useContext, useEffect, useMemo, useState, useCallback } from 'react';\n\nimport { GoogleContext } from '../../ContextProviders/GoogleContext';\n\nimport { Box, Grid, Stack } from '@mui/material/';\n\nimport { useTheme } from '@mui/material/styles';\nimport SeriesSelector from './SubchartUtils/SeriesSelector';\nimport { generateRandomID, returnGenericOptions, returnChartControlUI, ChartControlType, addTouchEventListenerForChartControl } from '../GoogleChartHelper';\n\nimport GoogleChartStyleWrapper from './SubchartUtils/GoogleChartStyleWrapper';\n\nimport LoadingAnimation from '../../Components/LoadingAnimation';\n\nimport NivoCalendarChart from './NivoCharts/NivoCalendarChart/NivoCalendarChart';\nimport { generateSvgFillGradient, BackgroundGradient } from '../../Utils/Gradient/GradientUtils';\n\nimport CustomDateRangePicker from '../../Components/DateRangePicker/CustomDateRangePicker'\nimport { isValidArray } from '../../Utils/UtilFunctions';\nimport { returnSelectedDataType } from '../../Utils/AirQuality/DataTypes';\n\nimport AxesPicker from '../../Components/AxesPicker/AxesPicker';\n\nimport NoChartToRender from './NoChartToRender';\n\nexport default function SubChart(props) {\n  // Props\n  const { chartData, subchartIndex, windowSize, isPortrait, height, maxHeight, selectedDataType, allowedDataTypes } = props;\n\n  // Use GoogleContext for loading and manipulating the Google Charts\n  const google = useContext(GoogleContext);\n\n  // States of the Google Charts\n  const [dataTable, setDataTable] = useState();\n  const [chartWrapper, setChartWrapper] = useState();\n  const [controlWrapper, setControlWrapper] = useState();\n\n  const [previousChartData, setPreviousChartData] = useState();\n\n  // Get the current theme\n  const theme = useTheme();\n\n  // To determine the first time the chart renders to show/hide the LoadingAnimation\n  const [isFirstRender, setIsFirstRender] = useState(true);\n\n  // To determine if the charts should be rendered or not\n  const [shouldRenderChart, setShouldRenderChart] = useState(true);\n  const [renderChartNow, setRenderChartNow] = useState(false);\n\n  // Keep track of the columns (series) of the chart\n  const [allInitialColumns, setAllInitialColumns] = useState();\n  const [dataColumns, setDataColumns] = useState();\n  const [initialVAxisRange, setInitialVAxisRage] = useState();\n\n  // Define the DOM container's ID for drawing the google chart inside\n  const [chartID, __] = useState(generateRandomID());\n\n  // Get the options object for chart\n  const options = useMemo(() => {\n    return returnGenericOptions({ ...props, theme });\n  }, [props, theme, chartData.chartType]);\n\n  // State to store transformed data for CalendarChart\n  const [calendarDataArray, setCalendarDataArray] = useState(null);\n\n  // Early exit for 'Calendar' chartType\n  if (chartData.chartType === 'Calendar') {\n    useEffect(() => {\n      const dataArray = chartData.dataArray\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].dataArray)\n        || null\n        || null;\n\n      if (!isValidArray(dataArray)) {\n        setShouldRenderChart(false);\n        return; // early return if there is no data to render\n      }\n\n      setCalendarDataArray(dataArray)\n      setShouldRenderChart(true);\n    }, [chartData]);\n\n    if (!calendarDataArray) {\n      return (\n        <Box sx={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n          <LoadingAnimation />\n        </Box>\n      )\n    }\n\n    return (\n      shouldRenderChart ? (\n        <NivoCalendarChart\n          dataArray={calendarDataArray}\n          valueRangeBoxTitle={returnSelectedDataType({ dataTypeKey: selectedDataType, dataTypes: allowedDataTypes, showUnit: true })}\n          isPortrait={isPortrait}\n          options={options}\n          windowSize={windowSize}\n        />\n      ) : (\n        <>\n          <NoChartToRender dataType={returnSelectedDataType({ dataTypeKey: selectedDataType, dataTypes: allowedDataTypes })} />\n          <NivoCalendarChart\n            dataArray={[]}\n            valueRangeBoxTitle={returnSelectedDataType({ dataTypeKey: selectedDataType, dataTypes: allowedDataTypes, showUnit: true })}\n            isPortrait={isPortrait}\n            options={options}\n            windowSize={windowSize}\n          />\n        </>\n      )\n    );\n  }\n\n  // Properties for chart control (if existed)\n  let hasChartControl = false;\n  let chartControlOptions;\n  // Only show the chart control if:\n  // It exists in the database (either for all subcharts or just for a particular subchart)\n  // And if the chart is currently not shown on homePage\n  let chartControl = chartData.control || chartData.subcharts?.[subchartIndex].control;\n  if (chartControl) {\n    hasChartControl = true;\n\n    // Get the options for chartControl if hasChartControl\n    chartControlOptions = {\n      ...chartControl.options,\n      ui: returnChartControlUI({\n        chartControl,\n        mainChartData: chartData,\n        mainChartOptions: options,\n        subchartIndex,\n        theme,\n        isPortrait\n      })\n    };\n\n    // Swap touch events for mouse events on ChartRangeControl\n    // as it doesn't support touch events on mobile\n    if (chartControl.controlType === 'ChartRangeFilter') {\n      useEffect(() => {\n        const cleanupTouchEventListener = addTouchEventListenerForChartControl({ controlWrapper, chartID });\n        return cleanupTouchEventListener;\n      }, [controlWrapper]);\n    }\n  }\n\n  // Properties for selecting (showing or hiding) the serie(s)\n  const seriesSelector = options.seriesSelector || false;\n\n  // Properties for date-range-picker\n  const dateRangePicker = options.dateRangePicker || null;\n\n  // Properties for data formatters\n  const formatters = options.formatters || null;\n\n  // Properties for selectableAxes\n  let selectableAxes = chartData.selectableAxes || null;\n  if (selectableAxes) {\n    if (isValidArray(selectableAxes.allowedAxes)) {\n      if (selectableAxes.allowedAxes.length <= 2) selectableAxes = null; // don't display selectableAxes if number of allowedSensors is less than 3\n    }\n  }\n\n  // Set new options prop and re-render the chart if theme or isPortrait changes\n  useEffect(() => {\n    if (seriesSelector) handleSeriesSelection({ newDataColumns: dataColumns }); // this function set new options, too\n    else {\n      chartWrapper?.setOptions({\n        ...options\n      });\n\n      chartWrapper?.draw();\n      if (hasChartControl) {\n        controlWrapper?.setOptions(chartControlOptions);\n        controlWrapper?.draw();\n      }\n    }\n  }, [theme, isPortrait, windowSize]);\n\n  // Set new initialColumnsColors if the theme changes\n  // This only applies to when seriesSelector.method == \"setViewColumn\"\n  useEffect(() => {\n    if (!dataColumns) return;\n    if (seriesSelector && seriesSelector.method == \"setViewColumn\") {\n      setInitialColumnsColors({ dataColumns: dataColumns });\n      handleSeriesSelection({ newDataColumns: dataColumns });\n    }\n  }, [theme]);\n\n  const getInitialColumns = ({ chartWrapper, dataTable, seriesSelector }) => {\n    // Update the initial DataView's columns (often, all of the series are displayed initially)\n    var initialView = chartWrapper.getView();\n    // If (optional) columns is not specified in database\n    // Assign it from DataTable\n    if (initialView.columns == null) {\n      const viewFromDataTable = new google.visualization.DataView(dataTable);\n      chartWrapper.setView({\n        columns: viewFromDataTable.columns\n      });\n      initialView = chartWrapper.getView();\n    }\n\n    let shouldAssignDomainRoleToFistColumn = true; // variable to only assign type: 'domain' to the very first column\n    let dataSeriesIndex = 0;\n    const allInitialColumns = initialView.columns.map((col, index) => {\n      // A column can either be a number (that denotes the index of the sourceColumn) or an object\n      // The code below harmonize all columns to be an object to store crucial data to toggle their visibility\n      if (typeof col === 'number') col = {\n        role: shouldAssignDomainRoleToFistColumn ? 'domain' : 'data',\n        sourceColumn: col\n      }\n      col.label = dataTable.getColumnLabel(col.sourceColumn);\n      col.indexInAllInitialColumns = index;\n\n      shouldAssignDomainRoleToFistColumn = shouldAssignDomainRoleToFistColumn && false;\n\n      // Set the visibility of data column, \n      if (col.role === 'data') {\n        // If defaultSeriesToDisplayInitially is presented\n        // then, only show these series\n        if (seriesSelector.defaultSeriesToDisplayInitially) {\n          if (seriesSelector.defaultSeriesToDisplayInitially.includes(index)) {\n            col.selected = true;\n          }\n          else {\n            col.selected = false;\n          }\n        }\n        // If no defaultSeriesToDisplayInitially is presented\n        else {\n          // then, all data columns are selected if multiple series are selectable\n          if (seriesSelector.allowMultiple) {\n            col.selected = true;\n          } else {\n            // else for single serie selector, only first data column is selected\n            if (dataSeriesIndex === 0) {\n              col.selected = true;\n            } else {\n              col.selected = false;\n            }\n          }\n        }\n\n        col.seriesIndex = dataSeriesIndex;\n        dataSeriesIndex++;\n      }\n      return col;\n    });\n    setAllInitialColumns(allInitialColumns);\n    const initialVAxisRange = getInitialVAxisRange({ dataTable: dataTable, allInitialColumns: allInitialColumns });\n    setInitialVAxisRage(initialVAxisRange);\n    // To track selection, only get the columns that are:\n    // role === 'data'\n    // visibleInLegend !== false\n    const dataColumns = allInitialColumns.filter((col) => {\n      return col.role === 'data' && options.series?.[col.seriesIndex]?.visibleInLegend !== false;\n    });\n\n    if (seriesSelector.method === \"setViewColumn\") setInitialColumnsColors({ dataColumns: dataColumns });\n\n    setDataColumns(dataColumns);\n    return { initAllInitialColumns: allInitialColumns, initDataColumns: dataColumns };\n  };\n\n  const setInitialColumnsColors = ({ dataColumns }) => {\n    dataColumns.forEach((col) => {\n      // Assign inherit color to this data column\n      col.color = options.colors[col.seriesIndex % options.colors.length];\n      // Assign other inherit attributes from its serie object (if existed)\n      col.serieAttribute = options.series?.[col.seriesIndex];\n    });\n  }\n\n  const getInitialVAxisRange = ({ dataTable, allInitialColumns }) => {\n    let vAxisMin, vAxisMax;\n    allInitialColumns.forEach((col, index) => {\n      if (index === 0) return; // the first column is the domain (hAxis)\n      const range = dataTable.getColumnRange(col.sourceColumn);\n      if (!isNaN(range.min) && range.min) vAxisMin = vAxisMin ? Math.min(vAxisMin, range.min) : range.min;\n      if (!isNaN(range.max) && range.max) vAxisMax = vAxisMax ? Math.max(vAxisMax, range.max) : range.max;\n    });\n    return { min: vAxisMin, max: vAxisMax };\n  }\n\n  const handleSeriesSelection = useCallback(({\n    newDataColumns,\n    _allInitialColumns = allInitialColumns,\n    _chartWrapper = chartWrapper,\n    _controlWrapper = controlWrapper\n  }) => {\n    if (!_allInitialColumns) return;\n\n    setDataColumns(newDataColumns);\n\n    if (seriesSelector.method === \"toggleVisibility\" || seriesSelector.method === null) {\n      const hiddenSeriesObject = {};\n      newDataColumns.forEach((col) => {\n        if (!col.selected)\n          hiddenSeriesObject[col.seriesIndex] = {\n            color: 'transparent',\n            enableInteractivity: false,\n            visibleInLegend: false\n          }; // 'hide' the serie by making it transparent\n      });\n\n      _chartWrapper?.setOptions({\n        ...options,\n        series: {\n          ...options.series,\n          ...hiddenSeriesObject\n        }\n      });\n\n      if (hasChartControl) {\n        const currentControlOptions = _controlWrapper?.getOptions();\n        _controlWrapper?.setOptions({\n          ...currentControlOptions,\n          ui: {\n            ...currentControlOptions.ui,\n            chartOptions: {\n              ...currentControlOptions.ui.chartOptions,\n              series: {\n                ...options.series,\n                ...hiddenSeriesObject\n              }\n            }\n          }\n        });\n      }\n    }\n    else if (seriesSelector.method === \"setViewColumn\") {\n      let newViewColumns = [];\n      newViewColumns.push(0); // this is the domain column\n      newDataColumns.forEach((dataColumn) => {\n        if (dataColumn.selected) {\n          newViewColumns.push(dataColumn);\n          // Find this dataColumn's supporting columns (whose role !== 'data')\n          // A dataColumn has its supporting columns (can be many) follow it immediately\n          if (isValidArray(_allInitialColumns)) {\n            for (let i = dataColumn.indexIn_ + 1; i < _allInitialColumns.length; i++) {\n              if (_allInitialColumns[i].role !== 'data') {\n                newViewColumns.push(_allInitialColumns[i]);\n              }\n              // If this loop encounter the next dataColumn, break the loop, all supporting columns for this dataColumn have been discovered\n              else {\n                break;\n              }\n            }\n          }\n        }\n      });\n      _chartWrapper?.setView({ columns: newViewColumns });\n\n      const newOptions = { ...options };\n      // Preserve the initial vAxis range so that the vAxis doesn't shift based on the visible serie(s)\n      // newOptions.vAxis.viewWindow = {\n      //   min: (options.vAxis.viewWindow.min == null) ? initialVAxisRange.min : options.vAxis.viewWindow.min,\n      //   max: (options.vAxis.viewWindow.max == null) ? initialVAxisRange.max : options.vAxis.viewWindow.max,\n      // }\n      // Set the new color array\n      newOptions.colors = newDataColumns.filter((col) => col.selected).map((col) => col.color);\n      // Set the new series object (if any)\n      // this contains other series' attributes (lineWidth, seriesType...)\n      const series = {};\n      let selectedSeriesCount = 0;\n      newDataColumns.forEach((col) => {\n        if (!col.selected) return;\n        if (col.serieAttribute != null) {\n          series[selectedSeriesCount] = col.serieAttribute;\n        }\n        selectedSeriesCount++;\n      })\n      newOptions.series = series;\n      _chartWrapper?.setOptions(newOptions);\n\n      if (hasChartControl) {\n        const currentControlOptions = _controlWrapper?.getOptions();\n        _controlWrapper?.setOptions({\n          ...currentControlOptions,\n          ui: {\n            ...currentControlOptions.ui,\n            chartOptions: {\n              ...currentControlOptions.ui.chartOptions,\n              colors: newOptions.colors,\n              series: newOptions.series\n            },\n            chartView: {\n              columns: newViewColumns\n            }\n          }\n        });\n      }\n    }\n\n    // Call draw to apply the new DataView and 'refresh' the chart\n    _chartWrapper?.draw();\n\n    if (hasChartControl) {\n      _controlWrapper?.draw();\n    }\n  }, [allInitialColumns, options, seriesSelector, chartWrapper, controlWrapper, initialVAxisRange, hasChartControl]);\n\n  const reconstructFunctionFromJSONstring = (columns) => {\n    if (!columns) return;\n\n    const evaluatedColumns = [];\n    for (const column of columns) {\n      if (typeof column === 'number') {\n        // If it's a number, add it as-is\n        evaluatedColumns.push(column);\n      } else if (typeof column === 'object') {\n        if (column.calc && column.calc !== 'stringify') {\n          // If it's an object with a 'calc' property, evaluate the 'calc' function\n          // using new Function() and add the result to the evaluatedColumns array\n          const calcFunction = new Function(\"dataTable\", \"rowNum\", column.calc);\n          evaluatedColumns.push({\n            ...column,\n            calc: calcFunction,\n          });\n        } else {\n          // If it's an object without a 'calc' property, or with calc = 'stringify', add it as-is\n          evaluatedColumns.push(column);\n        }\n      }\n    }\n    return evaluatedColumns;\n  }\n\n  // Prepare to draw the chart if there is any change in chartData\n  // but only set flag renderChartNow if the chart should draw in the next rendering cycle\n  // to prevent chartID container not being mounted on time\n  useEffect(() => {\n    if (google && chartData) {\n      // Do not draw again if deep comparison between current chartData and previousChartData is true\n      if (JSON.stringify(chartData) === JSON.stringify(previousChartData)) return;\n      setPreviousChartData(chartData);\n\n      // Get and set the dataArray \n      const dataArray = chartData.dataArray\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].dataArray)\n        || null\n        || null;\n\n      const _shouldRenderChart = isValidArray(dataArray);\n      setShouldRenderChart(_shouldRenderChart);\n      if (_shouldRenderChart === true) {\n        setRenderChartNow(true);\n        const dataTable = google.visualization.arrayToDataTable(dataArray);\n\n        // Call functions for formatting the number if numberFormat is specified \n        if (formatters && typeof formatters === 'object') {\n          if (formatters.hasOwnProperty(\"numberFormatter\")) {\n            const numberFormat = new google.visualization.NumberFormat(formatters.numberFormatter.numberFormat);\n            formatters.numberFormatter.columns.forEach(col => numberFormat.format(dataTable, col));\n          }\n        }\n\n        setDataTable(dataTable);\n      }\n    }\n  }, [google, chartData]);\n\n  // Actually draw the chart now because chartID container is already mounted from shouldRenderChart flag\n  useEffect(() => {\n    if (renderChartNow === true) {\n      // Get dataColumn views\n      const columns = chartData.columns\n        || (chartData.subcharts\n          && chartData.subcharts[subchartIndex].columns)\n        || null\n        || null;\n      const reconstructedColumns = reconstructFunctionFromJSONstring(columns);\n\n      // Create chartWrapper\n      const thisChartWrapper = new google.visualization.ChartWrapper({\n        chartType: chartData.chartType,\n        dataTable: (!hasChartControl) ? dataTable : undefined,\n        options: options,\n        view: {\n          columns: reconstructedColumns\n        },\n        containerId: chartID\n      });\n      setChartWrapper(thisChartWrapper);\n\n      let thisControlWrapper;\n      if (hasChartControl) {\n        const thisDashboardWrapper = new google.visualization.Dashboard(\n          document.getElementById(`dashboard-${chartID}`));\n\n        google.visualization.events.addListener(thisDashboardWrapper, 'ready', onChartReady);\n\n        thisControlWrapper = new google.visualization.ControlWrapper({\n          controlType: chartControl.controlType,\n          options: chartControlOptions,\n          containerId: `control-${chartID}`\n        });\n        setControlWrapper(thisControlWrapper);\n\n        // Establish dependencies\n        thisDashboardWrapper.bind(thisControlWrapper, thisChartWrapper);\n\n        thisDashboardWrapper.draw(dataTable);\n      }\n      else {\n        google.visualization.events.addListener(thisChartWrapper, 'ready', onChartReady);\n        thisChartWrapper.draw();\n      }\n\n      // Run the seriesSelector for the first time\n      if (seriesSelector) {\n        const { initAllInitialColumns, initDataColumns } = getInitialColumns({ chartWrapper: thisChartWrapper, dataTable: dataTable, seriesSelector: seriesSelector });\n        handleSeriesSelection({\n          _allInitialColumns: initAllInitialColumns,\n          newDataColumns: initDataColumns,\n          _chartWrapper: thisChartWrapper,\n          _controlWrapper: thisControlWrapper\n        });\n      }\n\n      setRenderChartNow(false);\n    }\n  }, [renderChartNow])\n\n  const renderChart = () => {\n    const chartContainer = (\n      <Box\n        id={chartID}\n        sx={{ height: height, maxHeight: maxHeight }}\n      />\n    );\n\n    if (hasChartControl) {\n      return (\n        <Stack\n          id={`dashboard-${chartID}`}\n          direction={ChartControlType[chartControl.controlType]?.stackDirection || 'column-reverse'}\n          sx={{ height: '100%' }}\n        >\n          <Box\n            id={`control-${chartID}`}\n            sx={{\n              height: `calc(${height} / 8)`,\n              opacity: 0.8,\n              filter: 'saturate(0.3)'\n            }}\n          />\n          {chartContainer}\n        </Stack>\n      );\n    } else {\n      return chartContainer;\n    }\n  };\n\n  // Generate the gradient background if it exists in options parameter\n  const gradientBackgroundColor = options.gradientBackgroundColor;\n  let gradientBackgroundId, svgFillGradient;\n  if (gradientBackgroundColor) {\n    gradientBackgroundId = `${chartID}-backgroundGradient`;\n    svgFillGradient = generateSvgFillGradient({\n      colors: theme.palette.chart.colorAxes[gradientBackgroundColor].colors,\n      optionalMinValue: options.vAxis?.viewWindow?.min,\n      optionalMaxValue: options.vAxis?.viewWindow?.max\n    });\n  }\n\n  const onChartReady = () => {\n    if (!isFirstRender) return;\n    // Hide the circleProgress when chart finishes rendering the first time\n    setIsFirstRender(false);\n  };\n\n  const showAuxiliaryControls = () => {\n    if (!isFirstRender) {\n      return (\n        <Grid\n          container\n          mt={1}\n          sx={{\n            gap: 2,\n            [theme.breakpoints.down('sm')]: { gap: 1 }\n          }}\n        >\n          {seriesSelector &&\n            <Grid item xs=\"auto\"\n              sx={{\n                [theme.breakpoints.down('sm')]: { width: '100%' }\n              }}\n            >\n              <SeriesSelector\n                items={dataColumns}\n                allowMultiple={seriesSelector.allowMultiple}\n                seriesLabel={seriesSelector.seriesLabel}\n                selectorID={`${chartData.title}-selector`}\n                onSeriesSelection={handleSeriesSelection}\n                displayChip={false}\n              />\n            </Grid>\n          }\n          {\n            dateRangePicker &&\n            <Grid\n              container\n              item\n              xs=\"auto\"\n              justifyContent=\"stretch\"\n              sx={{\n                gap: 2,\n                [theme.breakpoints.down('sm')]: { gap: 1, width: '100%' }\n              }}\n            >\n              <CustomDateRangePicker\n                dataType={selectedDataType}\n                minDateOfDataset={new Date(dateRangePicker.minDate)}\n              />\n            </Grid>\n\n          }\n          {selectableAxes &&\n            <AxesPicker\n              allowedAxes={selectableAxes.allowedAxes}\n              selectedAxes={selectableAxes.selectedAxes}\n              dataType={selectedDataType}\n            />\n          }\n        </Grid >\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    shouldRenderChart ?\n      <GoogleChartStyleWrapper\n        isPortrait={isPortrait}\n        gradientBackgroundId={gradientBackgroundId}\n        className={chartData.chartType}\n        position=\"relative\"\n        height=\"100%\"\n        minHeight={chartData.chartType === 'Calendar' && '200px'}\n      >\n        {/* Conditionally display loading animation here */}\n        {isFirstRender && (\n          <Box sx={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}>\n            <LoadingAnimation />\n          </Box>\n        )}\n        {showAuxiliaryControls()}\n        {renderChart()}\n        {gradientBackgroundColor ? <BackgroundGradient id={gradientBackgroundId} colors={svgFillGradient} /> : null}\n      </GoogleChartStyleWrapper> :\n      (\n        <>\n          {selectableAxes &&\n            <Box mt={1}>\n              <AxesPicker\n                allowedAxes={selectableAxes.allowedAxes}\n                selectedAxes={selectableAxes.selectedAxes}\n                dataType={selectedDataType}\n              />\n            </Box>\n          }\n          <NoChartToRender\n            dataType={returnSelectedDataType({ dataTypeKey: selectedDataType, dataTypes: allowedDataTypes })}\n            selectableAxes={selectableAxes}\n            // If the visualization has a series selector or control, we need to account for its height\n            // And since the height is a string, we need to parse it to a number before adding to it\n            height={seriesSelector || hasChartControl ? (parseFloat(height) * 1.2 + 'vw') : height}\n\n          />\n        </>\n      )\n  );\n}","import { useState, useRef } from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport parse from 'html-react-parser';\nimport { useMediaQuery, useTheme } from '@mui/material';\nimport { replacePlainHTMLWithMuiComponents } from '../Utils/UtilFunctions';\n\nfunction CollapsibleSubtitle({ text, wordLimit = 40, reference }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const subtitleRef = useRef(null);\n\n  const words = text.split(' ');\n\n  // If not on mobile or words are within limit, just display the full text\n  if (!isMobile || words.length / wordLimit <= 1.4) {\n    return (\n      <Box>\n        <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n        {reference && (\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            {parse(reference, { replace: replacePlainHTMLWithMuiComponents })}\n          </Typography>\n        )}\n      </Box>\n    );\n  }\n\n  let displayText = words.slice(0, wordLimit).join(' ');\n  const lastFullStop = displayText.lastIndexOf('.');\n\n  if (lastFullStop !== -1) {\n    displayText = displayText.slice(0, lastFullStop + 1);\n  }\n\n  // Do not collapse if the user clicks on the chart associated with the subtitle\n  const isClickWithinSharedParent = (event) => {\n    let { target } = event;\n    // .MuiContainer-root - Container for both the subtitle and the chart\n    const subtitleParent = subtitleRef.current.closest('.MuiContainer-root');\n    // Elements used to detect if the click is on a chart\n    const chartElements = new Set(['rect', 'path', 'svg', 'circle']);\n\n    while (target != null) {\n      // Check if a chart is clicked\n      if (chartElements.has(target.tagName)) {\n        // If the chart element and the subtitle element share the same container\n        // it means that the click is on the chart associated with the subtitle\n        // As such, we should not collapse the subtitle\n        const targetParent = target.closest('.MuiContainer-root');\n        return targetParent === subtitleParent;\n      }\n      target = target.parentNode; // Move up the DOM tree\n    }\n    return false;\n  };\n\n  // Custom onClickAway handler\n  const handleOnClickAway = (event) => {\n    if (!isClickWithinSharedParent(event)) {\n      setIsExpanded(false);\n    }\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleOnClickAway}>\n      <Box ref={subtitleRef} onClick={() => setIsExpanded(!isExpanded)} style={{ cursor: 'pointer' }}>\n        {isExpanded ? (\n          <>\n            <Typography>{parse(text, { replace: replacePlainHTMLWithMuiComponents })}</Typography>\n            {reference && <Typography variant=\"caption\" color=\"text.secondary\">{parse(reference, { replace: replacePlainHTMLWithMuiComponents })}</Typography>}\n          </>\n        ) : (\n          <>\n            <Typography display=\"inline\">\n              {parse(displayText, { replace: replacePlainHTMLWithMuiComponents })}\n              ...\n            </Typography>\n            <Typography display=\"inline\" color=\"text.primary\" fontWeight=\"500\" sx={{ ml: 0.5, '& :hover': { textDecoration: 'underline' } }}>\n              See more\n            </Typography>\n          </>\n        )}\n      </Box>\n    </ClickAwayListener>\n  );\n}\n\nexport default CollapsibleSubtitle;\n","import { useState } from \"react\";\nimport { Button, Menu, MenuItem, Typography } from \"@mui/material\";\nimport { isValidArray } from \"../Utils/UtilFunctions\";\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport { returnSelectedDataType } from \"../Utils/AirQuality/DataTypes\";\n\nconst DataTypeDropDownMenu = ({ selectedDataType, dataTypes, fetchChartDataType }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  if (!isValidArray(dataTypes)) return null;\n\n  // If there is only 1 dataType, display it as a string of text\n  if (dataTypes.length <= 1) {\n    return (\n      <Typography display=\"inline\" variant=\"h6\" color=\"text.primary\">\n        {dataTypes[0].name_title}\n      </Typography>\n    )\n  }\n\n  // If there are more than 1 dataTypes to choose from, display a popup dropdown menu\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (dataType) => {\n    fetchChartDataType(dataType);\n    handleClose();\n  };\n\n  return (\n    <>\n      <Button\n        id=\"data-type-drop-down-menu-button\"\n        aria-controls={open ? 'data-type-drop-down-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}\n        variant=\"text\"\n        size=\"small\"\n        sx={{\n          p: 0,\n          minWidth: 'unset',\n          borderRadius: 0,\n          verticalAlign: 'top',\n          textTransform: 'unset'\n        }}\n      >\n        <Typography display=\"inline\" variant=\"h6\" borderBottom=\"dotted\">\n          {returnSelectedDataType({ dataTypeKey: selectedDataType, dataTypes: dataTypes, showUnit: true })}\n        </Typography>\n        <ArrowDropDownIcon />\n      </Button>\n      <Menu\n        id=\"data-type-drop-down-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'data-type-drop-down-menu-button',\n        }}\n      >\n\n        {dataTypes.map((dataType, index) => (\n          <MenuItem\n            key={index}\n            sx={{ fontSize: '0.8rem' }}\n            onClick={() => handleMenuItemClick(dataType.key)}\n          >\n            {dataType.name_title}\n          </MenuItem>\n        ))}\n\n      </Menu>\n    </>\n  );\n};\n\nexport default DataTypeDropDownMenu;","import { styled } from '@mui/material/styles';\nimport { Tabs } from '@mui/material/';\n\nexport const StyledTabs = styled(Tabs, {\n  shouldForwardProp: (prop) => prop !== 'smallFontSize',\n})(({ theme, smallFontSize = '0.625rem' }) => ({\n  '& .MuiTabScrollButton-root': {\n    color: theme.palette.text.primary\n  },\n  '& .MuiTab-root': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: smallFontSize,\n      padding: theme.spacing(0.5)\n    },\n  },\n  '& .MuiSvgIcon-root ': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: \"1rem\"\n    }\n  }\n}));\n\nexport default StyledTabs;","import { useState, useEffect, useContext } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, Tab, useMediaQuery, Typography, Menu, MenuItem, Stack, Skeleton } from '@mui/material/';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport { DataTypes } from '../Utils/AirQuality/DataTypes';\nimport { fetchDataFromURL } from '../API/ApiFetch';\nimport { getChartApiUrl, getCorrelationChartApiUrl, getHistoricalChartApiUrl } from \"../API/ApiUrls\";\nimport { ChartAPIendpoints, ChartAPIendpointsOrder } from \"../API/Utils\";\nimport { DashboardContext } from \"../ContextProviders/DashboardContext\";\n\nimport SubChart from './Subchart/SubChart';\n\nimport CollapsibleSubtitle from '../Components/CollapsibleSubtitle';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport DataTypeDropDownMenu from './DataTypeDropDown';\nimport { isValidArray } from '../Utils/UtilFunctions';\nimport { useDateRangePicker } from '../ContextProviders/DateRangePickerContext';\nimport { returnFormattedDates } from '../Components/DateRangePicker/DateRangePickerUtils';\nimport { useAxesPicker } from '../ContextProviders/AxesPickerContext';\nimport StyledTabs from '../Components/StyledTabs';\n\nconst DEBOUNCE_IN_MILLISECONDS = 100;\n\nconst MAX_NUM_TABS_TO_DISPLAY = 3;\nconst INITIAL_DROPDOWN_MENU_TAB_INDEX = -1;\n\nconst ChartStyleWrapper = styled(Box)(({ theme }) => ({\n  // CSS for dark theme only\n  ...(theme.palette.mode === 'dark' && {\n    // De-saturate a bit\n    filter: 'saturate(0.85)',\n    // Invert iframe\n    '& .heat-map-iframe': {\n      filter: 'invert(0.848) hue-rotate(180deg)',\n    }\n  }),\n  // Center Calendar chart in wrapper\n  '& .Calendar [dir]:not(:empty)': {\n    margin: 'auto'\n  },\n\n  // add horizontal scrollbar to Calendar charts\n  '& .Calendar > div > div:last-of-type > div': {\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    scrollbarGutter: 'stable'\n  }\n}));\n\nconst StyledMenuItem = styled(MenuItem)(({ theme }) => ({\n  '& .MuiBox-root ': {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.75rem'\n    },\n  }\n}));\n\n// eslint-disable-next-line max-len\nfunction ChartComponentWrapper(props) {\n  const {\n    chartTitle,\n    generalChartSubtitle,\n    generalChartReference,\n    chartData: passedChartData,\n    chartHeight: passedChartHeight,\n    chartID,\n    chartIndex\n  } = props;\n\n  const { currentSchoolID, setIndividualChartData } = useContext(DashboardContext);\n\n  const isSmallWidth = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [isPortrait, setIsPortrait] = useState(window.matchMedia('(orientation: portrait)').matches);\n  const [windowSize, setWindowSize] = useState([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  let chartMaxHeight;\n  let chartHeight = passedChartHeight;\n  const chartData = passedChartData;\n\n  // Props for tab panels (multiple data visualizations in the same chart area, navigate with tab panels)\n  const [currentTab, setCurrentTab] = useState(0); // start with the first tab\n  const [previousTab, setPreviousTab] = useState(0); // keep tracking of previous tab to keep displaying it if the currentTab = initialDropdownMenuTabIndex (selecting the dropdown menu tab)\n  const [dropdownMenuTabIndex, setDropdownMenuTabIndex] = useState(INITIAL_DROPDOWN_MENU_TAB_INDEX);\n  const [dropdownMenuCurrentTitle, setDropdownMenuCurrentTitle] = useState();\n  const [anchorEl, setAnchorEl] = useState(null); // Define anchorEl state for dropdown menu of the tabs\n\n  // Props for dataType management\n  const [allowedDataTypes, setAllowedDataTypes] = useState([]);\n  const [selectedDataType, setSelectedDataType] = useState(null);\n\n  // Retrieve the dateRange for chart with DateRangePicker\n  const { dateRange, aggregationType } = useDateRangePicker();\n\n  // Retrieve the hAxis and vAxis for chart with AxesPicker\n  const { hAxis, vAxis } = useAxesPicker();\n\n  useEffect(() => {\n    // Using keys returned from backend,\n    // generate the allowedDataTypes object from DataTypes\n    if (chartData.allowedDataTypes) {\n      const dataTypesArr = [];\n      for (let dataType of chartData.allowedDataTypes) {\n        const { name_title, name_short, unit } = DataTypes[dataType];\n        dataTypesArr.push({\n          key: dataType,\n          name_title,\n          name_short,\n          unit\n        })\n      }\n      setAllowedDataTypes(dataTypesArr);\n    }\n    setSelectedDataType(chartData.selectedDataType)\n  }, [chartData]);\n\n  const fetchChartDataType = async (dataType) => {\n    const endpoint = ChartAPIendpointsOrder[chartID];\n    let url;\n    if (endpoint === ChartAPIendpoints.historical) {\n      const { startDate, endDate } = dateRange || {};\n      if (!startDate || !endDate) return;\n\n      const formattedDates = returnFormattedDates({\n        startDateObject: startDate,\n        endDateObject: endDate\n      });\n      url = getHistoricalChartApiUrl({\n        endpoint: endpoint,\n        school_id: currentSchoolID,\n        startDate: formattedDates.startDate,\n        endDate: formattedDates.endDate,\n        aggregationType: aggregationType,\n        dataType: dataType\n      })\n    }\n    else if (endpoint === ChartAPIendpoints.correlationDailyAverage) {\n      url = getCorrelationChartApiUrl({\n        endpoint: ChartAPIendpoints.correlationDailyAverage,\n        school_id: currentSchoolID,\n        dataType: dataType,\n        sensorX: hAxis,\n        sensorY: vAxis\n      });\n    }\n    else {\n      url = getChartApiUrl({\n        endpoint: endpoint,\n        school_id: currentSchoolID,\n        dataType: dataType\n      });\n    }\n    if (!url) return;\n\n    fetchDataFromURL({\n      url: url\n    })\n      .then(data => {\n        setIndividualChartData(chartID, data);\n        setSelectedDataType(data.selectedDataType);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  // eventListener for window resize\n  // redraw \"Calendar\" charts and charts with a time filter upon window resize.\n  // Filter & Calendar charts are not automatically respnsive, so we have to redraw them.\n  // redraw other charts when device orientation changes\n  useEffect(() => {\n    let timeoutID = null;\n\n    const handleWindowResize = () => {\n      clearTimeout(timeoutID);\n\n      // debounce before triggering re-render. as user is resizing window, the state could\n      // change multiple times causing many expensive rerenders. we try to rerender at the\n      // end of the resize.\n      timeoutID = setTimeout(() => {\n        // Redraw all charts on device orientation change, as the chartWrapperHeights\n        // have changed.\n        setIsPortrait(window.matchMedia('(orientation: portrait)').matches);\n\n        // Redraw all charts on window resized\n        setWindowSize([window.innerWidth, window.innerHeight]);\n      }, DEBOUNCE_IN_MILLISECONDS);\n    };\n\n    // listen to window resize events\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [chartData]);\n\n  // set tab back to 0 if school is changed\n  useEffect(() => {\n    setPreviousTab(currentTab);\n    setCurrentTab(0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentSchoolID])\n\n  if (chartData.chartType !== 'Calendar' && !chartHeight) {\n    chartHeight = isPortrait ? '80vw' : '35vw';\n    chartMaxHeight = isPortrait ? '800px' : '500px';\n  }\n\n  // Function to render only one chart (no subchart --> no tab control)\n  const renderOnlyOneChart = () => {\n    return (\n      <SubChart\n        selectedDataType={selectedDataType}\n        allowedDataTypes={allowedDataTypes}\n        chartData={chartData}\n        isPortrait={isPortrait}\n        windowSize={windowSize}\n        height={chartData.height ? chartData.height : chartHeight}\n      />\n    );\n  }\n\n  // Function to render multiple subcharts with tab control\n  const renderMultipleSubcharts = () => {\n    // Handle tab change\n    const handleTabChange = (__, newIndex) => {\n      setPreviousTab(currentTab);\n      setCurrentTab(newIndex);\n\n      if (needsDropdownMenu && newIndex < MAX_NUM_TABS_TO_DISPLAY && newIndex !== dropdownMenuTabIndex) {\n        setDropdownMenuCurrentTitle();\n        setDropdownMenuTabIndex(INITIAL_DROPDOWN_MENU_TAB_INDEX);\n      }\n    };\n\n    // Determine if dropdown menu is needed\n    const needsDropdownMenu = chartData.subcharts.length > MAX_NUM_TABS_TO_DISPLAY + 1; // maxTabsToDisplay = 3 by default, but here +1 for some leeway, some schools have 4 sensors which is still okay. But if > 4, then only display max 3\n\n    const subchartsDataForTabs = needsDropdownMenu ? chartData.subcharts.slice(0, MAX_NUM_TABS_TO_DISPLAY) : chartData.subcharts;\n    const subchartsDataForDropDownMenu = needsDropdownMenu ? chartData.subcharts.slice(MAX_NUM_TABS_TO_DISPLAY) : null;\n\n    // Function to handle selection from dropdown menu\n    const handleDropdownMenuSelection = (index) => {\n      setPreviousTab(currentTab);\n\n      // Because the original chartData.subcharts array was split in subchartsDataForTabs (length maxTabsToDisplay) and subchartsDataForDropDownMenu (the remaining item), the selected subcharts index is the sum of the length of subchartsDataForTabs array and the index of the selected item from subchartsDataForDropDownMenu\n      setCurrentTab(MAX_NUM_TABS_TO_DISPLAY + index);\n\n      // Same index with the one above to keep the dropdown menu tab highlighted  \n      setDropdownMenuTabIndex(MAX_NUM_TABS_TO_DISPLAY + index);\n\n      // Set title of the selected item in the dropdown menu to display it\n      setDropdownMenuCurrentTitle(subchartsDataForDropDownMenu[index].subchartTitleShort);\n\n      // Close the dropdown menu after selection\n      setAnchorEl(null);\n    };\n\n    const getOtherLocationsLabel = () => {\n      return (\n        <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Box flex={1}>\n            Other sensors\n            {\n              dropdownMenuCurrentTitle && ` (${dropdownMenuCurrentTitle})`\n            }\n            &nbsp;\n          </Box>\n          < ExpandMoreIcon />\n        </Stack>\n      )\n    }\n\n    const shouldDisplayThisSubchart = (index) => {\n      if (currentTab === INITIAL_DROPDOWN_MENU_TAB_INDEX) {\n        return previousTab === index;\n      } else {\n        return currentTab === index;\n      }\n    }\n\n    return (\n      <>\n        <StyledTabs\n          value={currentTab}\n          onChange={handleTabChange}\n          variant={isSmallWidth ? 'fullWidth' : 'standard'}\n        >\n          {subchartsDataForTabs.map((_, index) => (\n            <Tab\n              key={index}\n              value={index}\n              label={chartData.subcharts[index].subchartTitle}\n              sx={{\n                // If this subchart doesn't have a valid dataArray to render chart\n                // Make the Tab's text line-through to let user know\n                textDecoration: !isValidArray(chartData.subcharts[index].dataArray) && 'line-through'\n              }}\n            />\n          ))}\n          {/* Render dropdown menu if needed */}\n          {needsDropdownMenu && (\n            <Tab\n              value={dropdownMenuTabIndex}\n              label={getOtherLocationsLabel()}\n              aria-controls=\"submenu\"\n              aria-haspopup=\"true\"\n              onClick={(event) => setAnchorEl(event.currentTarget)}\n            />\n          )}\n        </StyledTabs>\n        {\n          needsDropdownMenu && <Menu\n            id=\"submenu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={() => {\n              // Reset currentTab to the previous valid tab if the user opened the menu (clicked on the drop down menu tab, if shown), but didn't select any menu item\n              if (currentTab === INITIAL_DROPDOWN_MENU_TAB_INDEX) {\n                setPreviousTab(currentTab);\n                setCurrentTab(previousTab);\n              };\n\n              // Close the menu\n              setAnchorEl(null);\n            }}\n          >\n            {/* Render remaining subchart selector in the dropdown menu */}\n            {subchartsDataForDropDownMenu.map((_, index) => (\n              <StyledMenuItem\n                key={index}\n                selected={index === currentTab - MAX_NUM_TABS_TO_DISPLAY}\n                onClick={() => handleDropdownMenuSelection(index)}\n                sx={{\n                  // If this subchart doesn't have a valid dataArray to render chart\n                  // Make the Tab's text line-through to let user know\n                  textDecoration: !isValidArray(chartData.subcharts[index + MAX_NUM_TABS_TO_DISPLAY].dataArray) && 'line-through'\n                }}\n              >\n                <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n                  <Box>\n                    {subchartsDataForDropDownMenu[index].subchartTitle}\n                  </Box>\n                  {\n                    (index === currentTab - MAX_NUM_TABS_TO_DISPLAY) &&\n                    <VisibilityIcon fontSize=\"1rem\" sx={{ color: 'text.secondary' }} />\n                  }\n                </Stack>\n              </StyledMenuItem>\n            ))}\n          </Menu>\n        }\n\n        <Box\n          position=\"relative\"\n          sx={{\n            overflowX: isPortrait && 'auto',\n            WebkitOverflowScrolling: isPortrait && 'touch',\n            overflowY: 'hidden',\n          }}\n        >\n\n          {chartData.subcharts.map((__, index) => (\n            <Box\n              key={index}\n              width=\"100%\"\n              height=\"100%\"\n              role=\"tabpanel\"\n              sx={{\n                transition: '0.35s',\n                position: (index === 0) ? '' : 'absolute',\n                opacity: shouldDisplayThisSubchart(index) ? '1' : '0',\n                pointerEvents: shouldDisplayThisSubchart(index) ? 'auto' : 'none',\n                top: (index === 0) ? '' : 0,\n                overflowX: 'auto',\n                overflowY: 'hidden',\n              }}\n            >\n              <SubChart\n                selectedDataType={selectedDataType}\n                allowedDataTypes={allowedDataTypes}\n                chartData={chartData}\n                subchartIndex={index}\n                isPortrait={isPortrait}\n                windowSize={windowSize}\n                height={chartData.height ? chartData.height : chartHeight}\n                maxHeight={\n                  ['Calendar'].includes(chartData.chartType)\n                    ? ''\n                    : chartMaxHeight\n                }\n                currentSubchart={currentTab}\n              />\n            </Box>\n          ))}\n        </Box>\n      </>\n    )\n  };\n\n  // Function to render remaining subtitles and references for chart with multiple subcharts\n  const getSubtitles = () => {\n    let text = generalChartSubtitle || '';\n    if (chartData.subcharts && chartData.subcharts[currentTab]?.subchartSubtitle) {\n      text += '<br/>';\n      text += chartData.subcharts[currentTab].subchartSubtitle;\n    }\n    return text;\n  }\n  const getReferences = () => {\n    let text = generalChartReference || '';\n    if (chartData.subcharts && chartData.subcharts[currentTab]?.reference) {\n      text += '<br/>';\n      text += chartData.subcharts[currentTab].reference;\n    }\n    return text;\n  }\n\n  return (\n    chartTitle ?\n      <>\n        <Box>\n          <Typography display=\"inline\" variant=\"h6\" color=\"text.primary\">\n            {chartIndex + 1}. {chartTitle}\n            &nbsp;\n          </Typography>\n          <Box display=\"inline\">\n            <DataTypeDropDownMenu\n              selectedDataType={selectedDataType}\n              dataTypes={allowedDataTypes}\n              fetchChartDataType={fetchChartDataType}\n            />\n          </Box>\n        </Box>\n\n        <ChartStyleWrapper height=\"100%\">\n          {chartData.subcharts ? renderMultipleSubcharts() : renderOnlyOneChart()}\n\n          {/* Render subtitle and reference below */}\n          <Box sx={{ my: 3 }}>\n            <Typography\n              component=\"div\"\n              variant=\"body1\"\n              color=\"text.secondary\"\n              sx={{ mb: 1 }}\n            >\n              <CollapsibleSubtitle\n                text={getSubtitles()}\n                reference={getReferences()}\n              />\n            </Typography>\n          </Box>\n        </ChartStyleWrapper>\n      </>\n\n      : <>\n        <Skeleton variant='text' sx={{ width: '100%', fontSize: '2rem' }} />\n        <Skeleton variant='rounded' width=\"100%\" height={300} />\n      </>\n  );\n}\n\nexport default ChartComponentWrapper;\n","import { useState } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport { Fab, Fade, Popper, Paper, Typography, Stack } from '@mui/material';\nimport AirIcon from '@mui/icons-material/Air';\nimport { FadeInButtonForSpeedDial } from '../SpeedDial/FadeInButtonForSpeedDial';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport AirQualityIndexTable from './AirQualityIndexTable';\n\nexport default function AirQualityIndexLegendQuickGlance(props) {\n  // Mechanism for opening and closing the Quick Glance on hover\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handlePopperOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n    Tracking.sendEventAnalytics(Tracking.Events.airQualityIndexLegendQuickGlance);\n  };\n  const handlePopperClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <FadeInButtonForSpeedDial {...props} distanceFromBottomOfWindow=\"5.5rem\">\n        <Fab\n          sx={{ mt: 1 }}\n          aria-owns={open ? Tracking.Events.airQualityIndexLegendQuickGlance : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopperOpen}\n          onMouseLeave={handlePopperClose}\n          onClick={(event) => isMobile && (open ? handlePopperClose() : handlePopperOpen(event))}\n          aria-label={Tracking.Events.airQualityIndexLegendQuickGlance}\n          color=\"primary\"\n        >\n          <Stack direction=\"column\" alignItems=\"center\">\n            <AirIcon fontSize=\"1rem\" />\n            <Typography variant=\"body2\" fontWeight=\"500\">\n              AQI\n            </Typography>\n          </Stack>\n        </Fab>\n      </FadeInButtonForSpeedDial>\n\n      <Popper\n        id={Tracking.Events.airQualityIndexLegendQuickGlance}\n        sx={{\n          pointerEvents: 'none',\n          mt: -1\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        placement=\"top-end\"\n        onClose={handlePopperClose}\n        keepMounted\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper elevation={8} sx={{ py: 0.5, mb: 1 }}>\n              <Typography sx={{ mx: 2, mt: 1 }} color=\"text.disabled\" variant=\"body1\" fontWeight={500}>\n                AQI at quick glance\n              </Typography>\n              <AirQualityIndexTable tiny hideAQIDescription />\n            </Paper>\n          </Fade>\n        )}\n\n      </Popper>\n    </>\n  );\n}\n","import { useContext, useCallback } from \"react\";\nimport { UserContext } from \"../../ContextProviders/UserContext\";\nimport { DashboardContext } from \"../../ContextProviders/DashboardContext\";\nimport { useSnackbar } from \"notistack\";\nimport { SnackbarMetadata } from \"../../Utils/SnackbarMetadata\";\n\nconst useLoginHandler = (openLoginPopup) => {\n    const { authenticationState, user } = useContext(UserContext);\n    const loggedIn = authenticationState.authenticated && authenticationState.checkedAuthentication;\n    const { currentSchoolID } = useContext(DashboardContext);\n    const { enqueueSnackbar } = useSnackbar()\n\n    const handleRestrictedAccess = useCallback(\n        (action) => {\n            if (!loggedIn) {\n                openLoginPopup?.();\n                return false;\n            } else {\n                if (user?.allowedSchools.some(school => school.school_id === currentSchoolID)) {\n                    action?.();\n                    return true;\n                } else {\n                    enqueueSnackbar(`Your account does not have access to ${currentSchoolID.toUpperCase()} Alerts`, SnackbarMetadata.error);\n                    return false;\n                }\n            }\n        },\n        [loggedIn, openLoginPopup, currentSchoolID, user, enqueueSnackbar]\n    );\n\n    return {\n        loggedIn,\n        handleRestrictedAccess,\n    };\n};\n\nexport default useLoginHandler;\n","import { useState, useContext } from \"react\";\nimport { Button, Menu, MenuItem } from \"@mui/material\";\nimport TvIcon from \"@mui/icons-material/Tv\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DashboardContext } from \"../../../ContextProviders/DashboardContext\";\nimport { isValidArray } from \"../../../Utils/UtilFunctions\";\nimport useLoginHandler from \"../../Account/useLoginHandler\";\n\nconst ScreenDropDownMenu = ({ onButtonClick }) => {\n  const { currentSchoolID, schoolMetadata } = useContext(DashboardContext);\n  const { handleRestrictedAccess } = useLoginHandler(onButtonClick);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const navigate = useNavigate();\n\n  if (!schoolMetadata) return null;\n\n  const screens = schoolMetadata.screens;\n\n  if (!isValidArray(screens)) return null;\n\n  const handleSingleScreenClick = () => {\n    handleRestrictedAccess(() => navigate(`/screen/${currentSchoolID}`));\n  };\n\n  // If there is only 1 screen, show a single button\n  if (screens.length <= 1) {\n    return (\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        onClick={handleSingleScreenClick}\n      >\n        <TvIcon sx={{ fontSize: \"1rem\" }} />&nbsp;TV Screen\n      </Button>\n    );\n  }\n\n  // If there are multiple screens, show a dropdown menu\n  const open = Boolean(anchorEl);\n\n  const handleMenuItemClick = (screenName) => {\n    handleRestrictedAccess(() => {\n      setAnchorEl(null);\n      navigate(`/screen/${currentSchoolID}/${screenName}`);\n    });\n  };\n\n  const handleMenuOpen = (event) => {\n    handleRestrictedAccess(() => setAnchorEl(event.currentTarget));\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Button\n        id=\"basic-button\"\n        aria-controls={open ? \"tv-screen-list-menu\" : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleMenuOpen}\n        variant=\"contained\"\n        size=\"small\"\n      >\n        <TvIcon sx={{ fontSize: \"1rem\" }} />\n        &nbsp;\n        TV Screens\n      </Button>\n      <Menu\n        id=\"tv-screen-list-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleMenuClose}\n        MenuListProps={{\n          \"aria-labelledby\": \"basic-button\",\n        }}\n      >\n        {screens.map((screen, index) => (\n          <MenuItem\n            key={index}\n            onClick={() => handleMenuItemClick(screen.screen_name)}\n            sx={{ fontSize: \"0.8rem\" }}\n          >\n            {screen.location_long}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default ScreenDropDownMenu;\n","import { useState, useContext } from 'react';\nimport { Chip, Tooltip, IconButton, Dialog, Button, DialogActions, DialogTitle, DialogContent, useMediaQuery } from '@mui/material';\nimport * as Tracking from '../../Utils/Tracking';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\nimport { useTheme } from '@mui/material';\n\nconst CustomDialog = (props) => {\n  const {\n    buttonIcon,\n    buttonIconAria,\n    buttonLabel,\n    buttonVariant = 'contained',\n    trackingEvent,\n    dialogTitle,\n    dialogOpenHandler = null,\n    dialogCloseHandler = null,\n    displaySchoolID = true,\n    maxWidth = \"lg\",\n    children,\n    disabled\n  } = props;\n\n  let iconOnly;\n  if (buttonIcon && !buttonLabel) iconOnly = true;\n  else iconOnly = false;\n\n  const { currentSchoolID } = useContext(DashboardContext);\n\n  const smallScreen = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [open, setOpen] = useState(false);\n\n  const onOpen = () => {\n    if (dialogOpenHandler) {\n      dialogOpenHandler(() => {\n        setOpen(true); // Only opens if dialogOpenHandler allows it\n        if (trackingEvent) Tracking.sendEventAnalytics(trackingEvent);\n      });\n    } else {\n      setOpen(true);\n      if (trackingEvent) Tracking.sendEventAnalytics(trackingEvent);\n    }\n  };\n\n  const onClose = () => {\n    setOpen(false);\n    if (dialogCloseHandler) dialogCloseHandler();\n  };\n\n  const theme = useTheme();\n\n  const displayButton = () => {\n    if (iconOnly) return (\n      <Tooltip title={buttonIconAria}>\n        <IconButton\n          onClick={onOpen}\n          aria-label={buttonIconAria}\n          size=\"small\"\n          sx={{ \"&:hover,:focus\": { color: theme.palette.primary.main } }}\n          disabled={disabled}\n        >\n          {buttonIcon}\n        </IconButton>\n      </Tooltip>\n    );\n\n    else return (\n      <Button\n        onClick={onOpen}\n        variant={buttonVariant}\n        disabled={disabled}\n        size=\"small\"\n      >\n        {buttonIcon}&nbsp;{buttonLabel}\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      {displayButton()}\n\n      <Dialog\n        open={open}\n        onClose={onClose}\n        maxWidth={maxWidth}\n        fullWidth\n        fullScreen={smallScreen}\n        keepMounted\n      >\n        <DialogActions sx={{ justifyContent: \"start\" }}>\n          <Button onClick={onClose}>\n            <ChevronLeftIcon sx={{ fontSize: '1rem' }} />Back\n          </Button>\n        </DialogActions>\n\n        <DialogTitle>\n          {displaySchoolID === true ?\n            (<>\n              <Chip\n                label={currentSchoolID ? `School: ${currentSchoolID.toUpperCase()}` : \"No School\"}\n                size=\"small\"\n                display=\"block\"\n                sx={{ mb: 1 }}\n              />\n              <br />\n            </>\n            ) : null}\n\n          {dialogTitle}\n        </DialogTitle>\n\n        <DialogContent>\n          {children}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nexport default CustomDialog;\n","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport { Box, Link, Typography, Stack, Select, FormControl, MenuItem, Grid, Button, useMediaQuery, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\nimport DownloadIcon from '@mui/icons-material/Download';\nimport DataObjectIcon from '@mui/icons-material/DataObject';\n\nimport * as Tracking from '../../Utils/Tracking';\nimport { fetchDataFromURL } from '../../API/ApiFetch';\nimport { SupportedFetchExtensions } from \"../../API/Utils\";\nimport { getRawDatasetUrl } from '../../API/ApiUrls';\nimport LoadingAnimation from '../LoadingAnimation';\n\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\n\nimport CustomDialog from '../CustomDialog/CustomDialog';\nimport { CITIESair } from '../../Utils/GlobalVariables';\nimport useLoginHandler from '../Account/useLoginHandler';\nimport AggregationType from '../DateRangePicker/AggregationType';\n\nexport default function DatasetDownloadDialog({ onButtonClick }) {\n  const { handleRestrictedAccess } = useLoginHandler(onButtonClick);\n\n  const { currentSchoolID, currentSensorMeasurements } = useContext(DashboardContext);\n\n  const [sensorsDatasets, updateSensorsDatasets] = useState({});\n\n  const [previewingDataset, setPreviewingDataset] = useState(\"placeholder\");\n\n  // Construct the structure of sensorsDatasets based on current data\n  useEffect(() => {\n    if (!currentSensorMeasurements) return;\n\n    const sensorsDatasets = currentSensorMeasurements\n      .filter(item => item && item.sensor)  // Filter out null or undefined items and sensors\n      .reduce((acc, item) => {\n        // Use location_short as the key for each sensor\n        const key = item.sensor.location_short;\n        acc[key] = {\n          location_type: item.sensor.location_type,\n          location_short: item.sensor.location_short,\n          location_long: item.sensor.location_long,\n          last_seen: item.sensor.last_seen.split('T')[0],\n          rawDatasets: Object.keys(AggregationType).reverse().reduce((datasetAcc, datasetKey) => {\n            datasetAcc[AggregationType[datasetKey]] = {\n              sample: null,\n              full: null\n            };\n            return datasetAcc;\n          }, {})\n        };\n        return acc;\n      }, {});\n\n    updateSensorsDatasets(sensorsDatasets);\n  }, [currentSensorMeasurements]);\n\n  return (\n    <CustomDialog\n      buttonIcon={<DataObjectIcon sx={{ fontSize: '1rem' }} />}\n      buttonLabel=\"Dataset\"\n      trackingEvent={Tracking.Events.rawDatasetButtonClicked}\n      dialogTitle=\"Preview and download raw dataset(s)\"\n      dialogOpenHandler={((action) => {\n        setPreviewingDataset(null);\n        handleRestrictedAccess(action);\n      })}\n    >\n      <DatasetSelectorAndPreviewer\n        sensorsDatasets={sensorsDatasets}\n        updateSensorsDatasets={updateSensorsDatasets}\n        previewingDataset={previewingDataset}\n        setPreviewingDataset={setPreviewingDataset}\n        schoolID={currentSchoolID}\n      />\n      {\n        sensorsDatasets &&\n        <Typography variant=\"caption\" sx={{ my: 2, fontStyle: 'italic', display: \"block\" }} >\n          These datasets are provided by {CITIESair} from sensors operated by {CITIESair}. Should you intend to utilize them for your project, research, or publication, we kindly request that you notify us at <Link href='mailto:nyuad.cities@nyu.edu'>nyuad.cities@nyu.edu</Link> to discuss citation requirements.\n        </Typography>\n      }\n    </CustomDialog>\n  );\n}\n\nconst DatasetSelectorAndPreviewer = (props) => {\n  const { sensorsDatasets, updateSensorsDatasets, previewingDataset, setPreviewingDataset, schoolID } = props;\n\n  const theme = useTheme();\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  // Preview the hourly type of the first sensor initially\n  useEffect(() => {\n    if (Object.keys(sensorsDatasets).length > 0 && !previewingDataset) {\n      const firstSensor = Object.keys(sensorsDatasets)[0];\n      const initialDatasetType = AggregationType.hour;\n\n      setPreviewingDataset({\n        sensor: firstSensor,\n        datasetType: initialDatasetType\n      });\n\n      // If this dataset has been fetched before, early return\n      if (sensorsDatasets[firstSensor].rawDatasets[initialDatasetType].sample) return;\n\n      const url = getRawDatasetUrl({\n        school_id: schoolID,\n        sensor_location_short: firstSensor,\n        aggregationType: initialDatasetType,\n        isSample: true\n      });\n\n      fetchDataFromURL({ url, extension: SupportedFetchExtensions.csv, needsAuthorization: true })\n        .then((data) => {\n          const tmp = { ...sensorsDatasets };\n          tmp[firstSensor].rawDatasets[initialDatasetType].sample = data;\n          updateSensorsDatasets(tmp);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [sensorsDatasets, previewingDataset]);\n\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      alignItems=\"start\"\n      spacing={smallScreen ? 1 : 2}\n      sx={{ mt: 0, overflowY: 'scroll', overflowX: 'hidden' }}\n    >\n      <Grid item sm={12} md={6}>\n        <DatasetsTable\n          schoolID={schoolID}\n          sensorsDatasets={sensorsDatasets}\n          updateSensorsDatasets={updateSensorsDatasets}\n          smallScreen={smallScreen}\n          previewingDataset={previewingDataset}\n          setPreviewingDataset={setPreviewingDataset}\n        />\n      </Grid>\n      <Grid item sm={12} md={6} maxWidth={smallScreen ? '100%' : 'unset'} sx={{ mt: 1 }}>\n        <PreviewDataset\n          sensorsDatasets={sensorsDatasets}\n          updateSensorsDatasets={updateSensorsDatasets}\n          previewingDataset={previewingDataset}\n          schoolID={schoolID}\n          smallScreen={smallScreen}\n        />\n      </Grid>\n    </Grid>\n  )\n};\n\nconst DatasetsTable = (props) => {\n  const { schoolID, sensorsDatasets, smallScreen, previewingDataset, setPreviewingDataset, updateSensorsDatasets } = props;\n  return (\n    <Table\n      size=\"small\"\n      sx={{\n        tableLayout: 'fixed'\n      }}\n    >\n      <TableHead>\n        <TableRow>\n          <TableCell sx={{ pl: 1 }}>\n            Sensor Location\n          </TableCell>\n          <TableCell sx={{ width: smallScreen ? '9.5rem' : '11rem' }}>\n            Average Period\n          </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {sensorsDatasets && Object.keys(sensorsDatasets).map((location_short) => (\n          <Dataset\n            key={location_short}\n            schoolID={schoolID}\n            smallScreen={smallScreen}\n            sensor={location_short}\n            sensorsDatasets={sensorsDatasets}\n            previewingDataset={previewingDataset}\n            setPreviewingDataset={setPreviewingDataset}\n            isPreviewing={location_short === previewingDataset?.sensor}\n            updateSensorsDatasets={updateSensorsDatasets}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nconst Dataset = (props) => {\n  const { schoolID, sensorsDatasets, sensor, previewingDataset, setPreviewingDataset, isPreviewing, updateSensorsDatasets } = props;\n\n  const [selectedDatasetType, setSelectedDatasetType] = useState(AggregationType.hour);\n\n  useEffect(() => {\n    if (selectedDatasetType !== AggregationType.hour) setSelectedDatasetType(AggregationType.hour);\n  }, [schoolID])\n\n  const handleDatasetTypeChange = (event) => {\n    const selectedVal = event.target.value;\n    setSelectedDatasetType(selectedVal);\n    setPreviewingDataset({ datasetType: selectedVal, sensor });\n    fetchThisDataset(selectedVal);\n  };\n\n  const fetchThisDataset = (datasetType) => {\n    // If this dataset version hasn't been fetched yet,\n    // fetch it and append it into the object fetchedDatasets\n    if (!sensorsDatasets[sensor].rawDatasets[datasetType].sample) {\n      const url = getRawDatasetUrl({\n        school_id: schoolID,\n        sensor_location_short: sensorsDatasets[sensor].location_short,\n        aggregationType: datasetType,\n        isSample: true\n      });\n\n      fetchDataFromURL({ url, extension: SupportedFetchExtensions.csv, needsAuthorization: true })\n        .then((data) => {\n          const tmp = { ...sensorsDatasets };\n          tmp[sensor].rawDatasets[datasetType].sample = data;\n          updateSensorsDatasets(tmp);\n        });\n    }\n  }\n\n  const setThisSensorToPreview = () => {\n    if (previewingDataset?.sensor !== sensor) {\n      setPreviewingDataset({\n        datasetType: selectedDatasetType,\n        sensor: sensor\n      });\n      fetchThisDataset(selectedDatasetType);\n    }\n  }\n\n  const theme = useTheme();\n\n  return (\n    <>\n      <TableRow key={sensor}>\n        <TableCell\n          sx={{\n            pl: 1,\n            cursor: 'pointer',\n            background: isPreviewing && theme.palette.background.NYUpurpleLight\n          }}\n          onClick={setThisSensorToPreview}>\n          {sensorsDatasets[sensor].location_long}\n        </TableCell>\n\n        <TableCell\n          sx={{\n            position: 'relative',\n            background: isPreviewing && theme.palette.background.NYUpurpleLight\n          }}>\n          <FormControl size=\"small\">\n            <Select\n              value={selectedDatasetType}\n              onChange={handleDatasetTypeChange}\n              variant=\"standard\"\n              MenuProps={{ disablePortal: true }}\n            >\n              {Object.keys(sensorsDatasets[sensor].rawDatasets).reverse().map((datasetType, index) => (\n                <MenuItem\n                  key={index}\n                  value={datasetType}\n                >\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    {datasetType.charAt(0).toUpperCase() + datasetType.slice(1).toLowerCase()}\n                  </Stack>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </TableCell>\n      </TableRow >\n    </>\n  )\n}\n\nconst PreviewDataset = (props) => {\n  const { sensorsDatasets, updateSensorsDatasets, previewingDataset, schoolID, smallScreen } = props;\n  const theme = useTheme();\n\n  const [previewingDatasetName, setPreviewingDatasetName] = useState(\"Not previewing any dataset\");\n  const [csvFileName, setCsvFileName] = useState(\"No dataset\");\n  const [isDatasetLoading, setIsDatasetLoading] = useState(false);\n\n  const downloadPreviewingDataset = () => {\n    if (!previewingDataset) return;\n\n    const fetchedDataset = sensorsDatasets[previewingDataset.sensor].rawDatasets[previewingDataset.datasetType].full;\n\n    // Fetch the full dataset if it has not been fetched before\n    if (!fetchedDataset) {\n      const url = getRawDatasetUrl({\n        school_id: schoolID,\n        sensor_location_short: previewingDataset.sensor,\n        aggregationType: previewingDataset.datasetType,\n        isSample: false\n      });\n\n      fetchDataFromURL({ url, extension: SupportedFetchExtensions.csv, needsAuthorization: true }).then((data) => {\n        const tmp = { ...sensorsDatasets };\n        tmp[previewingDataset.sensor].rawDatasets[previewingDataset.datasetType].full = data;\n        updateSensorsDatasets(tmp);\n\n        convertCSVforDownload(data);\n      });\n    }\n    else {\n      convertCSVforDownload(fetchedDataset);\n    }\n\n  };\n\n  const convertCSVforDownload = (dataset) => {\n    const blob = new Blob([dataset], { type: 'application/octet-stream' }); // create a Blob with the raw data\n    const url = URL.createObjectURL(blob); // create a download link for the Blob\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = csvFileName;\n    document.body.appendChild(downloadLink);\n    downloadLink.click(); // simulate a click on the download link\n    URL.revokeObjectURL(url); // clean up by revoking the object URL\n    document.body.removeChild(downloadLink);\n  }\n\n  const [formattedData, setFormattedData] = useState('');\n  const [rowNumber, setRowNumber] = useState('');\n\n  useEffect(() => {\n    // If no dataset is chosen to be previewed, early return\n    if (!previewingDataset) return;\n\n    // Update previewing dataset name regardless if the dataset preview has finished loading\n    setPreviewingDatasetName(`Previewing: ${previewingDataset.sensor} (${previewingDataset.datasetType})`);\n\n    // Get the raw dataset\n    const csvData = sensorsDatasets[previewingDataset.sensor]?.rawDatasets[previewingDataset.datasetType]?.sample;\n\n    // If it is empty, then it hasn't been loaded yet\n    if (!csvData) {\n      setRowNumber(null);\n      setFormattedData(null);\n      setCsvFileName(\"Loading...\");\n      setIsDatasetLoading(true);\n      return;\n    };\n\n    if (isDatasetLoading) setIsDatasetLoading(false);\n\n    const lines = csvData.split('\\n');\n\n    const headers = lines[0].split(',');\n    const rows = lines.slice(1);\n\n    setRowNumber([\n      \"\",\n      ...rows.map(row => row.split(',')[0])\n    ].join('\\n'));\n\n    setFormattedData([\n      headers.slice(1).join(','), // Keep the headers for the rest of the columns\n      ...rows.map(row => row.split(',').slice(1).join(',')) // Remove the first column from each row\n    ].join('\\n'));\n\n    // Get the second column of the last row and extract the date part to set the csv's file name\n    let dateString;\n    if (rows.length > 0) {\n      const lastRow = rows[rows.length - 1];\n      const columns = lastRow.split(',');\n      if (columns.length >= 2) {\n        const dateTimeString = columns[1]; // Get the second column\n        dateString = dateTimeString.split('T')[0]; // Extract the date part\n      }\n    }\n\n    const csvFileName = `${schoolID}-${previewingDataset.sensor}-${previewingDataset.datasetType}-${dateString}.csv`;\n    setCsvFileName(csvFileName);\n  }, [previewingDataset, sensorsDatasets]);\n\n  return (\n    <Stack spacing={1}>\n      <Box sx={{ '& *': { fontFamily: \"monospace !important\" } }}>\n        <Stack direction=\"row\">\n          <Typography variant='body2' gutterBottom fontWeight={500}>\n            {previewingDatasetName}\n          </Typography>\n        </Stack>\n\n        <Box\n          component=\"pre\"\n          sx={{\n            overflowX: 'auto',\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.customBackground,\n            p: 2,\n            pt: 1.5,\n            borderRadius: 1,\n            height: smallScreen ? '11.8rem' : '14rem',\n            width: smallScreen ? '100%' : 'unset',\n            marginTop: 0\n          }}\n        >\n          <Stack\n            direction=\"row\"\n            sx={{ fontSize: '0.75rem' }}\n          >\n            {\n              formattedData ?\n                <>\n                  <Box sx={{ mr: 2, userSelect: 'none' }}>\n                    {rowNumber}\n                  </Box>\n                  <Box>\n                    {formattedData}\n                  </Box>\n                </>\n                :\n                <LoadingAnimation optionalText=\"Loading\" />\n            }\n          </Stack>\n        </Box>\n      </Box>\n      <Box textAlign=\"center\" >\n        <Button\n          variant=\"contained\"\n          sx={{\n            textTransform: 'none',\n            textAlign: 'left',\n            lineHeight: 1.1,\n            px: 1.5,\n            py: 1\n          }}\n          onClick={() => {\n            downloadPreviewingDataset();\n            Tracking.sendEventAnalytics(Tracking.Events.rawDatasetDownloaded, {\n              dataset_type: previewingDataset?.datasetType,\n              sensor: previewingDataset?.sensor\n            });\n          }}\n          disabled={isDatasetLoading}\n        >\n          <DownloadIcon sx={{ fontSize: '1.25rem', mr: 0.5 }} />\n          {csvFileName}\n        </Button>\n      </Box>\n    </Stack >\n  )\n}","import SpeedIcon from '@mui/icons-material/Speed';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\n\nconst AlertTypes = {\n  threshold: {\n    id: \"threshold\",\n    index: 0,\n    name: \"Threshold\",\n    tableColumnHeader: \"Threshold\",\n    icon: <SpeedIcon />\n  },\n  daily: {\n    id: \"daily\",\n    index: 1,\n    name: \"Daily\",\n    tableColumnHeader: \"Alert Hour\",\n    icon: <CalendarMonthIcon />\n  }\n};\n\nexport const ThresholdAlertTypes = {\n  below_threshold: {\n    id: 'below_threshold',\n    sign: \"<\",\n    name: \"below\"\n  },\n  above_threshold: {\n    id: 'above_threshold',\n    sign: \"≥\",\n    name: \"above\"\n  }\n}\n\nexport default AlertTypes;","export const returnHoursFromMinutesPastMidnight = (minutes) => {\n  const hoursPastMidnight = Math.floor(minutes / 60);\n  return hoursPastMidnight.toString().padStart(2, '0') + ':00';\n}\n\nexport const CrudTypes = {\n  add: 'ADD',\n  edit: 'EDIT',\n  delete: 'DELETE'\n}\n\nexport const SharedColumnHeader = {\n  location: \"Location\",\n  dataType: \"Data Type\",\n  selectedDaysOfWeek: \"Days\",\n  createdBy: \"Created By\"\n}","import { returnHoursFromMinutesPastMidnight } from '../../Utils';\n\nexport const HOURS = Array.from({ length: 24 }, (_, i) => {\n  const minutesPastMidnight = i * 60;\n  return {\n    label: returnHoursFromMinutesPastMidnight(minutesPastMidnight),\n    value: minutesPastMidnight\n  };\n});\n","import { HOURS } from \"./HOURS\";\n\nexport const PREDEFINED_TIMERANGES = {\n    allday: { id: \"allday\", label: \"All Day\", from: HOURS[0].value, to: HOURS[HOURS.length - 1].value, fromToLabel: \"00-23h\" },\n    schoolHour: { id: \"schoolHour\", label: \"School Hour\", from: HOURS[7].value, to: HOURS[17].value, fromToLabel: \"07-17h\" },\n    custom: { id: \"custom\", label: \"Custom\" }\n};\n","import { createContext, useMemo, useState, useContext, useEffect, useCallback } from 'react';\nimport { DashboardContext } from './DashboardContext';\nimport { fetchDataFromURL } from '../API/ApiFetch';\nimport { getAlertsApiUrl, getApiUrl } from '../API/ApiUrls';\nimport { GeneralAPIendpoints } from \"../API/Utils\";\nimport AlertTypes, { ThresholdAlertTypes } from '../Components/AirQuality/AirQualityAlerts/AlertTypes';\nimport { isValidArray } from '../Utils/UtilFunctions';\nimport { DataTypes } from '../Utils/AirQuality/DataTypes';\nimport { enqueueSnackbar } from 'notistack';\nimport { SnackbarMetadata } from '../Utils/SnackbarMetadata';\nimport { PREDEFINED_TIMERANGES } from '../Components/AirQuality/AirQualityAlerts/AlertModificationDialog/AlertPropertyComponents/PREDEFINED_TIMERANGES';\n\nconst AirQualityAlertContext = createContext();\n\nexport const AirQualityAlertKeys = {\n  id: \"id\",\n  alert_type: \"alert_type\",\n  sensor_id: \"sensor_id\",\n  location_short: \"location_short\",\n  datatypekey: \"datatypekey\",\n  threshold_value: \"threshold_value\",\n  days_of_week: \"days_of_week\",\n  minutespastmidnight: \"minutespastmidnight\",\n  time_range: \"time_range\",\n  is_enabled: \"is_enabled\",\n  excluded_dates: \"excluded_dates\",\n  owner_role: \"owner_role\",\n  self_is_owner: \"self_is_owner\",\n  is_allowed_to_modify: \"is_allowed_to_modify\",\n  message: \"message\",\n  max_once_a_day: \"max_once_a_day\",\n  parent_alert_id: \"parent_alert_id\",\n  child_alert: \"child_alert\",\n  has_child_alert: \"has_child_alert\"\n};\n\nexport const getAlertDefaultPlaceholder = (alert_type = AlertTypes.daily.id) => {\n  let localAlertType, localOppositeAlertType;\n  if (alert_type === AlertTypes.threshold.id) {\n    localAlertType = ThresholdAlertTypes.above_threshold.id;\n    localOppositeAlertType = ThresholdAlertTypes.below_threshold.id;\n  }\n\n  return {\n    [AirQualityAlertKeys.id]: '',\n    [AirQualityAlertKeys.alert_type]: localAlertType || alert_type,\n    [AirQualityAlertKeys.sensor_id]: '',\n    [AirQualityAlertKeys.datatypekey]: '',\n    [AirQualityAlertKeys.days_of_week]: [0, 1, 2, 3, 4],\n    [AirQualityAlertKeys.time_range]: alert_type === AlertTypes.threshold.id ? [PREDEFINED_TIMERANGES.schoolHour.from, PREDEFINED_TIMERANGES.schoolHour.to] : null,\n    [AirQualityAlertKeys.threshold_value]: -1,\n    [AirQualityAlertKeys.minutespastmidnight]: '',\n    [AirQualityAlertKeys.is_enabled]: true,\n    [AirQualityAlertKeys.excluded_dates]: [],\n    [AirQualityAlertKeys.message]: '',\n    [AirQualityAlertKeys.max_once_a_day]: true,\n    [AirQualityAlertKeys.parent_alert_id]: null,\n    [AirQualityAlertKeys.has_child_alert]: false,\n    [AirQualityAlertKeys.child_alert]: alert_type === AlertTypes.threshold.id ? {\n      [AirQualityAlertKeys.alert_type]: localOppositeAlertType || alert_type,\n      [AirQualityAlertKeys.threshold_value]: -1,\n      [AirQualityAlertKeys.message]: '',\n    } : null,\n  }\n}\n\nexport function AirQualityAlertProvider({ children }) {\n  const { schoolMetadata, currentSchoolID } = useContext(DashboardContext);\n\n  const [selectedAlert, setSelectedAlert] = useState(getAlertDefaultPlaceholder());\n\n  const [editingAlert, setEditingAlert] = useState(selectedAlert);\n\n  const [allowedDataTypesForSensor, setAllowedDataTypesForSensor] = useState([]);\n\n  const [alerts, setAlerts] = useState([]);\n\n  const [hasFetchedAlerts, setHasFetchedAlerts] = useState();\n\n  const [alertEmails, setAlertEmails] = useState([]);\n\n  const returnAllowedDataTypesForThisSensor = useCallback((sensor) => {\n    if (!schoolMetadata) return [];\n\n    const { sensors } = schoolMetadata;\n    if (!isValidArray(sensors)) return [];\n\n    const sensorData = sensors.find(elem => elem.sensor_id === sensor);\n    const allowedDataTypesForThisSensor = sensorData?.allowedDataTypes;\n\n    if (allowedDataTypesForThisSensor) {\n      return allowedDataTypesForThisSensor.map(dataType => ({\n        value: dataType,\n        label: DataTypes[dataType].name_title\n      }));\n    }\n\n    return [];\n  }, [schoolMetadata]);\n\n  useEffect(() => {\n    setEditingAlert({ ...selectedAlert });\n  }, [selectedAlert]);\n\n  useEffect(() => {\n    const sensor_id = editingAlert[AirQualityAlertKeys.sensor_id];\n    if (sensor_id && sensor_id !== '') {\n      setAllowedDataTypesForSensor(\n        returnAllowedDataTypesForThisSensor(sensor_id)\n      )\n    }\n  }, [editingAlert, returnAllowedDataTypesForThisSensor]);\n\n  // Add child alert to parent\n  const addChildToAlerts = useCallback((alertList = []) => {\n    const processed = [...alertList];\n\n    processed.forEach(alert => {\n      if (!alert) return;\n\n      const isChild = !!alert[AirQualityAlertKeys.parent_alert_id];\n\n      if (isChild) {\n        const parent = processed.find(\n          a => a[AirQualityAlertKeys.id] === alert[AirQualityAlertKeys.parent_alert_id]\n        );\n\n        if (parent) {\n          parent[AirQualityAlertKeys.has_child_alert] = true;\n          parent[AirQualityAlertKeys.child_alert] = {\n            [AirQualityAlertKeys.id]: alert[AirQualityAlertKeys.id],\n            [AirQualityAlertKeys.alert_type]: alert[AirQualityAlertKeys.alert_type],\n            [AirQualityAlertKeys.threshold_value]: alert[AirQualityAlertKeys.threshold_value],\n            [AirQualityAlertKeys.message]: alert[AirQualityAlertKeys.message],\n          };\n        }\n      } else {\n        if (alert[AirQualityAlertKeys.alert_type] === AlertTypes.daily.id) return;\n\n        alert[AirQualityAlertKeys.has_child_alert] = false;\n        alert[AirQualityAlertKeys.child_alert] = {\n          [AirQualityAlertKeys.alert_type]:\n            alert[AirQualityAlertKeys.alert_type] === ThresholdAlertTypes.above_threshold.id\n              ? ThresholdAlertTypes.below_threshold.id\n              : ThresholdAlertTypes.above_threshold.id,\n          [AirQualityAlertKeys.threshold_value]: alert[AirQualityAlertKeys.threshold_value],\n          [AirQualityAlertKeys.message]: \"\"\n        };\n      }\n    });\n\n    return processed;\n  }, []);\n\n  // Fetch alerts for individual school\n  const fetchAlerts = useCallback(() => {\n    if (!currentSchoolID) return;\n\n    fetchDataFromURL({\n      url: getAlertsApiUrl({\n        endpoint: GeneralAPIendpoints.alerts,\n        school_id: currentSchoolID\n      })\n    }).then((data) => {\n      if (!isValidArray(data)) return;\n\n      setAlerts(\n        addChildToAlerts(data)\n      );\n\n    }).catch((error) => {\n      console.log(error);\n    });\n\n    fetchDataFromURL({\n      url: getApiUrl({\n        endpoint: GeneralAPIendpoints.alertsEmails,\n        school_id: currentSchoolID\n      }),\n      extension: 'json',\n      needsAuthorization: true\n    }).then((data) => {\n      setAlertEmails(data);\n    })\n      .catch((error) => {\n        enqueueSnackbar(\"There was an error loading the alert email list, please try again\", SnackbarMetadata.error);\n      });\n  }, [currentSchoolID, addChildToAlerts]);\n\n  useEffect(() => {\n    if (!currentSchoolID) return;\n\n    setHasFetchedAlerts(false);\n  }, [currentSchoolID, fetchAlerts]);\n\n  const contextValue = useMemo(() => ({\n    selectedAlert, setSelectedAlert,\n    editingAlert, setEditingAlert,\n    allowedDataTypesForSensor, setAllowedDataTypesForSensor,\n    alerts, setAlerts,\n    fetchAlerts,\n    hasFetchedAlerts, setHasFetchedAlerts,\n    alertEmails, setAlertEmails,\n    addChildToAlerts\n  }), [selectedAlert, editingAlert, allowedDataTypesForSensor, alerts, fetchAlerts, hasFetchedAlerts, setHasFetchedAlerts, alertEmails, setAlertEmails, addChildToAlerts]);\n\n  return (\n    <AirQualityAlertContext.Provider value={contextValue}>\n      {children}\n    </AirQualityAlertContext.Provider>\n  );\n}\n\n// Custom hook \nexport const useAirQualityAlert = () => useContext(AirQualityAlertContext);","import { useContext, useEffect, useState } from 'react';\nimport { Box, TextField, Chip, Menu, MenuItem, Grid, Typography, Button, Stack, useMediaQuery, Alert, Tooltip, Link } from '@mui/material';\nimport { fetchDataFromURL } from \"../../../API/ApiFetch\";\nimport { RESTmethods } from \"../../../API/Utils\";\nimport { getApiUrl } from '../../../API/ApiUrls';\nimport { GeneralAPIendpoints } from \"../../../API/Utils\";\nimport { DashboardContext } from '../../../ContextProviders/DashboardContext';\nimport { isValidArray } from '../../../Utils/UtilFunctions';\nimport { SnackbarMetadata } from '../../../Utils/SnackbarMetadata';\nimport { validateEmail } from '../../../Utils/UtilFunctions';\nimport { useSnackbar } from 'notistack';\nimport { useAirQualityAlert } from '../../../ContextProviders/AirQualityAlertContext';\n\nconst compareArrays = (arr1, arr2) => {\n  return JSON.stringify(arr1) === JSON.stringify(arr2);\n}\n\nconst EmailsInput = () => {\n  const { currentSchoolID } = useContext(DashboardContext);\n\n  const { alertEmails, setAlertEmails } = useAirQualityAlert();\n\n  const { enqueueSnackbar } = useSnackbar()\n\n  const smallScreen = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n  const [localEmails, setLocalEmails] = useState([]);\n  const [emailsListChanged, setEmailsListChanged] = useState(false);\n\n  const [currentEmail, setCurrentEmail] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n\n  const [saveButtonTooltipTitle, setSaveButtonTooltipTitle] = useState('');\n\n  const maxEmails = 150;\n\n  useEffect(() => {\n    setLocalEmails(alertEmails);\n  }, [alertEmails]);\n\n  useEffect(() => {\n    setEmailsListChanged(!compareArrays(localEmails, alertEmails));\n  }, [localEmails]);\n\n  useEffect(() => {\n    setSaveButtonTooltipTitle(emailsListChanged ? \"Click to save new changes on server\" : \"No changes detected to save\");\n  }, [emailsListChanged]);\n\n  const handleAddEmail = (passedEmail) => {\n    const email = passedEmail.trim().toLowerCase();\n\n    // If email address follows email format\n    if (validateEmail(email)) {\n      const newEmails = [...localEmails, email];\n\n      // Make sure currentEmail hasn't been added before\n      if (localEmails.includes(email)) {\n        enqueueSnackbar(`Already added: ${email}`, SnackbarMetadata.error);\n        setCurrentEmail('');\n        return;\n      }\n\n      // Display alert if reached maximum number of email recipients\n      if (newEmails.length === maxEmails) {\n        enqueueSnackbar('Maximum number of recipients reached', SnackbarMetadata.warning);\n      }\n\n      setLocalEmails(newEmails);\n      setCurrentEmail('');\n    } else {\n      enqueueSnackbar('Invalid email address. Valid format: abc@def.xyz', SnackbarMetadata.error);\n    }\n  };\n\n  const handleDeleteEmail = (index) => {\n    const newEmails = localEmails.filter((_, i) => i !== index);\n    setLocalEmails(newEmails);\n  };\n\n  const handleEditEmail = (index) => {\n    setCurrentEmail(localEmails[index]);\n    handleDeleteEmail(index);\n  };\n\n  const handleMenuOpen = (event, index) => {\n    setMenuAnchor({ index, element: event.currentTarget });\n  };\n\n  const handleMenuClose = () => {\n    setMenuAnchor(null);\n  };\n\n  const handlePaste = (event) => {\n    const pastedText = event.clipboardData.getData('text');\n    setCurrentEmail(pastedText);\n    handleAddEmail(pastedText);\n    event.preventDefault();\n  };\n\n  const handleSaveEmails = (_emails) => {\n    const emailsToSave = isValidArray(_emails) ? _emails : (isValidArray(localEmails) ? localEmails : []);\n\n    fetchDataFromURL({\n      url: getApiUrl({\n        endpoint: GeneralAPIendpoints.alertsEmails,\n        school_id: currentSchoolID\n      }),\n      restMethod: RESTmethods.POST,\n      body: emailsToSave\n    }).then((data) => {\n      setAlertEmails(data);\n      enqueueSnackbar('Email list saved successfully!', SnackbarMetadata.success);\n    }).catch(() => {\n      enqueueSnackbar('There was an error saving the email. Please try again.', SnackbarMetadata.error);\n    })\n\n    return;\n  }\n\n  useEffect(() => {\n    const handleBeforeUnload = (event) => {\n      if (localEmails !== alertEmails) {\n        event.preventDefault();\n        event.returnValue = '';\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [localEmails, alertEmails]);\n\n  return (\n    <Box>\n      <Grid container alignItems=\"center\" wrap=\"wrap\">\n        <Grid item>\n          <Typography\n            variant='body1'\n            fontWeight={500}\n            sx={{ p: 0, mb: smallScreen && 1, mr: !smallScreen && 2 }}\n          >\n            Email Recipients:\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          lg\n          sx={{\n            overflowY: \"scroll\",\n            maxHeight: \"300px\"\n          }}\n        >\n          <Grid\n            container\n            alignItems=\"center\"\n            sx={{\n              border: '1px solid rgba(0, 0, 0, 0.23)',\n              borderRadius: 2,\n              p: 0.5,\n              flexWrap: 'wrap',\n              width: '100%'\n            }}\n          >\n            {localEmails.map((email, index) => (\n              <Grid item key={index} sx={{ m: 0.5 }}>\n                <Chip\n                  label={email}\n                  onDelete={() => handleDeleteEmail(index)}\n                  onClick={(event) => handleMenuOpen(event, index)}\n                />\n              </Grid>\n            )\n            )}\n            {\n              localEmails.length < maxEmails ? (\n                <Grid item xs={12} sm minWidth=\"200px\" >\n                  <TextField\n                    fullWidth\n                    variant=\"standard\"\n                    value={currentEmail}\n                    onChange={(e) => {\n                      const tmp = e.target.value;\n                      setCurrentEmail(tmp);\n                      if (tmp !== '') {\n                        setSaveButtonTooltipTitle(\"Finalize currently edited email by pressing Enter/Return\")\n                      }\n                    }}\n                    onKeyUp={(e) => {\n                      if (['Enter', 'Spacebar', ' '].includes(e.key)) {\n                        handleAddEmail(currentEmail);\n                      }\n                    }}\n                    onPaste={handlePaste}\n                    placeholder=\"Add recipient\"\n                    sx={{\n                      mx: 0.5\n                    }}\n                    InputProps={{\n                      disableUnderline: true,\n                      style: { textTransform: \"lowercase\" }\n                    }}\n                  />\n                </Grid>\n              ) : null\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Stack sx={{ mt: 1 }} spacing={1} alignItems={smallScreen ? \"stretch\" : \"end\"}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" gap={1}>\n          <Typography\n            variant=\"caption\"\n            display=\"block\"\n            color=\"text.secondary\"\n            textAlign=\"right\"\n          >\n            {localEmails.length} / {maxEmails} recipient{localEmails.length > 1 ? 's' : null} added\n          </Typography>\n\n          <Link\n            variant=\"caption\"\n            sx={{\n              cursor: \"pointer\"\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              setCurrentEmail('');\n              setLocalEmails([])\n            }}\n          >\n            Clear All\n          </Link>\n        </Stack>\n\n\n        {\n          alertEmails.length === 0 ?\n            (\n              <Alert\n                severity='error'\n                sx={{\n                  mt: 1\n                }}>\n                The alert(s) above will not be sent unless at least one email recipient is saved\n              </Alert>\n            ) : null\n        }\n\n        <Tooltip title={saveButtonTooltipTitle} enterTouchDelay={0}>\n          {/* Span is needed to display Tooltip on a disabled Button */}\n          <span>\n            <Button\n              onClick={handleSaveEmails}\n              variant=\"contained\"\n              sx={{ width: smallScreen ? \"100%\" : \"fit-content\" }}\n              disabled={!emailsListChanged}\n            >\n              SAVE EMAIL LIST\n            </Button>\n          </span>\n        </Tooltip>\n\n      </Stack>\n\n      <Menu\n        anchorEl={menuAnchor?.element}\n        open={Boolean(menuAnchor)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem\n          onClick={() => {\n            handleEditEmail(menuAnchor.index);\n            handleMenuClose();\n          }}\n        >\n          Edit\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nexport default EmailsInput;\n","import { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, useTheme } from '@mui/material';\n\nexport default function AlertDeletionDialog(props) {\n  const { onConfirmedDelete } = props;\n\n  const [open, setOpen] = useState(false);\n  const theme = useTheme();\n\n  return (\n    <>\n      <Button\n        variant=\"text\"\n        color=\"error\"\n        onClick={() => {\n          setOpen(true)\n        }}>\n        Delete\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          setOpen(false)\n        }}\n        aria-labelledby=\"alert-deletion-confirmation-dialog-title\"\n        aria-describedby=\"alert-deletion-confirmation-dialog-description\"\n        maxWidth=\"xs\"\n      >\n        <DialogTitle id=\"alert-deletion-confirmation-dialog-title\">\n          Are you sure?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-deletion-confirmation-dialog-description\">\n            Deletion is permanent. If you simply wish to pause this alert, disable it with the toggle switch instead.</DialogContentText>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: \"end\" }}>\n          <Button\n            onClick={() => {\n              setOpen(false)\n            }}\n            sx={{\n              color: theme.palette.text.secondary\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button\n            onClick={() => {\n              onConfirmedDelete();\n              setOpen(false);\n            }}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import { CrudTypes } from '../Utils';\n\nexport const DialogData = {\n  [CrudTypes.add]: {\n    title: \"Add A New Alert\",\n    primaryButtonLabel: \"Save Alert\",\n    errorMessage: \"Server error: new alert was not saved. Please try again\",\n    successMessage: \"New alert added successfully\"\n  },\n  [CrudTypes.edit]: {\n    title: \"Edit Alert\",\n    primaryButtonLabel: \"Save Edit\",\n    errorMessage: \"Server error: changes were not saved. Please try again\",\n    successMessage: \"Changes saved successfully\"\n  },\n  [CrudTypes.delete]: {\n    title: \"Delete Alert\",\n    contentText: \"Are you sure you want to delete this alert?\",\n    primaryButtonLabel: \"Delete\",\n    errorMessage: \"Server error: alert not deleted. Please try again.\",\n    successMessage: \"Alert deleted successfully\"\n  }\n};\n","import { Box, FormControl, InputLabel, Select, MenuItem, Stack } from '@mui/material';\nimport { useTheme } from '@mui/material';\nimport { isValidArray } from '../../../../../Utils/UtilFunctions';\n\nexport const SimplePicker = (props) => {\n  const { icon, label, value, options, handleChange, disabled, ...otherProps } = props;\n  const theme = useTheme();\n\n  return (\n    <Stack\n      direction=\"row\"\n      gap={icon ? 1 : 0}\n      alignItems=\"center\"\n      {...otherProps}\n    >\n      <Box\n        aria-hidden={true}\n        sx={{\n          '& .MuiSvgIcon-root': {\n            color: disabled ? theme.palette.text.secondary : theme.palette.primary.main,\n            verticalAlign: \"middle\"\n          }\n        }}\n      >\n        {icon}\n      </Box>\n\n      <FormControl\n        fullWidth\n        size='small'\n        disabled={disabled}\n        sx={{ minWidth: \"100px\", marginLeft: \"0 !important\" }}\n      >\n        <InputLabel id={`${label}-picker-label`}>{label}</InputLabel>\n        <Select\n          labelId={`${label}-picker-label`}\n          id={`${label}-picker`}\n          value={value}\n          label={label}\n          onChange={handleChange}\n        >\n          {isValidArray(options) &&\n            options.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n    </Stack >\n  );\n};\n","import { useState, useEffect, useCallback } from \"react\";\nimport { Box, Stack, ToggleButtonGroup, ToggleButton } from \"@mui/material\";\nimport { useTheme } from \"@mui/material\";\nimport WatchLaterIcon from '@mui/icons-material/WatchLater';\nimport { SimplePicker } from \"./SimplePicker\";\nimport { HOURS } from \"./HOURS\";\nimport { isValidArray } from \"../../../../../Utils/UtilFunctions\";\nimport { PREDEFINED_TIMERANGES } from \"./PREDEFINED_TIMERANGES\";\nimport { getAlertDefaultPlaceholder, AirQualityAlertKeys } from \"../../../../../ContextProviders/AirQualityAlertContext\";\nimport AlertTypes from \"../../AlertTypes\";\nimport { useMediaQuery } from \"@mui/material\";\n\nconst TimeRangeSelector = ({ value: timeRange, disabled, handleChange }) => {\n    const theme = useTheme();\n\n    const [displayFromToPickers, setDisplayFromToPickers] = useState(false);\n\n    // Always normalize into a [string, string]\n    const [fromValue, toValue] = isValidArray(timeRange)\n        ? timeRange\n        : getAlertDefaultPlaceholder(AlertTypes.threshold.id)[AirQualityAlertKeys.time_range];\n\n    const [predefinedRange, setPredefinedRange] = useState(() => {\n        // Sync initial toggle‑button state\n        const match = Object.values(PREDEFINED_TIMERANGES)\n            .find(r => r.from === fromValue && r.to === toValue);\n        return match ? match.id : PREDEFINED_TIMERANGES.custom.id;\n    });\n\n    // When `timeRange` actually changes, keep buttons in sync:\n    useEffect(() => {\n        const match = Object.values(PREDEFINED_TIMERANGES)\n            .find(r => r.from === fromValue && r.to === toValue);\n        setPredefinedRange(match ? match.id : PREDEFINED_TIMERANGES.custom.id);\n    }, [fromValue, toValue]);\n\n    const handleModeChange = useCallback((_, newMode) => {\n        if (!newMode) return;\n        setPredefinedRange(newMode);\n        const range = PREDEFINED_TIMERANGES[newMode];\n        if (range.from != null && range.to != null) {\n            handleChange([range.from, range.to]);\n        }\n\n        // only display the hour pickers if custom time is used\n        setDisplayFromToPickers(newMode === PREDEFINED_TIMERANGES.custom.id);\n    }, [handleChange]);\n\n    // Add useMediaQuery to detect small screens\n\n    const smallScreen = useMediaQuery((theme) => theme.breakpoints.down('md'));\n    const extraSmallScreen = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n\n    return (\n        <Stack direction=\"row\" alignItems=\"start\" gap={1} width=\"100%\">\n            <Box\n                aria-hidden\n                sx={{\n                    '& .MuiSvgIcon-root': {\n                        color: disabled\n                            ? theme.palette.text.secondary\n                            : theme.palette.primary.main,\n                        verticalAlign: \"-webkit-baseline-middle\"\n                    }\n                }}\n            >\n                <WatchLaterIcon sx={{ mt: 0.75 }} />\n            </Box>\n\n            <Stack direction=\"column\" width=\"100%\" gap={1.5}>\n                <ToggleButtonGroup\n                    fullWidth={smallScreen}\n                    color={disabled ? \"standard\" : \"primary\"}\n                    value={predefinedRange}\n                    exclusive\n                    onChange={handleModeChange}\n                    size=\"small\"\n                    disabled={disabled}\n                >\n                    {Object.values(PREDEFINED_TIMERANGES).map((range, idx, arr) => (\n                        <ToggleButton\n                            key={range.id}\n                            value={range.id}\n                            aria-label={range.label}\n                            sx={{\n                                textTransform: 'none',\n                                px: 1.5,\n                                flex: (idx === arr.length - 1) ? 1 : undefined,\n                                lineHeight: extraSmallScreen ? 1.3 : undefined\n                            }}\n                            size=\"small\"\n                        >\n                            {range.label}\n                            {range.fromToLabel && (\n                                extraSmallScreen ? (\n                                    <>\n                                        <br />\n                                        {range.fromToLabel}\n                                    </>\n                                ) : (\n                                    <> {range.fromToLabel}</>\n                                )\n                            )}\n                        </ToggleButton>\n                    ))}\n                </ToggleButtonGroup>\n\n                {\n                    displayFromToPickers ? (\n                        <Stack direction=\"row\" flex={1} gap={1}>\n                            <SimplePicker\n                                label=\"From\"\n                                value={fromValue}\n                                options={HOURS}\n                                disabled={disabled || predefinedRange !== \"custom\"}\n                                handleChange={e => handleChange([e.target.value, toValue])}\n                                flex={1}\n                            />\n                            <SimplePicker\n                                label=\"To\"\n                                value={toValue}\n                                options={HOURS.filter(h => h.value > fromValue)}\n                                disabled={disabled || predefinedRange !== \"custom\"}\n                                handleChange={e => handleChange([fromValue, e.target.value])}\n                                flex={1}\n                            />\n                        </Stack>\n                    ) : null\n                }\n            </Stack>\n        </Stack>\n    );\n};\n\n\nexport default TimeRangeSelector;\n","import { Box, Stack, TextField, Typography } from \"@mui/material\";\n\nconst OptionalMessage = (props) => {\n    const {\n        label = \"Optional Message\",\n        value,\n        handleChange,\n        maxLength,\n        showTip = true,\n        disabled\n    } = props;\n    const currentLength = value ? value.length : 0;\n\n    return (\n        <Stack direction=\"column\">\n            <TextField\n                label={label}\n                multiline\n                minRows={2}\n                maxRows={4}\n                inputProps={{\n                    maxLength,\n                }}\n                value={value || ''}\n                onChange={(event) => {\n                    handleChange(event);\n                }}\n                disabled={disabled}\n            />\n            <Stack direction=\"row\" gap={1} justifyContent=\"space-between\" sx={{ mx: 1, my: 0.5 }}>\n                {showTip ? (\n                    <Typography color=\"text.secondary\" variant=\"caption\">\n                        Optional message that will appear in the alert\n                    </Typography>\n                ) : <Box />}\n\n                <Typography color=\"text.secondary\" variant=\"caption\" textAlign=\"right\">\n                    {currentLength}/{maxLength}\n                </Typography>\n            </Stack>\n        </Stack>\n    );\n};\n\nexport default OptionalMessage;","export const DAYS_OF_WEEK = [\n  { value: 0, label: 'Monday' },\n  { value: 1, label: 'Tuesday' },\n  { value: 2, label: 'Wednesday' },\n  { value: 3, label: 'Thursday' },\n  { value: 4, label: 'Friday' },\n  { value: 5, label: 'Saturday' },\n  { value: 6, label: 'Sunday' }\n];\n","import dayjs from 'dayjs';\nimport { styled } from '@mui/material/styles';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { PickersDay } from '@mui/x-date-pickers/PickersDay';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\n\nimport { Link, Typography } from '@mui/material';\nimport CustomDialog from '../../../../CustomDialog/CustomDialog';\n\n// Custom styling for the selected days\nconst CustomPickersDay = styled(PickersDay, {\n  shouldForwardProp: (prop) => prop !== \"selected\"\n})(({ theme, selected }) => ({\n  ...(selected && {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.primary.dark\n    },\n    borderRadius: \"50%\",\n  })\n}));\n\n// Custom day component that highlights the selected dates\nconst CustomDayComponent = (props) => {\n  const { day, selectedDates, ...other } = props;\n\n  // Check if the day is selected\n  const isSelected = selectedDates.includes(dayjs(day).format('YYYY-MM-DD'));\n\n  return (\n    <CustomPickersDay {...other} day={day} selected={isSelected} />\n  )\n}\n\nexport default function MultiDaysCalendarPicker(props) {\n  const { selectedDates, handleChange, disabled } = props;\n\n  // Ensure selectedDates is formatted as \"YYYY-MM-DD\"\n  const parsedSelectedDates = selectedDates.map((date) => dayjs(date).format('YYYY-MM-DD'));\n\n  const len = selectedDates.length;\n  const title = len > 0 ? `Excluded Dates (${len} Days)` : `Excluded Dates`;\n\n  return (\n    <CustomDialog\n      dialogTitle={title}\n      buttonLabel={title}\n      buttonVariant='text'\n      disabled={disabled}\n      maxWidth=\"xs\"\n      displaySchoolID={false}\n    >\n      <Typography color=\"text.secondary\" variant='body2' gutterBottom>\n        Select dates when you do <b>NOT</b> want to receive alerts.\n        <br />\n        Useful for holidays or school breaks.\n      </Typography>\n\n      <Link\n        variant=\"caption\"\n        sx={{\n          cursor: \"pointer\",\n          display: \"block\",\n          textAlign: \"right\"\n        }}\n        onClick={(e) => {\n          e.preventDefault();\n          handleChange(selectedDates);\n        }}\n      >\n        Clear All\n      </Link>\n\n      <LocalizationProvider\n        dateAdapter={AdapterDayjs}\n        localeText={{\n          calendarWeekNumberHeaderText: 'Week',\n          calendarWeekNumberText: (weekNumber) => `${weekNumber}.`,\n        }}\n      >\n        <DateCalendar\n          displayWeekNumber\n          slots={{\n            day: (dayProps) => (\n              <CustomDayComponent\n                {...dayProps}\n                selectedDates={parsedSelectedDates}\n              />\n            ),\n          }}\n          onChange={(value, selectionState) => {\n            if (selectionState === 'finish') {\n              handleChange([dayjs(value).format('YYYY-MM-DD')]);\n            }\n          }}\n          disableHighlightToday\n          minDate={dayjs().startOf('month')} // Restrict to dates after the start of the current month\n        />\n      </LocalizationProvider>\n    </CustomDialog>\n  );\n}\n","import { Box, Grid, Stack, ToggleButton, ToggleButtonGroup, Tooltip } from '@mui/material';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport { DAYS_OF_WEEK } from './DAYS_OF_WEEK';\nimport { AirQualityAlertKeys, getAlertDefaultPlaceholder } from '../../../../../ContextProviders/AirQualityAlertContext';\nimport { useTheme } from '@mui/material';\nimport MultiDaysCalendarPicker from './MultiDaysCalendarPicker';\n\nexport default function DateSelector(props) {\n  const { daysOfWeek, excludedDates, handleDaysOfWeekChange, handleExcludedDatesChange, disabled } = props;\n  const theme = useTheme();\n\n  return (\n    <Grid\n      container\n      rowSpacing={0.5}\n      columnSpacing={2}\n      alignItems=\"center\"\n      justifyContent=\"stretch\"\n    >\n      <Grid item xs={12} md={6}>\n        <Stack\n          direction=\"row\"\n          gap={1}\n          alignItems=\"start\"\n        >\n          <Box\n            aria-hidden\n            sx={{\n              '& .MuiSvgIcon-root': {\n                color: disabled\n                  ? theme.palette.text.secondary\n                  : theme.palette.primary.main,\n                verticalAlign: \"middle\"\n              }\n            }}\n          >\n            <CalendarMonthIcon sx={{ mt: 0.75 }} />\n          </Box>\n\n          <ToggleButtonGroup\n            value={daysOfWeek || getAlertDefaultPlaceholder()[AirQualityAlertKeys.days_of_week]}\n            onChange={handleDaysOfWeekChange}\n            aria-label=\"days of the week to receive alert\"\n            sx={{ display: 'flex', justifyContent: 'center' }} // Center the buttons horizontally\n            size=\"small\"\n            fullWidth\n            disabled={disabled}\n            color={disabled ? \"standard\" : \"primary\"}\n          >\n            {DAYS_OF_WEEK.map((day) => (\n              <Tooltip key={day.value} title={day.label} arrow>\n                <ToggleButton value={day.value} aria-label={day.label} sx={{ textTransform: 'none' }}>\n                  {day.label.slice(0, 3)}\n                </ToggleButton>\n              </Tooltip>\n            ))}\n          </ToggleButtonGroup>\n        </Stack>\n      </Grid>\n\n      <Grid item xs={12} md={6} ml={{ xs: 3, sm: 0 }}>\n        <MultiDaysCalendarPicker\n          selectedDates={excludedDates}\n          disabled={disabled}\n          handleChange={handleExcludedDatesChange}\n        />\n      </Grid>\n    </Grid>\n\n  );\n}\n","import { Slider, colors, TextField, Grid, Typography } from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useTheme } from '@mui/material';\n\nexport const ThresholdSlider = (props) => {\n  const {\n    min = 0,\n    max = 100,\n    value,\n    defaultValue,\n    stepsForThreshold = 1,\n    marks = null,\n    handleChange,\n    disabled,\n    backgroundCssGradient,\n    invertSelection = false,\n    showInput = true,\n    inputUnit,\n    valueLabelDisplay = \"on\",\n    showTip = true\n  } = props;\n\n  const theme = useTheme();\n\n  // sliderValue is an array\n  const [sliderRangeMin, setSliderRangeMin] = useState(invertSelection ? value || defaultValue : min);\n  const [sliderRangeMax, setSliderRangeMax] = useState(invertSelection ? max : value || defaultValue);\n  const [nearestDataIndex, setNearestDataIndex] = useState(-1);\n\n  const [error, setError] = useState(false);\n  const [helperText, setHelperText] = useState('');\n\n  const findNearestDataIndex = useCallback((val) => {\n    if (!marks) return -1;\n\n    // Filter marks to get those with values greater than currentVal\n    const greaterMarks = marks.filter(mark => mark.value >= val);\n\n    // If no marks are greater, return -1\n    if (greaterMarks.length === 0) {\n      return -1;\n    }\n\n    // Find the mark with the nearest value greater than val\n    const nearestMark = greaterMarks.reduce((prev, curr) => {\n      return (curr.value - val) < (prev.value - val) ? curr : prev;\n    });\n\n    // Return the index of the nearest mark in the original marks array\n    const index = marks.indexOf(nearestMark)\n    return invertSelection ? index - 1 : index;\n  }, [marks, invertSelection]);\n\n  useEffect(() => {\n    const localSliderRangeMin = invertSelection ? value : min;\n    const localSliderRangeMax = invertSelection ? max : value;\n    setSliderRangeMin(localSliderRangeMin);\n    setSliderRangeMax(localSliderRangeMax);\n\n    setNearestDataIndex(findNearestDataIndex(invertSelection ? localSliderRangeMin : localSliderRangeMax));\n  }, [findNearestDataIndex, invertSelection, value, max, min]);\n\n  const handleSliderChange = (event, newValue) => {\n    const val = newValue[invertSelection ? 0 : 1];\n\n    setSliderRangeMin(invertSelection ? val : min);\n    setSliderRangeMax(invertSelection ? max : val);\n\n    handleChange(val);\n    setNearestDataIndex(findNearestDataIndex(val));\n  };\n\n  const handleInputChange = (event) => {\n    const val = event.target.value === '' ? '' : Number(event.target.value);\n\n    // Empty val\n    if (!val || val === '') {\n      handleChange(val);\n    }\n\n    // Non-empty val\n    if (val !== '' && (val >= min && val <= max)) {\n      setSliderRangeMin(invertSelection ? val : min);\n      setSliderRangeMax(invertSelection ? max : val);\n\n      handleChange(val);\n      setNearestDataIndex(findNearestDataIndex(val));\n\n      setError(false);\n      setHelperText('');\n    } else {\n      setError(true);\n      setHelperText(`Threshold must be between ${min} and ${max}`);\n    }\n  };\n\n  const stripedGradient = `repeating-linear-gradient(-45deg, ${colors.grey[800]}, ${colors.grey[800]} 4px, ${colors.common.white} 4px, ${colors.common.white} 8px)`;\n\n  const sliderSX = {\n    height: \"20vh\",\n    minHeight: \"250px\",\n    maxHeight: \"500px\",\n    cursor: disabled ? 'not-allowed' : 'inherit',\n    pointerEvents: 'all',\n    '& *': {\n      transition: 'none !important'\n    },\n    '& .MuiSlider-thumb': {\n      width: '2rem',\n      height: '4px',\n      borderRadius: 1,\n      color: colors.common.black,\n    },\n    [`& .MuiSlider-thumb[data-index=\"${invertSelection ? 1 : 0}\"]`]: {\n      display: 'none',\n    },\n    '& .MuiSlider-mark, .MuiSlider-markActive': {\n      width: '2rem',\n      height: '3px',\n      background: theme.palette.background.paper,\n      backgroundImage: theme.palette.background.paperBackgroundGradient\n    },\n    '& .MuiSlider-thumb, .MuiSlider-mark': {\n      transform: `translate(-50%,50%})`\n    },\n    '& .MuiSlider-rail, .MuiSlider-track': {\n      width: '1rem',\n      opacity: 0.75,\n      border: 'none'\n    },\n    '& .MuiSlider-rail': {\n      background: disabled ? colors.grey[400] : backgroundCssGradient,\n    },\n    '& .MuiSlider-track': {\n      background: stripedGradient,\n      ...(invertSelection ? {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      } : {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      })\n    },\n    [`& .MuiSlider-markLabel, .MuiSlider-markLabel[data-index=\"${nearestDataIndex}\"]`]: {\n      color: theme.palette.text.primary,\n      fontWeight: 500,\n      textDecoration: 'underline',\n    },\n    '& .MuiSlider-markLabelActive': {\n      color: theme.palette.text.secondary,\n      fontWeight: 'inherit',\n      textDecoration: 'inherit',\n    },\n    '& .MuiSlider-valueLabel': {\n      transform: 'translate(-10px, -50%)',\n    }\n  };\n\n  return (\n    <>\n      <Grid container item xs=\"auto\" alignItems=\"end\" spacing={0.5}>\n        <Grid item xs=\"auto\" minWidth=\"4.5rem\">\n          {showInput ? (\n            <TextField\n              variant='standard'\n              type=\"number\"\n              label=\"Threshold\"\n              value={invertSelection ? sliderRangeMin : sliderRangeMax}\n              onChange={handleInputChange}\n              error={error}\n              helperText={helperText}\n              size='small'\n              fullWidth\n              disabled={disabled}\n              inputProps={{\n                step: stepsForThreshold,\n                min,\n                max,\n                type: 'number',\n                'aria-labelledby': 'input-threshold-slider'\n              }}\n            />\n          ) : null}\n        </Grid>\n\n        {\n          inputUnit ? (\n            <Grid item>\n              <Typography variant='body2'>\n                {inputUnit}\n              </Typography>\n            </Grid>\n          ) : null\n        }\n      </Grid>\n\n      <Grid item xs={12} sx={{ mt: 2, ml: 7.5 }}>\n        <Slider\n          getAriaLabel={() => 'Alert Threshold Slider'}\n          aria-labelledby=\"input-threshold-slider\"\n          value={[sliderRangeMin, sliderRangeMax]}\n          step={marks === null ? stepsForThreshold : null} // only allow discrete equal step if marks are not provided\n          marks={marks}\n          disabled={disabled}\n          min={min}\n          max={max}\n          onChange={handleSliderChange}\n          valueLabelDisplay={valueLabelDisplay}\n          orientation=\"vertical\"\n          sx={sliderSX} />\n      </Grid>\n\n      <Grid item sx={{ mt: 1, ml: 1, visibility: showTip === true ? 'visible' : 'hidden' }}>\n        <Typography color=\"text.secondary\" variant='caption' display='block'>\n          Move the slider to change the alert's threshold value or use the text input box for more precise control.\n        </Typography>\n      </Grid>\n    </>\n  );\n};\n\n\n\n","import { ThresholdSlider } from \"./ThresholdSlider\";\nimport { DataTypeKeys, DataTypes } from \"../../../../../../Utils/AirQuality/DataTypes\";\nimport { AirQualityAlertKeys, useAirQualityAlert } from \"../../../../../../ContextProviders/AirQualityAlertContext\";\nimport { AQI_Database, HeatIndex_Database, VOC_Database } from \"../../../../../../Utils/AirQuality/AirQualityIndexHelper\";\nimport { useTheme } from '@mui/material';\nimport { generateCssBackgroundGradient } from \"../../../../../../Utils/Gradient/GradientUtils\";\n\nexport const ThresholdComponentWrapper = (props) => {\n    const {\n        value,\n        invertSelection,\n        handleValueChange,\n        placeholderValueBeforeDataTypeSelection = 0.5,\n        disabledSlider,\n        showTip = true\n    } = props;\n\n    const { editingAlert } = useAirQualityAlert();\n\n    const theme = useTheme();\n\n    let thresholdSlider = null;\n\n    const currentDataTypeKey = editingAlert[AirQualityAlertKeys.datatypekey];\n    if (currentDataTypeKey && DataTypes[currentDataTypeKey]) {\n        const dataType = DataTypes[currentDataTypeKey];\n        const dataTypeColorAxis = theme.palette.chart.colorAxes[dataType.color_axis];\n        const { colors, minValue, maxValue, defaultValueForAlert, stepsForThreshold } = dataTypeColorAxis;\n\n        const backgroundCssGradient = generateCssBackgroundGradient({\n            gradientDirection: 'to top',\n            colors: colors\n        });\n\n        // Check if this dataType exists in the AQI_Database\n        // If yes, return value and label accordingly to the marks\n        let marks, database;\n\n        switch (currentDataTypeKey) {\n            case DataTypeKeys.voc:\n                database = VOC_Database;\n                break;\n            case DataTypeKeys.aqi:\n            case DataTypeKeys.pm2_5:\n            case DataTypeKeys.pm10_raw:\n            case DataTypeKeys.co2:\n                database = AQI_Database;\n                break;\n            case DataTypeKeys.heat_index_C:\n                database = HeatIndex_Database;\n                break;\n            default:\n                database = null;\n        }\n\n        if (database) {\n            marks = database\n                .filter((_, index) => index !== 0) // do not return the lowest category\n                .map((elem) => {\n                    const val = elem[dataType.threshold_mapping_name].low;\n                    return {\n                        value: val,\n                        label: elem.category\n                    }\n                })\n        }\n\n        const inputUnit = Object.keys(DataTypes)\n            .filter(key => key === editingAlert[AirQualityAlertKeys.datatypekey])\n            .map(key => DataTypes[key].unit)[0]\n\n        thresholdSlider = (\n            <ThresholdSlider\n                min={minValue}\n                max={maxValue}\n                marks={marks}\n                defaultValue={defaultValueForAlert}\n                value={value}\n                stepsForThreshold={stepsForThreshold}\n                disabled={disabledSlider}\n                backgroundCssGradient={backgroundCssGradient}\n                invertSelection={invertSelection}\n                handleChange={handleValueChange}\n                inputUnit={inputUnit}\n                showTip={showTip}\n            />\n        )\n    } else {\n        thresholdSlider = (\n            <ThresholdSlider\n                min={0}\n                max={1}\n                value={placeholderValueBeforeDataTypeSelection}\n                disabled={true}\n                showInput={false}\n                invertSelection={invertSelection}\n                valueLabelDisplay=\"off\"\n                showTip={showTip}\n            />\n        )\n    }\n\n    return thresholdSlider;\n}","import { FormControl, FormGroup, FormControlLabel, FormHelperText, Checkbox, Typography } from '@mui/material';\n\nexport const MaxOnceADayCheckbox = ({ value, handleChange, disabled }) => {\n\n  const returnHelperText = () => {\n    if (value === true) {\n      return (\n        <>\n          Send alert <strong>at most once a day</strong> when the threshold is breached\n        </>\n      );\n    } else {\n      return (\n        <>\n          Send alert <strong>every hour</strong> for as long as the threshold is breached\n        </>\n      );\n    }\n  };\n  return (\n    <FormControl\n      component=\"fieldset\"\n      variant=\"standard\"\n      sx={{ mt: { md: -1 } }}\n      disabled={disabled}\n    >\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={value}\n              onChange={handleChange}\n              size='small'\n            />\n          }\n          label={<Typography color=\"text.secondary\" fontWeight={500}>Max Once a Day</Typography>}\n          color=\"text.secondary\"\n        />\n      </FormGroup>\n      <FormHelperText sx={{ mt: -0.5 }}>{returnHelperText()}</FormHelperText>\n    </FormControl>\n  );\n};\n","import { ToggleButtonGroup, ToggleButton } from '@mui/material';\nimport { ThresholdAlertTypes } from '../../../AlertTypes';\n\nexport const ThresholdTypeToggle = ({ currentAlertType, handleChange, disabled, ...others }) => {\n  return (\n    <ToggleButtonGroup\n      color={disabled ? \"standard\" : \"primary\"}\n      disabled={disabled}\n      defaultValue={ThresholdAlertTypes.above_threshold.id}\n      value={currentAlertType}\n      exclusive\n      aria-label=\"toggle to choose alert below or above a threshold\"\n      size=\"small\"\n      onChange={handleChange}\n      {...others}\n    >\n      {Object.keys(ThresholdAlertTypes).map((key) => {\n        const thresholdAlertType = ThresholdAlertTypes[key];\n\n        return (\n          <ToggleButton\n            key={thresholdAlertType.id}\n            size=\"small\"\n            sx={{\n              textTransform: \"capitalize !important\",\n              px: 1.25\n            }}\n            value={thresholdAlertType.id}\n            aria-label={thresholdAlertType.id}\n          >\n            {thresholdAlertType.sign}&nbsp;{thresholdAlertType.name}\n          </ToggleButton>\n        );\n      })}\n    </ToggleButtonGroup>\n  );\n};\n\nexport const ThresholdType = ({ currentAlertType, ...others }) => {\n\n  return (\n    <ToggleButtonGroup\n      color={\"standard\"}\n      disabled={true}\n      defaultValue={ThresholdAlertTypes.below_threshold.id}\n      value={currentAlertType}\n      exclusive\n      aria-label=\"non-interactive button displaying threshold type\"\n      size=\"small\"\n      {...others}\n    >\n      {Object.keys(ThresholdAlertTypes).map((key) => {\n        const thresholdAlertType = ThresholdAlertTypes[key];\n        if (thresholdAlertType.id !== currentAlertType) return null;\n\n        return (\n          <ToggleButton\n            key={thresholdAlertType.id}\n            size=\"small\"\n            sx={{\n              textTransform: \"capitalize !important\",\n              px: 1.25\n            }}\n            value={thresholdAlertType.id}\n            aria-label={thresholdAlertType.id}\n          >\n            {thresholdAlertType.sign}&nbsp;{thresholdAlertType.name}\n          </ToggleButton>\n        );\n      })}\n    </ToggleButtonGroup>\n  );\n}\n","import { AirQualityAlertKeys, getAlertDefaultPlaceholder, useAirQualityAlert } from \"../../../../../ContextProviders/AirQualityAlertContext\";\nimport AlertTypes, { ThresholdAlertTypes } from \"../../AlertTypes\";\nimport { SimplePicker } from \"./SimplePicker\";\n\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport PlaceIcon from '@mui/icons-material/Place';\nimport { SharedColumnHeader } from \"../../Utils\";\nimport TimeRangeSelector from \"./TimeRangeSelector\";\nimport { DataTypes } from \"../../../../../Utils/AirQuality/DataTypes\";\nimport { capitalizePhrase } from \"../../../../../Utils/UtilFunctions\";\nimport { useContext } from \"react\";\nimport { DashboardContext } from \"../../../../../ContextProviders/DashboardContext\";\nimport { HOURS } from \"./HOURS\";\nimport { Checkbox, DialogContentText, FormControlLabel, FormGroup, Grid, Stack, Switch, Typography, useTheme } from \"@mui/material\";\n\nimport OptionalMessage from \"./OptionalMessage\";\nimport DateSelector from \"./DaySelector\";\nimport { ThresholdComponentWrapper } from \"./ThresholdAlertComponents/ThresholdComponentWrapper\";\n\nimport { DialogData } from \"../DialogData\";\nimport { MaxOnceADayCheckbox } from \"./MaxOnceADayCheckbox\";\nimport { ThresholdType, ThresholdTypeToggle } from \"./ThresholdAlertComponents/ThresholdTypeToggle\";\n\nconst returnFormattedStatusString = (editingAlert) => {\n    const status = editingAlert[AirQualityAlertKeys.is_enabled] ? \"enabled\" : \"disabled\";\n    const tense = editingAlert[AirQualityAlertKeys.id] ? \"is\" : \"will be\"; // if this alert doesn't have id, it's not d in DB yet, thus we use future tense \n\n    return `This alert ${tense} ${status}`;\n}\n\nexport const AlertPropertyComponents = ({ alertTypeKey, crudType }) => {\n    const { schoolMetadata } = useContext(DashboardContext);\n    const { editingAlert, allowedDataTypesForSensor, setEditingAlert } = useAirQualityAlert();\n\n    const theme = useTheme();\n\n    // Get the available sensors (locations) for this school\n    const allSensorsOfSchool = schoolMetadata?.sensors?.map(sensor => (\n        {\n            value: sensor.sensor_id,\n            label: capitalizePhrase(sensor.location_short)\n        }\n    ));\n\n    // Helper function to check if the previous field has a value to disable this field\n    const isDisabled = (key) => {\n        switch (key) {\n            case AirQualityAlertKeys.sensor_id:\n            case AirQualityAlertKeys.is_enabled:\n                // sensor_id and is_enabled can never be disabled because it's the first field\n                return false;\n\n            case AirQualityAlertKeys.datatypekey:\n                // datatypekey depends on sensor_id having a placeholder value\n                return editingAlert[AirQualityAlertKeys.sensor_id] === getAlertDefaultPlaceholder(alertTypeKey)[AirQualityAlertKeys.sensor_id];\n\n            case AirQualityAlertKeys.child_alert:\n                // child_alert depends on has_child_alert being true\n                return editingAlert[AirQualityAlertKeys.has_child_alert] !== true;\n\n            default:\n                // all other fields depends on datatypekey having a placeholder value\n                return editingAlert[AirQualityAlertKeys.datatypekey] === getAlertDefaultPlaceholder(alertTypeKey)[AirQualityAlertKeys.datatypekey];\n        }\n    };\n\n    const displayHourPicker = () => {\n        switch (alertTypeKey) {\n            case AlertTypes.daily.id:\n                return (\n                    <SimplePicker\n                        icon={<AccessTimeIcon />}\n                        label={AlertTypes.daily.tableColumnHeader}\n                        value={editingAlert[AirQualityAlertKeys.minutespastmidnight]}\n                        options={HOURS}\n                        disabled={isDisabled(AirQualityAlertKeys.minutespastmidnight)}\n                        handleChange={(event) => {\n                            setEditingAlert({\n                                ...editingAlert,\n                                [AirQualityAlertKeys.minutespastmidnight]: event.target.value\n                            });\n                        }}\n                    />\n                );\n            case AlertTypes.threshold.id:\n                return (\n                    <Grid container columnSpacing={2} rowSpacing={0.5}>\n                        <Grid item xs={12} md={6}>\n                            <TimeRangeSelector\n                                value={editingAlert[AirQualityAlertKeys.time_range]}\n                                disabled={isDisabled(AirQualityAlertKeys.time_range)}\n                                handleChange={(newRange) => {\n                                    setEditingAlert({\n                                        ...editingAlert,\n                                        [AirQualityAlertKeys.time_range]: newRange\n                                    });\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} md={6}>\n                            <MaxOnceADayCheckbox\n                                value={editingAlert[AirQualityAlertKeys.max_once_a_day]}\n                                handleChange={(event) => {\n                                    setEditingAlert({\n                                        ...editingAlert,\n                                        [AirQualityAlertKeys.max_once_a_day]: event.target.checked\n                                    })\n                                }}\n                                disabled={isDisabled(AirQualityAlertKeys.max_once_a_day)}\n                            />\n                        </Grid>\n                    </Grid>\n                );\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <Stack\n            direction=\"column\"\n            gap={2}\n            mt={1}\n            width=\"100%\"\n        >\n            {\n                DialogData[crudType]?.contentText ?\n                    (\n                        <DialogContentText fontWeight=\"500\">\n                            {DialogData[crudType].contentText}\n                        </DialogContentText>\n                    ) : null\n            }\n\n            <Stack\n                direction=\"row\"\n                gap={1}\n                alignItems=\"center\"\n                mb={2}\n            >\n                <Switch\n                    size='small'\n                    checked={editingAlert[AirQualityAlertKeys.is_enabled]}\n                    onChange={(event) => {\n                        setEditingAlert({\n                            ...editingAlert,\n                            [AirQualityAlertKeys.is_enabled]: event.target.checked\n                        });\n                    }}\n                    disabled={isDisabled(AirQualityAlertKeys.is_enabled)}\n                />\n                <Typography\n                    fontWeight={500}\n                    color=\"text.secondary\"\n                >\n                    {returnFormattedStatusString(editingAlert)}\n                </Typography>\n            </Stack>\n\n            <Grid\n                container\n                columnSpacing={2}\n                alignItems=\"center\"\n            >\n                <Grid item xs={6}>\n                    <SimplePicker\n                        icon={<PlaceIcon />}\n                        label={SharedColumnHeader.location}\n                        value={editingAlert[AirQualityAlertKeys.sensor_id]}\n                        options={allSensorsOfSchool}\n                        disabled={isDisabled(AirQualityAlertKeys.sensor_id)}\n                        handleChange={(event) => {\n                            setEditingAlert({\n                                ...editingAlert,\n                                [AirQualityAlertKeys.sensor_id]: event.target.value,\n                                [AirQualityAlertKeys.datatypekey]: ''\n                            });\n                        }}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <SimplePicker\n                        label={SharedColumnHeader.dataType}\n                        value={editingAlert[AirQualityAlertKeys.datatypekey]}\n                        options={allowedDataTypesForSensor}\n                        disabled={isDisabled(AirQualityAlertKeys.datatypekey)}\n                        handleChange={(event) => {\n                            const selectedDataTypeKey = event.target.value;\n                            const dataType = DataTypes[selectedDataTypeKey];\n\n                            // After data type is determined, set the threshold value to defaultValueForAlert\n                            setEditingAlert({\n                                ...editingAlert,\n                                [AirQualityAlertKeys.datatypekey]: selectedDataTypeKey,\n                                [AirQualityAlertKeys.threshold_value]: theme.palette.chart.colorAxes[dataType.color_axis]?.defaultValueForAlert,\n                                [AirQualityAlertKeys.child_alert]: {\n                                    ...editingAlert[AirQualityAlertKeys.child_alert],\n                                    [AirQualityAlertKeys.threshold_value]: theme.palette.chart.colorAxes[dataType.color_axis]?.defaultValueForChildAlert\n                                }\n                            });\n                        }}\n                        flex={1}\n                    />\n                </Grid>\n            </Grid>\n\n            <DateSelector\n                daysOfWeek={editingAlert[AirQualityAlertKeys.days_of_week]}\n                excludedDates={editingAlert[AirQualityAlertKeys.excluded_dates] || []}\n                disabled={isDisabled(AirQualityAlertKeys.days_of_week)}\n                handleDaysOfWeekChange={(_, newValue) => {\n                    const validDaysOfWeek = Array.isArray(newValue) ? newValue : [];\n\n                    setEditingAlert({\n                        ...editingAlert,\n                        [AirQualityAlertKeys.days_of_week]: validDaysOfWeek.sort()\n                    });\n                }}\n                handleExcludedDatesChange={(valueArray) => {\n                    // Get the current excluded dates or initialize as an empty array\n                    const currentExcludedDates = editingAlert[AirQualityAlertKeys.excluded_dates] || [];\n\n                    // Create a new array that updates the excluded dates\n                    const updatedExcludedDates = valueArray.reduce((acc, date) => {\n                        // Check if the date is already excluded\n                        if (acc.includes(date)) {\n                            // If it exists, filter it out (remove the date)\n                            return acc.filter(excludedDate => excludedDate !== date);\n                        } else {\n                            // If it doesn't exist, add the date to the array\n                            return [...acc, date];\n                        }\n                    }, currentExcludedDates); // Start with the current excluded dates\n\n                    // Update the state with the new excluded_dates array\n                    setEditingAlert({\n                        ...editingAlert,\n                        [AirQualityAlertKeys.excluded_dates]: updatedExcludedDates\n                    });\n                }}\n            />\n\n\n            {displayHourPicker(alertTypeKey)}\n\n            {alertTypeKey === AlertTypes.threshold.id ?\n                (\n                    <Grid container alignItems=\"start\" spacing={2}>\n                        <Grid container item xs={12} sm={6}>\n                            <Grid item xs={12}>\n                                <Typography\n                                    variant='body1'\n                                    fontWeight={500}\n                                    color=\"text.secondary\"\n                                    sx={{ mt: \"2px\", mb: \"12px\" }} // absolute value to align with the other side\n                                >\n                                    1. Alert if it is:\n                                </Typography>\n                            </Grid>\n\n                            <Grid item sx={{ mr: 2 }}>\n                                <ThresholdTypeToggle\n                                    currentAlertType={editingAlert[AirQualityAlertKeys.alert_type]}\n                                    handleChange={(event) => {\n                                        const selectedAlertType = event.target.value;\n                                        const oppositeAlertTypeForChildAlert = selectedAlertType === ThresholdAlertTypes.above_threshold.id\n                                            ? ThresholdAlertTypes.below_threshold.id\n                                            : ThresholdAlertTypes.above_threshold.id;\n\n                                        setEditingAlert({\n                                            ...editingAlert,\n                                            [AirQualityAlertKeys.alert_type]: selectedAlertType,\n                                            [AirQualityAlertKeys.child_alert]: {\n                                                ...editingAlert[AirQualityAlertKeys.child_alert],\n                                                [AirQualityAlertKeys.alert_type]: oppositeAlertTypeForChildAlert\n                                            }\n                                        });\n                                    }}\n                                    disabled={isDisabled(AirQualityAlertKeys.alert_type)}\n                                    sx={{\n                                        height: \"100%\"\n                                    }}\n                                />\n                            </Grid>\n\n                            <ThresholdComponentWrapper\n                                value={editingAlert[AirQualityAlertKeys.threshold_value]}\n                                invertSelection={editingAlert[AirQualityAlertKeys.alert_type] === ThresholdAlertTypes.below_threshold.id}\n                                handleValueChange={(value) => {\n                                    setEditingAlert({\n                                        ...editingAlert,\n                                        [AirQualityAlertKeys.threshold_value]: value\n                                    });\n                                }}\n                                disabledToggle={isDisabled(AirQualityAlertKeys.alert_type)}\n                                disabledSlider={isDisabled(AirQualityAlertKeys.threshold_value)}\n                                placeholderValueBeforeDataTypeSelection={2 / 3}\n                            />\n\n                            <Grid item xs={12} mt={2}>\n                                <OptionalMessage\n                                    value={editingAlert[AirQualityAlertKeys.message]}\n                                    handleChange={(event) => {\n                                        setEditingAlert({\n                                            ...editingAlert,\n                                            [AirQualityAlertKeys.message]: event.target.value\n                                        });\n                                    }}\n                                    maxLength={200}\n                                    label=\"Optional Message for Main Alert\"\n                                    disabled={isDisabled(AirQualityAlertKeys.message)}\n                                />\n                            </Grid>\n\n                        </Grid>\n                        <Grid container item xs={12} sm={6}>\n                            <Grid item xs={12}>\n                                <FormGroup>\n                                    <FormControlLabel\n                                        disabled={isDisabled(AirQualityAlertKeys.has_child_alert)}\n                                        control={\n                                            <Checkbox\n                                                checked={!!editingAlert[AirQualityAlertKeys.has_child_alert]} // fallback in case undefined in first render\n                                                onChange={(event) => {\n                                                    setEditingAlert({\n                                                        ...editingAlert,\n                                                        [AirQualityAlertKeys.has_child_alert]: event.target.checked\n                                                    });\n                                                }}\n                                                size=\"small\"\n                                            />\n                                        }\n                                        label={\n                                            <Typography\n                                                variant={'body1'}\n                                                fontWeight={500}\n                                                color=\"text.secondary\"\n                                            >\n                                                2. [Optional] Follow-up alert if it changes to:\n                                            </Typography>\n                                        }\n                                        color=\"text.secondary\"\n                                    />\n                                </FormGroup>\n                            </Grid>\n\n                            {\n                                editingAlert[AirQualityAlertKeys.child_alert] && (\n                                    <>\n                                        <Grid item sx={{ mr: 2 }}>\n                                            <ThresholdType\n                                                currentAlertType={editingAlert[AirQualityAlertKeys.child_alert]?.[AirQualityAlertKeys.alert_type]}\n                                                sx={{\n                                                    height: \"100%\"\n                                                }}\n                                            />\n                                        </Grid>\n\n                                        <ThresholdComponentWrapper\n                                            value={editingAlert[AirQualityAlertKeys.child_alert][AirQualityAlertKeys.threshold_value]}\n                                            invertSelection={editingAlert[AirQualityAlertKeys.child_alert]?.[AirQualityAlertKeys.alert_type] === ThresholdAlertTypes.below_threshold.id || true}\n                                            handleValueChange={(value) => {\n                                                setEditingAlert({\n                                                    ...editingAlert,\n                                                    [AirQualityAlertKeys.child_alert]: {\n                                                        ...editingAlert[AirQualityAlertKeys.child_alert],\n                                                        [AirQualityAlertKeys.threshold_value]: value\n                                                    }\n                                                });\n                                            }}\n                                            disabledToggle={isDisabled(AirQualityAlertKeys.child_alert)}\n                                            disabledSlider={isDisabled(AirQualityAlertKeys.child_alert)}\n                                            showTip={false}\n                                            placeholderValueBeforeDataTypeSelection={1 / 3}\n                                        />\n\n                                        <Grid item xs={12} mt={2}>\n                                            <OptionalMessage\n                                                value={editingAlert[AirQualityAlertKeys.child_alert][AirQualityAlertKeys.message]}\n                                                handleChange={(event) => {\n                                                    setEditingAlert({\n                                                        ...editingAlert,\n                                                        [AirQualityAlertKeys.child_alert]: {\n                                                            ...editingAlert[AirQualityAlertKeys.child_alert],\n                                                            [AirQualityAlertKeys.message]: event.target.value\n                                                        }\n                                                    });\n                                                }}\n                                                maxLength={200}\n                                                label=\"Optional Message for Follow-up Alert\"\n                                                showTip={false}\n                                                disabled={isDisabled(AirQualityAlertKeys.child_alert)}\n                                            />\n                                        </Grid>\n                                    </>\n                                )\n                            }\n                        </Grid>\n                    </Grid>\n\n                ) : (\n                    <OptionalMessage\n                        value={editingAlert[AirQualityAlertKeys.message]}\n                        handleChange={(event) => {\n                            setEditingAlert({\n                                ...editingAlert,\n                                [AirQualityAlertKeys.message]: event.target.value\n                            });\n                        }}\n                        maxLength={200}\n                        disabled={isDisabled(AirQualityAlertKeys.message)}\n                    />\n                )}\n        </Stack>\n    );\n}","import { Button, Dialog, DialogTitle, DialogActions, DialogContent, Stack, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material';\nimport AlertTypes, { ThresholdAlertTypes } from '../AlertTypes';\nimport { CrudTypes } from '../Utils';\n\nimport { AirQualityAlertKeys, getAlertDefaultPlaceholder, useAirQualityAlert } from '../../../../ContextProviders/AirQualityAlertContext';\n\nimport { useContext, useEffect, useState } from 'react';\nimport { DashboardContext } from '../../../../ContextProviders/DashboardContext';\nimport { fetchDataFromURL } from '../../../../API/ApiFetch';\nimport { RESTmethods } from \"../../../../API/Utils\";\nimport { getAlertsApiUrl } from '../../../../API/ApiUrls';\nimport { GeneralAPIendpoints } from \"../../../../API/Utils\";\n\nimport { SnackbarMetadata } from '../../../../Utils/SnackbarMetadata';\n\nimport isEqual from 'lodash.isequal';\nimport AlertDeletionDialog from './AlertDeletionDialog';\nimport { useSnackbar } from 'notistack';\n\nimport { DialogData } from './DialogData';\nimport { AlertPropertyComponents } from './AlertPropertyComponents/AlertPropertyComponents';\n\nconst AlertModificationDialog = (props) => {\n  const {\n    alertTypeKey,\n    openAlertModificationDialog,\n    crudType,\n    handleClose\n  } = props;\n\n  const { currentSchoolID } = useContext(DashboardContext);\n\n  const { selectedAlert, setSelectedAlert, editingAlert, setEditingAlert, setAlerts, addChildToAlerts } = useAirQualityAlert();\n\n  const [shouldDisableButton, setShouldDisableButton] = useState(false);\n\n  const { enqueueSnackbar } = useSnackbar()\n\n  const theme = useTheme();\n\n  const sanityCheckAlertBeforeSaving = () => {\n    if (alertTypeKey === AlertTypes.daily.id) return { valid: true };\n\n    if (!editingAlert[AirQualityAlertKeys.has_child_alert]) return { valid: true };\n\n    const isAbove = editingAlert[AirQualityAlertKeys.alert_type] === ThresholdAlertTypes.above_threshold.id;\n    const threshold = editingAlert[AirQualityAlertKeys.threshold_value];\n    const childThreshold = editingAlert[AirQualityAlertKeys.child_alert]?.[AirQualityAlertKeys.threshold_value];\n\n    if (childThreshold === undefined) return { valid: true };\n\n    if (\n      (isAbove && threshold <= childThreshold) ||\n      (!isAbove && threshold >= childThreshold)\n    ) {\n      return {\n        valid: false,\n        message: `The follow-up alert must have a ${isAbove ? \"lower\" : \"higher\"} threshold than the first alert`\n      };\n    }\n\n    return { valid: true };\n  };\n\n  const removeChildAlertFromParentAlertBody = (body) => {\n    const newBody = { ...body };\n    delete newBody[AirQualityAlertKeys.child_alert];\n    delete newBody[AirQualityAlertKeys.has_child_alert];\n    console.log(newBody)\n    return newBody;\n  }\n\n  const formatChildAlertBody = (body, parent_alert_id) => {\n    const newBody = {\n      ...body, // copy all properties from parent\n      ...body[AirQualityAlertKeys.child_alert], // but then, override with child's unique properties\n      [AirQualityAlertKeys.parent_alert_id]: parent_alert_id, // finally, link child to parent\n      [AirQualityAlertKeys.id]: null // destroy parent's id just in case\n    };\n    delete newBody[AirQualityAlertKeys.child_alert];\n    delete newBody[AirQualityAlertKeys.has_child_alert];\n\n    return newBody;\n  };\n\n  const handleAlertModification = ({ passedCrudType }) => {\n    const handleFetchError = (error) => {\n      enqueueSnackbar(DialogData[passedCrudType].errorMessage, SnackbarMetadata.error);\n    };\n\n    const handleFetchSuccess = () => {\n      enqueueSnackbar(DialogData[passedCrudType].successMessage, SnackbarMetadata.success);\n      handleClose();\n    }\n\n    switch (passedCrudType) {\n      case CrudTypes.add: {\n        const result = sanityCheckAlertBeforeSaving();\n        if (!result.valid) {\n          enqueueSnackbar(result.message, SnackbarMetadata.error);\n          return;\n        }\n\n        // 1. POST to create the main alert (always run)\n        fetchDataFromURL({\n          url: getAlertsApiUrl({\n            endpoint: GeneralAPIendpoints.alerts,\n            school_id: currentSchoolID\n          }),\n          restMethod: RESTmethods.POST,\n          body: removeChildAlertFromParentAlertBody(editingAlert)\n        }).then((createdAlert) => {\n          setAlerts(prevAlerts => {\n            const updatedAlerts = [...prevAlerts, createdAlert];\n            return addChildToAlerts(updatedAlerts);\n          });\n          handleFetchSuccess();\n\n          const placeholder = getAlertDefaultPlaceholder(alertTypeKey);\n          setSelectedAlert(placeholder);\n          setEditingAlert(placeholder);\n\n          // 2. POST for child alert associated with this main alert (only if it exists)\n          if (!editingAlert[AirQualityAlertKeys.has_child_alert]) return;\n\n          const parent_alert_id = createdAlert[AirQualityAlertKeys.id];\n          if (parent_alert_id === null || parent_alert_id === undefined) return;\n\n          fetchDataFromURL({\n            url: getAlertsApiUrl({\n              endpoint: GeneralAPIendpoints.alerts,\n              school_id: currentSchoolID\n            }),\n            restMethod: RESTmethods.POST,\n            body: formatChildAlertBody(editingAlert, parent_alert_id)\n          }).then((createdChildAlert) => {\n            setAlerts(prevAlerts => {\n              const updatedAlerts = [...prevAlerts, createdChildAlert];\n              return addChildToAlerts(updatedAlerts);\n            });\n          }).catch((childError) => handleFetchError(childError));\n\n        }).catch((error) => handleFetchError(error));\n\n        break;\n      }\n      case CrudTypes.edit: {\n        const result = sanityCheckAlertBeforeSaving();\n        if (!result.valid) {\n          enqueueSnackbar(result.message, SnackbarMetadata.error);\n          return;\n        }\n\n        // 1. PUT to modify the main alert (always run)\n        const alert_id = selectedAlert[AirQualityAlertKeys.id];\n        fetchDataFromURL({\n          url: getAlertsApiUrl({\n            endpoint: GeneralAPIendpoints.alerts,\n            school_id: currentSchoolID,\n            alert_id: alert_id\n          }),\n          restMethod: RESTmethods.PUT,\n          body: removeChildAlertFromParentAlertBody(editingAlert)\n        }).then((updatedAlert) => {\n          setAlerts(prevAlerts => {\n            const updatedAlerts = prevAlerts.map(alert =>\n              alert.id === alert_id ? updatedAlert : alert\n            );\n            return addChildToAlerts(updatedAlerts);\n          });\n          handleFetchSuccess();\n\n          // 2. Editing for child alert associated with this main alert\n          const child_alert_id = editingAlert[AirQualityAlertKeys.child_alert]?.[AirQualityAlertKeys.id];\n          // 2.1. There should NOT be child alert\n          if (!editingAlert[AirQualityAlertKeys.has_child_alert]) {\n            // If child alert existed before but now is removed, then trigger deletion\n            if (child_alert_id !== null && child_alert_id !== undefined) {\n              fetchDataFromURL({\n                url: getAlertsApiUrl({\n                  endpoint: GeneralAPIendpoints.alerts,\n                  school_id: currentSchoolID,\n                  alert_id: child_alert_id\n                }),\n                restMethod: RESTmethods.DELETE\n              }).then(() => {\n                setAlerts(prevAlerts => {\n                  const updatedAlerts = prevAlerts.filter(alert => alert.id !== child_alert_id)\n                  return addChildToAlerts(updatedAlerts);\n                });\n                handleFetchSuccess();\n              }).catch((error) => handleFetchError(error));\n            }\n          }\n          // 2.2. There should be child alert\n          else {\n            // 2.2.1. If there is no child alert id before, create one\n            if (child_alert_id === null || child_alert_id === undefined) {\n              fetchDataFromURL({\n                url: getAlertsApiUrl({\n                  endpoint: GeneralAPIendpoints.alerts,\n                  school_id: currentSchoolID\n                }),\n                restMethod: RESTmethods.POST,\n                body: formatChildAlertBody(editingAlert, alert_id)\n              }).then((createdChildAlert) => {\n                setAlerts(prevAlerts => {\n                  const updatedAlerts = [...prevAlerts, createdChildAlert];\n                  return addChildToAlerts(updatedAlerts);\n                });\n              }).catch((childError) => handleFetchError(childError));\n            }\n\n            // 2.2.2. Else, update that child alert\n            else {\n              fetchDataFromURL({\n                url: getAlertsApiUrl({\n                  endpoint: GeneralAPIendpoints.alerts,\n                  school_id: currentSchoolID,\n                  alert_id: child_alert_id\n                }),\n                restMethod: RESTmethods.PUT,\n                body: formatChildAlertBody(editingAlert, alert_id)\n              }).then((updatedChildAlert) => {\n                setAlerts(prevAlerts => {\n                  const updatedAlerts = prevAlerts.map(alert =>\n                    alert.id === child_alert_id ? updatedChildAlert : alert\n                  );\n\n                  return addChildToAlerts(updatedAlerts);\n                });\n              }).catch((childError) => handleFetchError(childError));\n            }\n          }\n\n        }).catch((error) => handleFetchError(error));\n\n        break;\n      }\n      case CrudTypes.delete:\n        fetchDataFromURL({\n          url: getAlertsApiUrl({\n            endpoint: GeneralAPIendpoints.alerts,\n            school_id: currentSchoolID,\n            alert_id: selectedAlert.id\n          }),\n          restMethod: RESTmethods.DELETE\n        }).then(() => {\n          setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== selectedAlert.id));\n          handleFetchSuccess();\n        }).catch((error) => handleFetchError(error));\n\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Disable / Enable save button depends on context\n  useEffect(() => {\n    switch (crudType) {\n      case CrudTypes.add:\n        const placeholder = getAlertDefaultPlaceholder(alertTypeKey);\n\n        if (editingAlert[AirQualityAlertKeys.sensor_id] === placeholder[AirQualityAlertKeys.sensor_id] ||\n          editingAlert[AirQualityAlertKeys.datatypekey] === placeholder[AirQualityAlertKeys.datatypekey]) {\n          if (alertTypeKey === AlertTypes.daily.id) {\n            setShouldDisableButton(editingAlert[AirQualityAlertKeys.minutespastmidnight] === placeholder[AirQualityAlertKeys.minutespastmidnight]);\n          } else {\n            setShouldDisableButton(true);\n          }\n        } else {\n          if (alertTypeKey === AlertTypes.daily.id) {\n            setShouldDisableButton(editingAlert[AirQualityAlertKeys.minutespastmidnight] === placeholder[AirQualityAlertKeys.minutespastmidnight]);\n          } else {\n            setShouldDisableButton(false);\n          }\n        }\n        break;\n\n      case CrudTypes.edit:\n        // Case empty editing value\n        let alertVal;\n        if (alertTypeKey === AlertTypes.daily.id) {\n          alertVal = editingAlert[AirQualityAlertKeys.minutespastmidnight]\n        } else {\n          alertVal = editingAlert[AirQualityAlertKeys.threshold_value]\n        }\n        const datatypeKeyVal = editingAlert[AirQualityAlertKeys.datatypekey];\n\n        if (!alertVal || alertVal === '' || !datatypeKeyVal || datatypeKeyVal === '') {\n          setShouldDisableButton(true);\n          break;\n        }\n\n        setShouldDisableButton(isEqual(selectedAlert, editingAlert));\n        break;\n      default:\n        setShouldDisableButton(false);\n        break;\n    }\n  }, [crudType, selectedAlert, editingAlert, alertTypeKey]);\n\n  const smallScreen = useMediaQuery((theme) => theme.breakpoints.down('md'));\n\n  return (\n    <Dialog\n      open={openAlertModificationDialog}\n      onClose={handleClose}\n      aria-labelledby=\"alert-modification-dialog\"\n      maxWidth=\"md\"\n      fullWidth\n      fullScreen={smallScreen}\n    >\n      <DialogTitle id=\"alert-modification-dialog\">\n        {DialogData[crudType]?.title}\n      </DialogTitle>\n\n      <DialogContent>\n        <AlertPropertyComponents\n          alertTypeKey={alertTypeKey}\n          crudType={crudType}\n        />\n      </DialogContent>\n      <DialogActions sx={{\n        justifyContent: \"space-between\"\n      }}>\n        {\n          crudType === CrudTypes.edit ? (\n            <AlertDeletionDialog\n              onConfirmedDelete={() => {\n                handleAlertModification({ passedCrudType: CrudTypes.delete })\n              }}\n            />\n          ) : null\n        }\n\n        <Stack direction=\"row\" width=\"100%\" justifyContent=\"end\">\n          <Button\n            onClick={handleClose}\n            sx={{\n              color: theme.palette.text.secondary\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              handleAlertModification({ passedCrudType: crudType });\n            }}\n            color=\"primary\"\n            disabled={shouldDisableButton}\n          >\n            Save Edit\n          </Button>\n        </Stack>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AlertModificationDialog;\n\n\n","import { useContext, useState } from 'react';\nimport { Box, Button, IconButton, Stack, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, Alert, Grow, Switch, Chip } from '@mui/material';\n\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddAlarmIcon from '@mui/icons-material/AddAlarm';\n\nimport { useTheme } from '@mui/material';\nimport { AirQualityAlertKeys, getAlertDefaultPlaceholder, useAirQualityAlert } from '../../../ContextProviders/AirQualityAlertContext';\n\nimport AlertTypes from './AlertTypes';\nimport { ThresholdAlertTypes } from './AlertTypes';\n\nimport { isValidArray } from '../../../Utils/UtilFunctions';\nimport AlertModificationDialog from './AlertModificationDialog/AlertModificationDialog';\n\nimport { returnHoursFromMinutesPastMidnight, CrudTypes, SharedColumnHeader } from './Utils';\nimport { TransitionGroup } from 'react-transition-group';\n\nimport { fetchDataFromURL } from '../../../API/ApiFetch';\nimport { GeneralAPIendpoints, RESTmethods } from '../../../API/Utils';\nimport { DashboardContext } from '../../../ContextProviders/DashboardContext';\nimport { SnackbarMetadata } from '../../../Utils/SnackbarMetadata';\nimport { getAlertsApiUrl } from '../../../API/ApiUrls';\nimport { useSnackbar } from 'notistack';\nimport { UserRoles } from '../../Account/Utils';\nimport { DataTypes } from '../../../Utils/AirQuality/DataTypes';\nimport { DAYS_OF_WEEK } from './AlertModificationDialog/AlertPropertyComponents/DAYS_OF_WEEK';\n\nconst returnDaysOfWeekString = (days_of_week) => {\n  if (!days_of_week || !isValidArray(days_of_week)) return \"N/A\";\n\n  // Case where all days are selected\n  if (days_of_week.length === DAYS_OF_WEEK.length) return \"Everyday\";\n\n  // Check if two days are missing and if both are weekend days\n  const missingDays = DAYS_OF_WEEK.filter(d => !days_of_week.includes(d.value));\n  if (missingDays.length === 2 && missingDays.every(d => [5, 6].includes(d.value))) {\n    return \"Only weekdays\";\n  }\n\n  // Default case: map the selected days to their short labels\n  return days_of_week\n    .map(day => DAYS_OF_WEEK.find(d => d.value === day)?.label.slice(0, 2))\n    .join(', ');\n};\n\nconst returnCreatedByString = (owner_role, self_is_owner) => {\n  if (self_is_owner === true) return \"You\";\n\n  if (owner_role) return UserRoles[owner_role].name;\n  else return \"N/A\";\n}\n\nconst returnAlertNotModifiableString = (owner_role, is_allowed_to_modify) => {\n  if (is_allowed_to_modify) return \"\";\n\n  if (owner_role && UserRoles[owner_role]) {\n    return `${UserRoles[owner_role].name} added your email to this school-wide alert. For edit or removal, please reach out to ${UserRoles[owner_role].name}.`;\n  }\n};\n\nconst AlertsTable = (props) => {\n  const { selectedAlert, setSelectedAlert, setAlerts, addChildToAlerts } = useAirQualityAlert();\n  const { currentSchoolID } = useContext(DashboardContext);\n  const { enqueueSnackbar } = useSnackbar()\n\n  const { alertTypeKey, alertsForTable } = props;\n\n  const theme = useTheme();\n\n  const [openAlertModificationDialog, setOpenAlertModificationDialog] = useState(false);\n  const [crudType, setCrudType] = useState(null);\n\n  const handleModifyClick = ({ alert, crudType }) => {\n    setSelectedAlert(alert);\n    setCrudType(crudType);\n    setOpenAlertModificationDialog(true);\n  };\n\n  const handleClose = () => {\n    setOpenAlertModificationDialog(false);\n    setSelectedAlert(getAlertDefaultPlaceholder(alertTypeKey));\n  }\n\n  const handleEnableClick = ({ alert }) => {\n    const currentIsEnabled = alert[AirQualityAlertKeys.is_enabled];\n    const newIsEnabled = !currentIsEnabled;\n\n    fetchDataFromURL({\n      url: getAlertsApiUrl({\n        endpoint: GeneralAPIendpoints.alerts,\n        school_id: currentSchoolID,\n        alert_id: alert[AirQualityAlertKeys.id]\n      }),\n      restMethod: RESTmethods.PUT,\n      body: {\n        ...alert,\n        [AirQualityAlertKeys.is_enabled]: newIsEnabled\n      }\n    }).then((data) => {\n      setAlerts(prevAlerts => {\n        const updatedAlerts = prevAlerts.map(prevAlert =>\n          prevAlert[AirQualityAlertKeys.id] === alert[AirQualityAlertKeys.id] ? data : prevAlert\n        )\n        return addChildToAlerts(updatedAlerts);\n      }\n      );\n      enqueueSnackbar(`This alert will be ${newIsEnabled ? \"enabled\" : \"disabled\"}`, SnackbarMetadata.success);\n    }).catch((error) => {\n      enqueueSnackbar(error.message || `There was an error ${newIsEnabled ? \"enabling\" : \"disabling\"} this alert, try again!`, SnackbarMetadata.error);\n    });\n  }\n\n  return (\n    <>\n      <Stack spacing={2} alignItems=\"center\">\n        <Box sx={{ width: \"100%\", overflowX: 'auto' }}>\n          {\n            isValidArray(alertsForTable) ?\n              (\n                <Table size=\"small\" sx={{ my: 1 }}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ px: 0 }} />\n\n                      <TableCell>\n                        {SharedColumnHeader.location}\n                      </TableCell>\n\n                      <TableCell>\n                        {SharedColumnHeader.dataType}\n                      </TableCell>\n\n                      <TableCell>\n                        {SharedColumnHeader.selectedDaysOfWeek}\n                      </TableCell>\n\n                      <TableCell>\n                        {AlertTypes[alertTypeKey]?.tableColumnHeader || \"\"}\n                      </TableCell>\n\n                      <TableCell>\n                        {SharedColumnHeader.createdBy}\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n\n                  <TransitionGroup component={TableBody}>\n                    {isValidArray(alertsForTable) ? alertsForTable.map((alert, index) => (\n                      <Grow key={index}>\n                        <TableRow\n                          sx={{\n                            background: alert[AirQualityAlertKeys.id] === selectedAlert[AirQualityAlertKeys.id] && theme.palette.background.NYUpurpleLight,\n                            textDecoration: alert[AirQualityAlertKeys.is_enabled] === false ? \"line-through\" : \"none\"\n                          }}\n                        >\n                          <TableCell sx={{ px: 0 }}>\n                            <Tooltip\n                              title={\n                                alert[AirQualityAlertKeys.is_allowed_to_modify] === false\n                                  ? returnAlertNotModifiableString(alert[AirQualityAlertKeys.owner_role], alert[AirQualityAlertKeys.is_allowed_to_modify])\n                                  : `Click to ${alert[AirQualityAlertKeys.is_enabled] ? \"disable\" : \"enable\"} alert`\n                              }\n                            >\n                              {/* Wrap <Switch> in a <span> so that <Tooltip> will still display even if it's disabled */}\n                              <span\n                                onClick={() => {\n                                  if (alert[AirQualityAlertKeys.is_allowed_to_modify] === false) {\n                                    enqueueSnackbar(\n                                      returnAlertNotModifiableString(alert[AirQualityAlertKeys.owner_role], alert[AirQualityAlertKeys.is_allowed_to_modify]),\n                                      SnackbarMetadata.warning\n                                    );\n                                    return;\n                                  }\n                                  handleEnableClick({ alert });\n                                }}\n                                style={{ display: 'inline-block' }}\n                              >\n                                <Switch\n                                  size='small'\n                                  disabled={alert[AirQualityAlertKeys.is_allowed_to_modify] === false}\n                                  checked={alert[AirQualityAlertKeys.is_enabled]}\n                                />\n                              </span>\n                            </Tooltip>\n\n                            <Tooltip\n                              title={\n                                alert[AirQualityAlertKeys.is_allowed_to_modify] === false\n                                  ? returnAlertNotModifiableString(alert[AirQualityAlertKeys.owner_role], alert[AirQualityAlertKeys.is_allowed_to_modify])\n                                  : `Edit alert`\n                              }\n                            >\n                              <span\n                                onClick={() => {\n                                  if (alert[AirQualityAlertKeys.is_allowed_to_modify] === false) {\n                                    enqueueSnackbar(\n                                      returnAlertNotModifiableString(alert[AirQualityAlertKeys.owner_role], alert[AirQualityAlertKeys.is_allowed_to_modify]),\n                                      SnackbarMetadata.warning\n                                    );\n                                    return;\n                                  }\n                                  handleModifyClick({ alert, crudType: CrudTypes.edit })\n                                }}\n                                style={{ display: 'inline-block' }}\n                              >\n                                <IconButton\n                                  aria-label=\"edit\"\n                                  size=\"small\"\n                                  disabled={alert[AirQualityAlertKeys.is_allowed_to_modify] === false}\n                                  sx={{ \"&:hover,:focus\": { color: theme.palette.primary.main } }}\n                                >\n                                  <EditIcon />\n                                </IconButton>\n                              </span>\n                            </Tooltip>\n                          </TableCell>\n\n                          <TableCell sx={{ textTransform: 'capitalize' }}>\n                            {alert[AirQualityAlertKeys.location_short]}\n                          </TableCell>\n\n                          <TableCell>\n                            {\n                              Object.keys(DataTypes)\n                                .filter(key => key === alert[AirQualityAlertKeys.datatypekey])\n                                .map(key => DataTypes[key].name_title)[0]\n                            }\n                          </TableCell>\n\n                          <TableCell>\n                            {returnDaysOfWeekString(alert[AirQualityAlertKeys.days_of_week])}\n                          </TableCell>\n\n                          {alertTypeKey === AlertTypes.threshold.id ? (\n                            <TableCell>\n                              {ThresholdAlertTypes[alert[AirQualityAlertKeys.alert_type]].sign} {alert[AirQualityAlertKeys.threshold_value]}\n                              &nbsp;\n                              {\n                                Object.keys(DataTypes)\n                                  .filter(key => key === alert[AirQualityAlertKeys.datatypekey])\n                                  .map(key => DataTypes[key].unit)[0]\n                              }\n                            </TableCell>\n                          ) : null}\n\n                          {alertTypeKey === AlertTypes.daily.id ? (\n                            <TableCell>\n                              {returnHoursFromMinutesPastMidnight(alert[AirQualityAlertKeys.minutespastmidnight])}\n                            </TableCell>\n                          ) : null}\n\n                          <TableCell>\n                            <Chip\n                              label={\n                                returnCreatedByString(\n                                  alert[AirQualityAlertKeys.owner_role],\n                                  alert[AirQualityAlertKeys.self_is_owner]\n                                )\n                              }\n                              size='small'\n                            />\n                          </TableCell>\n                        </TableRow>\n                      </Grow>\n                    )) : null\n                    }\n                  </TransitionGroup>\n                </Table>\n              ) : (\n                <Alert\n                  severity='warning'\n                  sx={{\n                    mt: 2\n                  }}>\n                  No {AlertTypes[alertTypeKey].name.toLowerCase()} alert has been set up\n                </Alert>\n              )\n          }\n        </Box>\n\n        <Button\n          variant=\"outlined\"\n          startIcon={<AddAlarmIcon />}\n          fullWidth\n          sx={{ maxWidth: \"sm\", textTransform: 'uppercase' }}\n          onClick={() => handleModifyClick({\n            alert: getAlertDefaultPlaceholder(alertTypeKey), crudType: CrudTypes.add\n          })}\n        >\n          Add Alert\n        </Button>\n      </Stack>\n\n      <AlertModificationDialog\n        alertTypeKey={alertTypeKey}\n        crudType={crudType}\n        openAlertModificationDialog={openAlertModificationDialog}\n        handleClose={handleClose}\n      />\n    </>\n  );\n};\n\nexport default AlertsTable;","import { useState } from 'react';\nimport { Box, Tab, useMediaQuery } from '@mui/material';\n\nimport StyledTabs from '../../StyledTabs';\nimport AlertsTable from './AlertsTable';\n\nimport { AirQualityAlertKeys, getAlertDefaultPlaceholder, useAirQualityAlert } from '../../../ContextProviders/AirQualityAlertContext';\nimport AlertTypes from './AlertTypes';\nimport { isValidArray } from '../../../Utils/UtilFunctions';\n\nfunction AlertTab(props) {\n  const { children, value, index, alertType, alertsArray, ...other } = props;\n\n  return (\n    <Box\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`alert-tabpanel-${alertType.id}`}\n      aria-labelledby={`alert-tab-${alertType.id}`}\n      width=\"100%\"\n      {...other}\n    >\n      <AlertsTable\n        alertTypeKey={alertType.id}\n        alertsForTable={alertsArray}\n      />\n    </Box>\n  );\n}\n\nexport default function AlertsTabs() {\n  const smallScreen = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const { setSelectedAlert } = useAirQualityAlert();\n\n  const handleTabChange = (_, newVal) => {\n    setCurrentTab(newVal);\n    setSelectedAlert(\n      getAlertDefaultPlaceholder(AlertTypes[Object.keys(AlertTypes)?.[newVal]]?.id)\n    );\n  };\n\n  const { alerts } = useAirQualityAlert();\n\n  // Helper function to return filered alert:\n  // - based on alert_type (threshold or daily, depends on which alert tab is visible)\n  // - only return alert that is not child to another alert\n  const returnFilteredAlerts = (alertTypeKey) => {\n    const filteredAlerts = alerts.filter((alert) => {\n      if (!alert) return null;\n\n      const alertType = alert[AirQualityAlertKeys.alert_type]?.toLowerCase();\n      const parentAlertId = alert[AirQualityAlertKeys.parent_alert_id];\n\n      if (alertType.includes(alertTypeKey) && (parentAlertId === null || parentAlertId === undefined)) return alert;\n      else return null;\n    });\n\n    const alertsLength = isValidArray(filteredAlerts) ? filteredAlerts.length : \"0\";\n\n    return {\n      array: filteredAlerts,\n      alertsLength\n    }\n  }\n\n  return (\n    <Box>\n      <StyledTabs\n        value={currentTab}\n        onChange={handleTabChange}\n        variant={smallScreen ? 'fullWidth' : 'standard'}\n        smallFontSize=\"0.825rem\"\n      >\n        {Object.values(AlertTypes).map((type) => {\n          const filteredAlerts = returnFilteredAlerts(type.id);\n          return (\n            <Tab\n              key={type.id}\n              value={type.index}\n              icon={type.icon}\n              label={`${type.name} (${filteredAlerts?.alertsLength})`}\n              iconPosition=\"start\"\n              sx={{ py: 0 }}\n            />\n          )\n        }\n        )}\n      </StyledTabs>\n\n      {Object.values(AlertTypes).map((type) => {\n        const filteredAlerts = returnFilteredAlerts(type.id);\n        return (\n          <AlertTab\n            key={type.id}\n            alertType={type}\n            value={currentTab}\n            index={type.index}\n            alertsArray={filteredAlerts.array}\n          />\n        )\n      }\n      )}\n    </Box>\n  );\n}\n","import { Stack, Typography } from '@mui/material';\nimport NotificationImportantIcon from '@mui/icons-material/NotificationImportant';\n\nimport CustomDialog from '../../CustomDialog/CustomDialog';\nimport EmailsInput from './EmailsInput';\nimport AlertsTabs from './AlertsTabs';\nimport { useAirQualityAlert } from '../../../ContextProviders/AirQualityAlertContext';\nimport useLoginHandler from '../../Account/useLoginHandler';\nimport { useContext } from 'react';\nimport { UserContext } from '../../../ContextProviders/UserContext';\nimport { UserRoles } from '../../Account/Utils';\n\n\nexport default function AirQualityAlerts({ onButtonClick }) {\n  const { handleRestrictedAccess } = useLoginHandler(onButtonClick);\n\n  const { fetchAlerts, hasFetchedAlerts, setHasFetchedAlerts } = useAirQualityAlert();\n\n  const { user } = useContext(UserContext);\n\n  const isModifiable = [UserRoles.admin.id, UserRoles.school.id].includes(user?.user_role);\n\n  return (\n    <CustomDialog\n      buttonIcon={<NotificationImportantIcon sx={{ fontSize: '1rem' }} />}\n      buttonLabel=\"Alerts\"\n      dialogTitle=\"Air quality alerts\"\n      dialogOpenHandler={(action) => {\n        const isLoggedIn = handleRestrictedAccess(action);\n        if (isLoggedIn && !hasFetchedAlerts) {\n          fetchAlerts();\n          setHasFetchedAlerts(true);\n        }\n      }}\n    >\n      <Stack width=\"100%\" spacing={isModifiable ? 5 : 2}>\n        <AlertsTabs />\n\n        {isModifiable ? <EmailsInput /> : (\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Alerts will be sent to your email address: <b>{user?.email}</b>\n          </Typography>\n        )}\n      </Stack>\n    </CustomDialog>\n  );\n}\n","import { useEffect, useRef, useCallback, useContext, useState } from \"react\";\nimport { AppRoutes } from \"../../Utils/AppRoutes\";\nimport { LoginTypes } from \"../Account/Utils\";\nimport { SnackbarMetadata } from '../../Utils/SnackbarMetadata';\nimport { UserContext } from \"../../ContextProviders/UserContext\";\nimport EmailVerificationDialog from \"./EmailVerificationDialog\";\nimport { useSnackbar } from \"notistack\";\n\nconst LoginPopupHandler = ({ onLoginSuccess, children }) => {\n    const popupRef = useRef(null);\n    const { enqueueSnackbar } = useSnackbar()\n    const { setAuthenticationState, setUser } = useContext(UserContext);\n\n    const [showVerificationDialog, setShowVerificationDialog] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const openLoginPopup = useCallback(() => {\n        const width = 500;\n        const height = 600;\n        const left = (window.screen.width - width) / 2;\n        const top = (window.screen.height - height) / 2;\n\n        const popup = window.open(\n            AppRoutes.login,\n            \"Login\",\n            `width=${width},height=${height},top=${top},left=${left}`\n        );\n\n        if (popup) {\n            popup.focus();\n            popupRef.current = popup;\n\n            const intervalId = setInterval(() => {\n                if (popup.closed) {\n                    clearInterval(intervalId);\n                    window.removeEventListener(\"message\", handleMessage);\n                    popupRef.current = null;\n                }\n            }, 500);\n        } else {\n            alert(\"Popup blocked. Please enable popups for login.\");\n        }\n    }, []);\n\n    const handleMessage = useCallback(\n        (event) => {\n            if (event.origin === window.location.origin && event.data.type === LoginTypes.password) {\n                if (event.data.success) {\n                    const user = event.data.user;\n\n                    setAuthenticationState({\n                        checkedAuthentication: true,\n                        authenticated: true,\n                    });\n                    setUser(user);\n\n                    if (user.message) {\n                        enqueueSnackbar(user.message, SnackbarMetadata.success);\n                    }\n\n                    if (user.is_verified === false) {\n                        setShowVerificationDialog(true);\n                        setEmail(user.email);\n                    }\n\n                    onLoginSuccess?.();\n                }\n            }\n        },\n        [onLoginSuccess]\n    );\n\n    useEffect(() => {\n        window.addEventListener(\"message\", handleMessage);\n        return () => {\n            window.removeEventListener(\"message\", handleMessage);\n        };\n    }, [handleMessage]);\n\n    return (\n        <>\n            {children({\n                openLoginPopup,\n            })}\n            <EmailVerificationDialog\n                open={showVerificationDialog}\n                email={email}\n            />\n        </>\n    );\n};\n\nexport default LoginPopupHandler;\n","import { Grid } from \"@mui/material\";\nimport ScreenDropDownMenu from \"../../Components/AirQuality/AirQualityScreen/ScreenDropDownMenu\";\nimport DatasetDownloadDialog from \"../../Components/DatasetDownload/DatasetDownloadDialog\";\nimport AirQualityAlerts from \"../../Components/AirQuality/AirQualityAlerts/AirQualityAlert\";\nimport LoginPopupHandler from \"../../Components/Account/LoginPopupHandler\";\nimport useLoginHandler from \"../../Components/Account/useLoginHandler\";\nimport { SnackbarMetadata } from \"../../Utils/SnackbarMetadata\";\nimport { AirQualityAlertProvider } from \"../../ContextProviders/AirQualityAlertContext\";\nimport { useSnackbar } from \"notistack\";\n\nconst ProjectReservedArea = () => {\n    const { loggedIn } = useLoginHandler();\n    const { enqueueSnackbar } = useSnackbar()\n\n    const handleLoginSuccess = () => {\n        enqueueSnackbar(\"You can now access TV Screens, Dataset, and Alerts.\", {\n            variant: SnackbarMetadata.success.name,\n            duration: SnackbarMetadata.success.duration * 2\n        });\n    };\n\n    return (\n        <LoginPopupHandler\n            onLoginSuccess={handleLoginSuccess}\n        >\n            {({ openLoginPopup }) => (\n                <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\n                    <Grid item>\n                        <ScreenDropDownMenu onButtonClick={loggedIn ? null : openLoginPopup} />\n                    </Grid>\n                    <Grid item>\n                        <DatasetDownloadDialog onButtonClick={loggedIn ? null : openLoginPopup} />\n                    </Grid>\n                    <Grid item>\n                        <AirQualityAlertProvider>\n                            <AirQualityAlerts onButtonClick={loggedIn ? null : openLoginPopup} />\n                        </AirQualityAlertProvider>\n                    </Grid>\n                </Grid>\n            )}\n        </LoginPopupHandler>\n    );\n};\n\nexport default ProjectReservedArea;\n","import { Chip, Tooltip, Skeleton } from '@mui/material';\n\n// Custom Chip component to display metadata\nconst CustomChip = (props) => {\n    const { tooltipTitle, label, ...otherProps } = props;\n\n    const chip = (\n        <Chip\n            size=\"small\"\n            label={label || <Skeleton variant=\"text\" sx={{ minWidth: '5rem' }} />}\n            {...otherProps}\n        />\n    );\n\n    return tooltipTitle ? (\n        <Tooltip title={tooltipTitle} enterDelay={0} leaveDelay={200}>\n            {chip}\n        </Tooltip>\n    ) : chip;\n}\n\nexport default CustomChip;","// disable eslint for this file\n/* eslint-disable */\n\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Box, Menu, MenuItem, MenuList } from \"@mui/material\";\nimport CustomChip from \"./CustomChip\";\n\nimport PlaceIcon from '@mui/icons-material/Place';\nimport { LocalStorage } from \"../Utils/LocalStorage\";\nimport { AppRoutes } from \"../Utils/AppRoutes\";\n\nimport * as Tracking from '../Utils/Tracking';\n\nimport { DashboardContext } from \"../ContextProviders/DashboardContext\";\nimport { UserContext } from \"../ContextProviders/UserContext\";\n\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\n\nconst SchoolSelector = () => {\n  const { currentSchoolID, schoolMetadata } = useContext(DashboardContext);\n  const { user } = useContext(UserContext);\n\n  // If there is only one school, return a Chip displaying the name of that school\n  if (!Array.isArray(user.allowedSchools) || user.allowedSchools.length <= 1)\n    return (\n      <CustomChip\n        icon={<PlaceIcon />}\n        label={schoolMetadata?.name || \"No School Name Given\"}\n        tooltipTitle={\"School\"}\n      />\n    );\n\n  // Else, display a drop down menu that allows choosing between different schools\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const navigate = useNavigate();\n\n  const handleItemSelect = (newSchoolID) => () => {\n    if (currentSchoolID !== newSchoolID) {\n      localStorage.setItem(LocalStorage.schoolID, newSchoolID)\n\n      Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n        {\n          origin_school: currentSchoolID,\n          destination_school_id: newSchoolID,\n          origin_id: 'school_selector'\n        });\n\n      navigate(`${AppRoutes.dashboard}/${newSchoolID}`)\n    }\n    handleClose();\n  };\n\n  const returnChipLabel = () => {\n    return (\n      <Box sx={{\n        '& svg': {\n          fontSize: \"1rem\", verticalAlign: \"sub\", marginLeft: \"0.25rem\"\n        }\n      }\n      }>\n        {schoolMetadata?.name || \"Loading...\"}\n        {Boolean(anchorEl) ? (\n          <ArrowDropUpIcon />\n        ) : (\n          <ArrowDropDownIcon />\n        )}\n      </Box>\n    );\n  };\n\n  return (\n    <>\n      <CustomChip\n        icon={<PlaceIcon />}\n        label={returnChipLabel()}\n        tooltipTitle={\"Click to Select School\"}\n        clickable\n        onClick={handleClick}\n        aria-controls={open ? 'basic-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n      />\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        <MenuList dense>\n          {user.allowedSchools.map((school, index) => (\n            <MenuItem\n              key={index}\n              onClick={handleItemSelect(school.school_id)}\n            >\n              {school.name}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Menu>\n    </>\n  );\n};\n\nexport default SchoolSelector;","import { useContext } from \"react\";\nimport { DashboardContext } from \"../../ContextProviders/DashboardContext\";\n// import { MetadataContext } from \"../../ContextProviders/MetadataContext\";\nimport { Grid } from \"@mui/material\";\n\nimport SchoolSelector from \"../../Components/SchoolSelector\";\nimport CustomChip from \"../../Components/CustomChip\";\n\nimport PersonIcon from '@mui/icons-material/Person';\nimport EmailIcon from '@mui/icons-material/Email';\n// import BarChartIcon from '@mui/icons-material/BarChart';\n// import CommentIcon from '@mui/icons-material/Comment';\n\n// import * as Tracking from '../../Utils/Tracking';\n// import { scrollToSection } from \"../../Components/Header/MenuItemAsNavLink\";\n\n// import sectionData from '../../section_data.json';\n// import { HYVOR_PAGE_NAME, NYUAD } from \"../../Utils/GlobalVariables\";\n\n\n// Temporarily not using HyvorTalk comment anymore\n// const GridOfMetadataChips = ({ displayCommentSection }) => {\nconst GridOfMetadataChips = () => {\n    const { schoolMetadata } = useContext(DashboardContext);\n\n    // Temporarily not using HyvorTalk comment anymore\n    // const { commentCounts, fetchCommentCounts, setCommentCounts } = useContext(MetadataContext);\n    // Fetch comment count for NYUAD\n    // useEffect(() => {\n    //     if (!schoolMetadata) return;\n\n    //     const isNYUAD = schoolMetadata.school_id === NYUAD;\n    //     if (isNYUAD && !commentCounts) {\n    //         fetchCommentCounts().then((data) => {\n    //             setCommentCounts(data);\n    //         });\n    //     }\n    // }, [schoolMetadata])\n\n    return (\n        <Grid container item spacing={1} justifyContent=\"center\">\n            <Grid item>\n                <SchoolSelector />\n            </Grid>\n\n            <Grid item>\n                <CustomChip\n                    icon={<PersonIcon />}\n                    label={schoolMetadata?.contactPerson}\n                    tooltipTitle=\"Contact Person\"\n                />\n            </Grid>\n\n            <Grid item>\n                <CustomChip\n                    icon={<EmailIcon />}\n                    label={schoolMetadata?.contactEmail}\n                    tooltipTitle=\"Contact Email\"\n                    component=\"a\"\n                    href={`mailto:${schoolMetadata?.contactEmail}`}\n                    clickable\n                />\n            </Grid>\n\n            {/* <Grid item>\n                <CustomChip\n                    icon={<BarChartIcon />}\n                    label={`${Object.keys(allChartsData).length || \"...\"} Chart${Object.keys(allChartsData).length !== 1 ? 's' : ''}`}\n                    tooltipTitle=\"Number of Charts\"\n                    onClick={() => {\n                        scrollToSection(sectionData.charts.id);\n                        Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                            {\n                                destination_id: sectionData.charts.id,\n                                destination_label: sectionData.chartData?.toString(),\n                                origin_id: 'chip'\n                            });\n                    }}\n                />\n            </Grid> */}\n\n            {/* Temporarily not using HyvorTalk comment anymore\n            {(displayCommentSection === true && commentCounts !== null) ?\n                (\n                    <Grid item>\n                        <CustomChip\n                            icon={<CommentIcon />}\n                            label={`${commentCounts[HYVOR_PAGE_NAME]} Comment${commentCounts[HYVOR_PAGE_NAME] > 1 ? \"s\" : \"\"}`}\n                            tooltipTitle=\"Number of Comments\"\n                            onClick={() => {\n                                scrollToSection(sectionData.commentSection.id);\n                                Tracking.sendEventAnalytics(Tracking.Events.internalNavigation,\n                                    {\n                                        destination_id: sectionData.commentSection.id,\n                                        destination_label: sectionData.commentSection.toString(),\n                                        origin_id: 'chip'\n                                    })\n                            }}\n                        />\n                    </Grid>\n                ) : null} */}\n        </Grid>\n    )\n}\n\nexport default GridOfMetadataChips;","import { Skeleton, Typography, useTheme } from \"@mui/material\";\nimport parse from 'html-react-parser';\nimport { replacePlainHTMLWithMuiComponents } from \"../../Utils/UtilFunctions\";\nimport { useContext } from \"react\";\nimport { DashboardContext } from \"../../ContextProviders/DashboardContext\";\n\nconst ProjectDescription = () => {\n    const theme = useTheme();\n    const { schoolMetadata } = useContext(DashboardContext);\n\n    if (schoolMetadata) return (\n        <Typography\n            component=\"div\"\n            variant=\"body1\"\n            color=\"text.secondary\"\n            sx={{\n                textAlign: 'justify', pb: 2, mb: 0, \"& table *\": {\n                    color: `${theme.palette.text.secondary}`\n                }\n            }}\n            gutterBottom\n        >\n            {\n                parse(schoolMetadata.description || '', {\n                    replace: replacePlainHTMLWithMuiComponents,\n                })\n            }\n        </Typography>\n    )\n    else {\n        return (\n            Array.from({ length: 3 }).map((_, index) => (\n                <Skeleton key={index} variant='text' />\n            ))\n        )\n    }\n}\n\nexport default ProjectDescription;","import { Stack, Button } from \"@mui/material\";\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useContext } from \"react\";\nimport { DashboardContext } from \"../../ContextProviders/DashboardContext\";\n\nconst LoadMoreButton = () => {\n    const { loadMoreCharts, setLoadMoreCharts } = useContext(DashboardContext);\n\n    if (loadMoreCharts === false) {\n        return (\n            <Stack sx={{ mt: 6, mx: 'auto', maxWidth: 'sm' }}>\n                <Button\n                    variant=\"contained\"\n                    onClick={() => {\n                        setLoadMoreCharts(true);\n                    }}\n                >\n                    <KeyboardArrowDownIcon sx={{ fontSize: '1rem' }} />&nbsp;Load More Charts\n                </Button>\n            </Stack>\n        )\n    }\n    else {\n        return null;\n    }\n}\n\nexport default LoadMoreButton;","// disable eslint for this file\n/* eslint-disable */\nimport { useState, useEffect, useContext } from 'react';\nimport ChartComponentWrapper from '../../Graphs/ChartComponentWrapper';\nimport UppercaseTitle from '../../Components/UppercaseTitle';\n\n// Temporarily not using HyvorTalk comment anymore\n// import CommentSection from '../../Components/CommentSection';\n// import { HYVOR_PAGE_NAME } from '../../Utils/GlobalVariables';\n\nimport { Box, Container, Divider, Grid, Stack } from '@mui/material';\n\nimport ThemePreferences from '../../Themes/ThemePreferences';\n\nimport AirQualityIndexLegendQuickGlance from '../../Components/AirQuality/AirQualityIndexLegendQuickGlance';\n\nimport sectionData from '../../section_data.json';\n\nimport FullWidthBox from '../../Components/FullWidthBox';\n\nimport CurrentAQIGrid from '../../Components/AirQuality/CurrentAQIGrid';\n\nimport LoadingAnimation from '../../Components/LoadingAnimation';\n\nimport { MetadataContext } from '../../ContextProviders/MetadataContext';\n\nimport NYUADbanner from '../Embeds/NYUADbanner';\n\nimport { DashboardContext } from '../../ContextProviders/DashboardContext';\nimport { PreferenceContext } from '../../ContextProviders/PreferenceContext';\n\nimport AQIexplanation from '../../Components/AirQuality/AQIexplanation';\nimport { DateRangePickerProvider } from '../../ContextProviders/DateRangePickerContext';\nimport { AxesPickerProvider } from '../../ContextProviders/AxesPickerContext';\nimport { NYUAD } from '../../Utils/GlobalVariables';\n\nimport ProjectReservedArea from './ProjectReservedArea';\nimport GridOfMetadataChips from './GridOfMetadataChips';\nimport ProjectDescription from './ProjectDescription';\nimport LoadMoreButton from './LoadMoreButton';\n\nconst Project = () => {\n  const { setChartsTitlesList } = useContext(MetadataContext);\n\n  const { schoolMetadata, currentSensorMeasurements, allChartsData } = useContext(DashboardContext);\n  const { themePreference, temperatureUnitPreference } = useContext(PreferenceContext);\n\n  // Temporarily not using HyvorTalk comment anymore\n  // const [displayCommentSection, setDisplayCommentSection] = useState(false);\n\n  const [displayMapOfSensors, setDisplayMapOfSensors] = useState(false);\n\n  // If NYUAD, display comment section and map of sensors\n  useEffect(() => {\n    if (!schoolMetadata) return;\n\n    const isNYUAD = schoolMetadata.school_id === NYUAD;\n\n    // Temporarily not using HyvorTalk comment anymore\n    // setDisplayCommentSection(isNYUAD);\n\n    setDisplayMapOfSensors(isNYUAD);\n  }, [schoolMetadata]);\n\n  // Update the chart title list for quick navigation\n  useEffect(() => {\n    if (!allChartsData) return;\n\n    const chartsTitles = Object.keys(allChartsData).map((key, index) => ({ chartTitle: allChartsData[key]?.title || \"\", chartID: `chart-${index + 1}` }));\n\n    setChartsTitlesList(chartsTitles);\n  }, [allChartsData]);\n\n  const getDashboardTitle = () => {\n    if (schoolMetadata?.school_id) return `Air Quality | ${schoolMetadata?.school_id}`\n  }\n\n  const displayCharts = () => {\n    // Display if there are at least one chart\n    if (Object.keys(allChartsData).length > 0) {\n      return (\n        <>\n          {Object.keys(allChartsData).map((chartID, index) => (\n            <FullWidthBox\n              key={chartID}\n              backgroundColor={index % 2 !== 0 ? 'customAlternateBackground' : ''}\n            >\n              <Container\n                sx={{ pt: 4, pb: 4 }}\n                height=\"auto\"\n                className={themePreference === ThemePreferences.dark ? 'dark' : ''}\n                id={`chart-${index + 1}`}\n              >\n\n                <AxesPickerProvider>\n                  <DateRangePickerProvider>\n                    <ChartComponentWrapper\n                      chartTitle={allChartsData[chartID].title}\n                      generalChartSubtitle={allChartsData[chartID].subtitle}\n                      generalChartReference={allChartsData[chartID].reference}\n                      chartData={{\n                        chartIndex: index,\n                        ...allChartsData[chartID],\n                      }}\n                      chartID={chartID}\n                      chartIndex={index}\n                    />\n                  </DateRangePickerProvider>\n                </AxesPickerProvider>\n                {\n                  // Optionally display the button to load more charts at the bottom of the last chart\n                  // (if not already fetched every chart)\n                  (index === Object.keys(allChartsData).length - 1) ?\n                    <LoadMoreButton /> : null\n                }\n              </Container>\n            </FullWidthBox>\n          ))}\n\n        </>\n      );\n    } else {\n      // Else display loading animation\n      return <LoadingAnimation optionalText=\"Loading Visualizations\" />;\n    }\n  };\n\n  return (\n    <Box width=\"100%\">\n      <AirQualityIndexLegendQuickGlance />\n\n      <FullWidthBox backgroundColor='customAlternateBackground'>\n        <Container sx={{ pt: 2, pb: 2 }}>\n          <Grid container spacing={1.5} sx={{ mb: 4 }}>\n            <Grid item xs={12}>\n              <UppercaseTitle\n                text={getDashboardTitle()}\n                textAlign=\"center\"\n                sx={{ pb: 0 }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <GridOfMetadataChips\n              // Temporarily not using HyvorTalk comment anymore\n              // displayCommentSection={displayCommentSection}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {/* Reserved area that requires an account, even for public schools */}\n              <ProjectReservedArea />\n            </Grid>\n          </Grid>\n\n          {displayMapOfSensors === true &&\n            (\n              <NYUADbanner\n                initialNyuadCurrentData={currentSensorMeasurements}\n                isOnBannerPage={false}\n                themePreference={themePreference}\n                minMapHeight={\"250px\"}\n              />\n            )\n          }\n\n          {displayMapOfSensors === false &&\n            (<Box textAlign=\"center\" sx={{ mb: 2 }}>\n              <CurrentAQIGrid\n                currentSensorsData={currentSensorMeasurements}\n                isScreen={false}\n                temperatureUnitPreference={temperatureUnitPreference}\n              />\n            </Box>)\n          }\n\n          <ProjectDescription />\n\n          <AQIexplanation />\n\n        </Container>\n      </FullWidthBox>\n\n      <Box id={sectionData.charts.id}>\n        {displayCharts(allChartsData)}\n      </Box>\n      <Divider />\n\n      {/* Temporarily not using HyvorTalk comment anymore\n      {displayCommentSection === true &&\n        <FullWidthBox id={sectionData.commentSection.id} sx={{ pt: 3, pb: 4 }}>\n          <CommentSection pageID={HYVOR_PAGE_NAME} />\n        </FullWidthBox>\n      } */}\n    </Box >\n  );\n};\n\nexport default Project;\n\n","// disable eslint for this file\n/* eslint-disable */\nimport { useEffect, useContext } from \"react\";\n\nimport Project from \"./Project/Project\";\n\nimport { MetadataContext } from \"../ContextProviders/MetadataContext\";\n\nimport { AppRoutes } from \"../Utils/AppRoutes\";\nimport { CITIESair, NUMBER_OF_CHARTS_TO_LOAD_INITIALLY } from \"../Utils/GlobalVariables\";\nimport { UserContext } from \"../ContextProviders/UserContext\";\nimport { DashboardContext } from \"../ContextProviders/DashboardContext\";\nimport { ChartAPIendpointsOrder } from \"../API/Utils\";\nimport { fetchDataFromURL } from \"../API/ApiFetch\";\nimport { getChartApiUrl } from \"../API/ApiUrls\";\n\nconst Dashboard = () => {\n  const { user } = useContext(UserContext);\n  const { loadMoreCharts, setIndividualChartData, currentSchoolID } = useContext(DashboardContext);\n\n  // Update the page's title based on currentSchoolID\n  useEffect(() => {\n    if (!currentSchoolID) return;\n\n    document.title = `${CITIESair} | ${currentSchoolID.toUpperCase()}`;\n  }, [currentSchoolID]);\n\n  // Update current page type\n  const { setCurrentPage } = useContext(MetadataContext);\n  useEffect(() => {\n    setCurrentPage(AppRoutes.dashboard);\n  }, []);\n\n  // Fetch data for the project\n  useEffect(() => {\n    if (!currentSchoolID) return;\n\n    const chartsToFetch = loadMoreCharts ? ChartAPIendpointsOrder : ChartAPIendpointsOrder.slice(0, NUMBER_OF_CHARTS_TO_LOAD_INITIALLY);\n    chartsToFetch.forEach((endpoint, index) => {\n      setIndividualChartData(index, {}); // set empty chartData to create a placeholder for this chart\n\n      fetchDataFromURL({\n        url: getChartApiUrl({\n          endpoint: endpoint,\n          school_id: currentSchoolID\n        })\n      })\n        .then(data => {\n          setIndividualChartData(index, data);\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n    });\n  }, [user, currentSchoolID]);\n\n  return (\n    <Project />\n  )\n};\n\nexport default Dashboard;"],"names":["Explanation","AQIexplanation","themePreference","useContext","PreferenceContext","_jsx","ExpandableSection","title","icon","InfoIcon","sx","fontSize","content","_jsxs","Box","children","AirQualityIndexTable","Typography","component","variant","color","mt","parse","replace","replacePlainHTMLWithMuiComponents","StyledTable","styled","Table","shouldForwardProp","prop","_ref","theme","tiny","minWidth","palette","text","secondary","breakpoints","down","fontWeight","primary","lineHeight","props","hideAQIDescription","returnFormattedBreakpoints","low","high","Infinity","concat","_Fragment","overflow","size","TableHead","TableRow","TableCell","pr","width","height","pl","align","CITIESair","TableBody","AQI_Database","map","element","index","border","backgroundColor","category","whiteSpace","aqiUS","rawPM2_5","description","healthSuggestions","outdoors","StyledAccordion","MuiAccordion","expanded","backgroundImage","background","default","boxShadow","shadows","transition","StyledAccordionSummary","MuiAccordionSummary","_ref2","marginTop","spacing","flexDirection","paddingLeft","textDecoration","main","marginBottom","TooltipText","disabled","setExpanded","useState","undefined","onChange","panel","event","isExpanded","Tracking","expandSection","collapseSection","section","expandIcon","ArrowDropDownIcon","id","Tooltip","enterDelay","leaveDelay","ml","MuiAccordionDetails","pt","UppercaseTitle","otherProps","display","textTransform","pb","Skeleton","SELECT_ALL","ITEM_HEIGHT","ITEM_PADDING_TOP","SeriesSelector","items","itemsFromChart","selectorID","allowMultiple","seriesLabel","onSeriesSelection","displayChip","useTheme","MenuProps","PaperProps","style","maxHeight","customAlternateBackground","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","setItems","selectAll","setSelectAll","useEffect","every","item","selected","handleChange","target","value","includes","updatedItems","newDataColumns","selectedItems","filter","label","some","selectedItem","handleItemToggle","existingItem","Stack","direction","alignItems","FormControl","borderRadius","shape","Select","labelId","multiple","renderValue","VisibilityIcon","length","renderedLabel","MenuItem","Checkbox","checked","onClick","p","transform","Radio","borderTop","borderColor","position","bottom","zIndex","justifyContent","Switch","Grid","container","Chip","onDelete","ChartControlType","CategoryFilter","stackDirection","DateRangeFilter","ChartRangeFilter","NumberRangeFilter","generateRandomID","Math","random","toString","substr","hideAnnotations","stem","textStyle","opacity","boxStyle","returnResponsiveFontSizeInPixels","isPortrait","isSmaller","returnGenericOptions","_chartData$subcharts","_chartData$options","_chartData$options2","_chartData$options2$b","_chartData$options3","_chartData$options4","_chartData$options4$c","_chartData$options4$c2","_chartData$options5","_chartData$options5$c","_chartData$options5$c2","_chartData$options6","_chartData$options6$c","_chartData$options6$c2","_chartData$options7","_chartData$options7$c","_chartData$options7$c2","_chartData$options8","_chartData$options8$w","_chartData$options9","_chartData$options9$w","_chartData$options$le","_chartData$options10","_chartData$options10$","_options$vAxis$format","_options$vAxis","_options$vAxis$title","_options$vAxis2","_options$vAxis$viewWi","_options$vAxis3","_options$vAxis3$viewW","_options$vAxis$viewWi2","_options$vAxis4","_options$vAxis4$viewW","_options$vAxis$viewWi3","_options$vAxis5","_options$vAxis5$viewW","_options$hAxis$title","_options$hAxis","_options$vAxis6","_options$vAxis7","_options$vAxis7$gridl","_options$hAxis2","_options$hAxis3","_options$hAxis3$gridl","_options$hAxis4","_options$hAxis5","_options$hAxis5$gridl","_options$annotations","chartData","subchartIndex","axisTitleTextStyle","italic","bold","chart","axisTitle","axisTextStyle","axisText","options","subcharts","curveType","crosshair","orientation","trigger","fill","chartArea","portrait","landscape","tooltip","isHtml","showColorCode","legend","alignment","scrollArrows","activeColor","inactiveColor","pagingTextStyle","vAxis","format","viewWindow","min","max","hAxis","slantedText","slantedTextAngle","colors","optionsColors","series","Object","values","forEach","_serie","serie","trendlines","_item","colorAxis","colorAxisFirstColor","multiColor","colorIndex","NYUpurple","colorAxes","titleTextStyle","gridlines","minorGridlines","count","annotations","highContrast","contrastText","thickness","rx","ry","annotationBoxFill","fillOpacity","pointSize","returnChartControlUI","_chartControl$options","chartControl","mainChartData","mainChartOptions","chartControlUI","ui","snapToData","controlType","chartType","chartView","columns","chartOptions","textPosition","addTouchEventListenerForChartControl","controlWrapper","chartID","touchHandler","first","changedTouches","type","simulatedEvent","MouseEvent","bubbles","cancelable","view","window","detail","screenX","screenY","clientX","clientY","button","relatedTarget","dispatchEvent","preventDefault","isMounted","controlDOM","document","querySelector","touchEvent","addEventListener","capture","removeEventListener","gradientBackgroundId","maxWidth","padding","mozBoxShadow","webkitBoxShadow","secondaryRGB","margin","verticalAlign","paper","paddingTop","paddingBottom","paddingRight","borderWidth","top","left","right","stroke","strokeWidth","cursor","normalizeColorStops","optionalMinValue","optionalMaxValue","isValidArray","offset","totalColors","clampedStops","colorStop","offsets","normalizedOffsets","minOffset","maxOffset","normalizeColorStopOffsets","rgbToHex","r","g","b","x","hex","join","interpolateColor","color1","color2","factor","result","slice","i","round","generateDiscreteColorGradientArray","_ref3","numSteps","normalizedColors","m","exec","parseInt","hexToRgb","colorArray","stepPositions","Array","from","_","pos","offset1","offset2","j","interpolatedColor","push","generateCssBackgroundGradient","_ref4","gradientDirection","generateSvgFillGradient","_ref5","BackgroundGradient","_ref6","visibility","x1","y1","x2","y2","stopColor","valueRange","minValue","maxValue","rangeBoxMinValue","rangeBoxMaxValue","calculateMarkerPositionOnRangeBox","labelStyle","textAlign","bottomLabelStyle","triangleStyle","borderLeft","borderRight","topTriangleStyle","bottomTriangleStyle","borderBottom","my","float","day","tooltipText","dateRange","inFirstTwoRowsOfChart","tooltipBoxRef","useRef","current","parentDiv","parentElement","ref","className","mr","getCalendarChartMargin","_options$legend","_options$colorAxis","_options$colorAxis2","_options$colorAxis3","_options$colorAxis4","dataArray","valueRangeBoxTitle","windowSize","setDateRange","setValueRange","calendarHeight","setCalendarHeight","thisDateRange","dateStrings","reduce","getDateRangeForCalendarChart","getValueRangeForCalendarChart","numberOfYears","Date","getFullYear","calendarChartMargin","totalHeight","displayLegend","dateStr","date","dayOfWeek","getDay","isFirstTwoDaysOfWeek","firstYear","isInFirstYear","calendarCellColors","gradientSteps","GoogleChartStyleWrapper","ValueRangeBox","overflowY","ResponsiveCalendar","data","to","emptyColor","yearSpacing","monthBorderColor","monthBorderWidth","daySpacing","dayBorderWidth","tooltipData","find","DOMParser","parseFromString","body","innerHTML","TooltipCalendarChart","today","last14Days","range","startDate","startOfDay","addDays","endDate","endOfDay","last30Days","last365Days","allTime","minDateOfDataset","formattedMinDate","returnCustomStaticRanges","aggregationType","AggregationType","month","year","AggregationTypeMetadata","hour","maxDays","StyledDateRangePicker","Paper","showPickerPanel","smallScreen","action","customBackground","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","returnFormattedDates","startDateObject","endDateObject","AggregationTypeToggle","setAggregationType","ToggleButtonGroup","exclusive","newType","fullWidth","_AggregationTypeMetad","ToggleButton","px","py","DateRangePickerContext","createContext","initDateRange","key","DateRangePickerProvider","contextValue","useMemo","Provider","useDateRangePicker","historicalChartIndex","ChartAPIendpointsOrder","findIndex","endpoint","ChartAPIendpoints","historical","enqueueSnackbar","useSnackbar","dataType","currentSchoolID","setIndividualChartData","DashboardContext","useMediaQuery","isSameDay","differenceInDays","maxAllowedDays","SnackbarMetadata","error","requestNewDataFromApi","chartUrl","setChartUrl","setShowPickerPanel","paperRef","isFetchingData","setIsFetchingData","handleClickOutside","contains","defaultRange","arguments","formattedDates","newUrl","getHistoricalChartApiUrl","school_id","fetchDataFromURL","url","then","catch","console","log","xs","sm","elevation","pointerEvents","DateRangePicker","ranges","selection","staticRanges","createStaticRanges","inputRanges","rangeColors","minDate","maxDate","months","showMonthAndYearPickers","fixedHeight","preventSnapRefocus","startDatePlaceholder","endDatePlaceholder","editableDateInputs","showMonthArrow","weekStartsOn","CircularProgress","disableShrink","AxesPickerContext","AxesPickerProvider","setHAxis","setVAxis","useAxesPicker","correlationChartIndex","correlationDailyAverage","LeftSelect","RightSelect","allowedAxes","selectedAxes","shouldDisableApplyButton","setShouldDisableApplyButton","receivedHAxis","receivedVAxis","shouldDisableOption","option","allowedDataTypes","InputLabel","newHAxis","autoWidth","sensor","Button","applyChanges","getCorrelationChartApiUrl","sensorX","sensorY","selectableAxes","messagePrefix","messageSuffix","Alert","severity","SubChart","selectedDataType","google","GoogleContext","dataTable","setDataTable","chartWrapper","setChartWrapper","setControlWrapper","previousChartData","setPreviousChartData","isFirstRender","setIsFirstRender","shouldRenderChart","setShouldRenderChart","renderChartNow","setRenderChartNow","allInitialColumns","setAllInitialColumns","dataColumns","setDataColumns","initialVAxisRange","setInitialVAxisRage","__","calendarDataArray","setCalendarDataArray","NivoCalendarChart","returnSelectedDataType","dataTypeKey","dataTypes","showUnit","NoChartToRender","LoadingAnimation","chartControlOptions","hasChartControl","control","seriesSelector","dateRangePicker","formatters","handleSeriesSelection","setOptions","draw","method","setInitialColumnsColors","col","_options$series2","seriesIndex","serieAttribute","getInitialVAxisRange","vAxisMin","vAxisMax","getColumnRange","sourceColumn","isNaN","useCallback","_allInitialColumns","_chartWrapper","_controlWrapper","hiddenSeriesObject","enableInteractivity","visibleInLegend","currentControlOptions","getOptions","newViewColumns","dataColumn","indexIn_","role","setView","newOptions","selectedSeriesCount","JSON","stringify","_shouldRenderChart","visualization","arrayToDataTable","hasOwnProperty","numberFormat","NumberFormat","numberFormatter","reconstructedColumns","evaluatedColumns","column","calc","calcFunction","Function","reconstructFunctionFromJSONstring","thisChartWrapper","ChartWrapper","containerId","thisControlWrapper","thisDashboardWrapper","Dashboard","getElementById","events","addListener","onChartReady","ControlWrapper","bind","initAllInitialColumns","initDataColumns","initialView","getView","viewFromDataTable","DataView","shouldAssignDomainRoleToFistColumn","dataSeriesIndex","getColumnLabel","indexInAllInitialColumns","defaultSeriesToDisplayInitially","_options$series","_options$series$col$s","getInitialColumns","gradientBackgroundColor","svgFillGradient","_options$vAxis2$viewW","minHeight","gap","CustomDateRangePicker","AxesPicker","renderChart","chartContainer","_ChartControlType$cha","parseFloat","wordLimit","reference","setIsExpanded","isMobile","subtitleRef","words","split","displayText","lastFullStop","lastIndexOf","ClickAwayListener","onClickAway","subtitleParent","closest","chartElements","Set","has","tagName","parentNode","isClickWithinSharedParent","fetchChartDataType","anchorEl","setAnchorEl","name_title","open","Boolean","handleClose","currentTarget","Menu","onClose","MenuListProps","handleMenuItemClick","Tabs","smallFontSize","ChartStyleWrapper","mode","overflowX","scrollbarGutter","StyledMenuItem","chartTitle","generalChartSubtitle","generalChartReference","passedChartData","chartHeight","passedChartHeight","chartIndex","isSmallWidth","setIsPortrait","matchMedia","matches","setWindowSize","innerWidth","innerHeight","chartMaxHeight","currentTab","setCurrentTab","previousTab","setPreviousTab","dropdownMenuTabIndex","setDropdownMenuTabIndex","dropdownMenuCurrentTitle","setDropdownMenuCurrentTitle","setAllowedDataTypes","setSelectedDataType","dataTypesArr","name_short","unit","DataTypes","timeoutID","handleWindowResize","clearTimeout","setTimeout","DataTypeDropDownMenu","async","getChartApiUrl","renderMultipleSubcharts","needsDropdownMenu","MAX_NUM_TABS_TO_DISPLAY","subchartsDataForTabs","subchartsDataForDropDownMenu","shouldDisplayThisSubchart","StyledTabs","handleTabChange","newIndex","Tab","subchartTitle","flex","ExpandMoreIcon","subchartTitleShort","handleDropdownMenuSelection","WebkitOverflowScrolling","currentSubchart","mb","CollapsibleSubtitle","getSubtitles","_chartData$subcharts$","subchartSubtitle","getReferences","_chartData$subcharts$2","AirQualityIndexLegendQuickGlance","handlePopperOpen","airQualityIndexLegendQuickGlance","handlePopperClose","FadeInButtonForSpeedDial","distanceFromBottomOfWindow","Fab","onMouseEnter","onMouseLeave","AirIcon","Popper","placement","keepMounted","TransitionProps","Fade","timeout","mx","openLoginPopup","authenticationState","user","UserContext","loggedIn","authenticated","checkedAuthentication","handleRestrictedAccess","allowedSchools","school","toUpperCase","onButtonClick","schoolMetadata","useLoginHandler","navigate","useNavigate","screens","handleSingleScreenClick","TvIcon","handleMenuClose","screen","screenName","screen_name","location_long","buttonIcon","buttonIconAria","buttonLabel","buttonVariant","trackingEvent","dialogTitle","dialogOpenHandler","dialogCloseHandler","displaySchoolID","iconOnly","setOpen","onOpen","IconButton","Dialog","fullScreen","DialogActions","ChevronLeftIcon","DialogTitle","DialogContent","DatasetDownloadDialog","currentSensorMeasurements","sensorsDatasets","updateSensorsDatasets","previewingDataset","setPreviewingDataset","acc","location_short","location_type","last_seen","rawDatasets","keys","reverse","datasetAcc","datasetKey","sample","full","CustomDialog","DataObjectIcon","rawDatasetButtonClicked","DatasetSelectorAndPreviewer","schoolID","fontStyle","Link","href","firstSensor","initialDatasetType","datasetType","getRawDatasetUrl","sensor_location_short","isSample","extension","SupportedFetchExtensions","csv","needsAuthorization","tmp","md","DatasetsTable","PreviewDataset","tableLayout","Dataset","isPreviewing","selectedDatasetType","setSelectedDatasetType","fetchThisDataset","NYUpurpleLight","setThisSensorToPreview","selectedVal","disablePortal","charAt","toLowerCase","previewingDatasetName","setPreviewingDatasetName","csvFileName","setCsvFileName","isDatasetLoading","setIsDatasetLoading","convertCSVforDownload","dataset","blob","Blob","URL","createObjectURL","downloadLink","createElement","download","appendChild","click","revokeObjectURL","removeChild","formattedData","setFormattedData","rowNumber","setRowNumber","_sensorsDatasets$prev","_sensorsDatasets$prev2","csvData","lines","headers","rows","dateString","row","fontFamily","gutterBottom","userSelect","optionalText","downloadPreviewingDataset","fetchedDataset","rawDatasetDownloaded","dataset_type","DownloadIcon","AlertTypes","threshold","name","tableColumnHeader","SpeedIcon","daily","CalendarMonthIcon","ThresholdAlertTypes","below_threshold","sign","above_threshold","returnHoursFromMinutesPastMidnight","minutes","floor","padStart","CrudTypes","SharedColumnHeader","HOURS","minutesPastMidnight","PREDEFINED_TIMERANGES","allday","fromToLabel","schoolHour","custom","AirQualityAlertContext","AirQualityAlertKeys","alert_type","sensor_id","datatypekey","threshold_value","days_of_week","minutespastmidnight","time_range","is_enabled","excluded_dates","owner_role","self_is_owner","is_allowed_to_modify","message","max_once_a_day","parent_alert_id","child_alert","has_child_alert","getAlertDefaultPlaceholder","localAlertType","localOppositeAlertType","AirQualityAlertProvider","selectedAlert","setSelectedAlert","editingAlert","setEditingAlert","allowedDataTypesForSensor","setAllowedDataTypesForSensor","alerts","setAlerts","hasFetchedAlerts","setHasFetchedAlerts","alertEmails","setAlertEmails","returnAllowedDataTypesForThisSensor","sensors","sensorData","elem","allowedDataTypesForThisSensor","addChildToAlerts","processed","alert","parent","a","fetchAlerts","getAlertsApiUrl","GeneralAPIendpoints","getApiUrl","alertsEmails","useAirQualityAlert","EmailsInput","localEmails","setLocalEmails","emailsListChanged","setEmailsListChanged","currentEmail","setCurrentEmail","menuAnchor","setMenuAnchor","saveButtonTooltipTitle","setSaveButtonTooltipTitle","compareArrays","arr1","arr2","handleAddEmail","passedEmail","email","trim","validateEmail","newEmails","warning","handleDeleteEmail","handleBeforeUnload","returnValue","wrap","lg","flexWrap","handleMenuOpen","TextField","e","onKeyUp","onPaste","pastedText","clipboardData","getData","placeholder","InputProps","disableUnderline","enterTouchDelay","_emails","emailsToSave","restMethod","RESTmethods","POST","success","AlertDeletionDialog","onConfirmedDelete","DialogContentText","DialogData","primaryButtonLabel","errorMessage","successMessage","contentText","SimplePicker","marginLeft","timeRange","displayFromToPickers","setDisplayFromToPickers","fromValue","toValue","predefinedRange","setPredefinedRange","match","handleModeChange","newMode","extraSmallScreen","WatchLaterIcon","idx","arr","h","maxLength","showTip","currentLength","multiline","minRows","maxRows","inputProps","DAYS_OF_WEEK","CustomPickersDay","PickersDay","common","white","dark","CustomDayComponent","selectedDates","other","isSelected","dayjs","MultiDaysCalendarPicker","parsedSelectedDates","len","LocalizationProvider","dateAdapter","AdapterDayjs","localeText","calendarWeekNumberHeaderText","calendarWeekNumberText","weekNumber","DateCalendar","displayWeekNumber","slots","dayProps","selectionState","disableHighlightToday","startOf","DateSelector","daysOfWeek","excludedDates","handleDaysOfWeekChange","handleExcludedDatesChange","rowSpacing","columnSpacing","arrow","ThresholdSlider","defaultValue","stepsForThreshold","marks","backgroundCssGradient","invertSelection","showInput","inputUnit","valueLabelDisplay","sliderRangeMin","setSliderRangeMin","sliderRangeMax","setSliderRangeMax","nearestDataIndex","setNearestDataIndex","setError","helperText","setHelperText","findNearestDataIndex","val","greaterMarks","mark","nearestMark","prev","curr","indexOf","localSliderRangeMin","localSliderRangeMax","stripedGradient","sliderSX","black","paperBackgroundGradient","Number","step","Slider","getAriaLabel","handleSliderChange","newValue","ThresholdComponentWrapper","handleValueChange","placeholderValueBeforeDataTypeSelection","disabledSlider","thresholdSlider","currentDataTypeKey","dataTypeColorAxis","color_axis","defaultValueForAlert","database","DataTypeKeys","voc","VOC_Database","aqi","pm2_5","pm10_raw","co2","heat_index_C","HeatIndex_Database","threshold_mapping_name","MaxOnceADayCheckbox","FormGroup","FormControlLabel","FormHelperText","ThresholdTypeToggle","currentAlertType","others","thresholdAlertType","ThresholdType","returnFormattedStatusString","status","tense","AlertPropertyComponents","_schoolMetadata$senso","_DialogData$crudType","_editingAlert$AirQual","_editingAlert$AirQual2","alertTypeKey","crudType","allSensorsOfSchool","capitalizePhrase","isDisabled","PlaceIcon","_theme$palette$chart$","_theme$palette$chart$2","selectedDataTypeKey","defaultValueForChildAlert","validDaysOfWeek","isArray","sort","valueArray","currentExcludedDates","updatedExcludedDates","excludedDate","displayHourPicker","AccessTimeIcon","TimeRangeSelector","newRange","selectedAlertType","oppositeAlertTypeForChildAlert","disabledToggle","OptionalMessage","openAlertModificationDialog","shouldDisableButton","setShouldDisableButton","sanityCheckAlertBeforeSaving","valid","isAbove","childThreshold","removeChildAlertFromParentAlertBody","newBody","formatChildAlertBody","handleAlertModification","passedCrudType","handleFetchError","handleFetchSuccess","createdAlert","prevAlerts","updatedAlerts","createdChildAlert","childError","alert_id","PUT","updatedAlert","child_alert_id","updatedChildAlert","DELETE","alertVal","datatypeKeyVal","isEqual","returnDaysOfWeekString","missingDays","d","_DAYS_OF_WEEK$find","returnAlertNotModifiableString","UserRoles","_AlertTypes$alertType","alertsForTable","setOpenAlertModificationDialog","setCrudType","handleModifyClick","TransitionGroup","Grow","newIsEnabled","prevAlert","handleEnableClick","EditIcon","returnCreatedByString","startIcon","AddAlarmIcon","AlertModificationDialog","AlertTab","alertType","alertsArray","hidden","AlertsTable","AlertsTabs","returnFilteredAlerts","filteredAlerts","_alert$AirQualityAler","parentAlertId","array","alertsLength","newVal","_AlertTypes$Object$ke","_Object$keys","iconPosition","AirQualityAlerts","isModifiable","admin","user_role","NotificationImportantIcon","onLoginSuccess","popupRef","setAuthenticationState","setUser","showVerificationDialog","setShowVerificationDialog","setEmail","popup","AppRoutes","login","focus","intervalId","setInterval","closed","clearInterval","handleMessage","origin","location","LoginTypes","password","is_verified","EmailVerificationDialog","ProjectReservedArea","LoginPopupHandler","handleLoginSuccess","duration","ScreenDropDownMenu","tooltipTitle","chip","SchoolSelector","CustomChip","ArrowDropUpIcon","clickable","MenuList","dense","newSchoolID","localStorage","setItem","LocalStorage","internalNavigation","origin_school","destination_school_id","origin_id","dashboard","GridOfMetadataChips","PersonIcon","contactPerson","EmailIcon","contactEmail","ProjectDescription","LoadMoreButton","loadMoreCharts","setLoadMoreCharts","KeyboardArrowDownIcon","Project","setChartsTitlesList","MetadataContext","allChartsData","temperatureUnitPreference","displayMapOfSensors","setDisplayMapOfSensors","isNYUAD","NYUAD","chartsTitles","_allChartsData$key","FullWidthBox","Container","getDashboardTitle","NYUADbanner","initialNyuadCurrentData","isOnBannerPage","minMapHeight","CurrentAQIGrid","currentSensorsData","isScreen","sectionData","ThemePreferences","ChartComponentWrapper","subtitle","Divider","setCurrentPage","NUMBER_OF_CHARTS_TO_LOAD_INITIALLY"],"sourceRoot":""}